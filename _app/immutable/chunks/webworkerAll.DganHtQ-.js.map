{"version":3,"file":"webworkerAll.DganHtQ-.js","sources":["../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/app/ResizePlugin.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/app/TickerPlugin.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-bitmap/AbstractBitmapFont.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/fill/FillGradient.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/fill/FillPattern.mjs","../../../../../../node_modules/.pnpm/parse-svg-path@0.1.2/node_modules/parse-svg-path/index.js","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/svg/SVGToGraphicsPath.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/maths/shapes/Circle.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/maths/shapes/Ellipse.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/maths/misc/squaredDistanceToLineSegment.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/maths/shapes/Polygon.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/maths/shapes/RoundedRectangle.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/buildUvs.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/transformVertices.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/container/utils/multiplyHexColors.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/BatchableGraphics.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildCircle.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/const.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/utils/getOrientationOfPoints.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildLine.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/utils/triangulateWithHoles.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildPolygon.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildRectangle.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildTriangle.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/utils/buildContextBatches.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/GraphicsContextSystem.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildAdaptiveBezier.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildAdaptiveQuadratic.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArc.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArcTo.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArcToSvg.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/path/roundShape.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/path/ShapePath.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/path/GraphicsPath.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/svg/SVGParser.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/utils/convertFillInputToFillStyle.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/GraphicsContext.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/utils/generateTextStyleKey.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/TextStyle.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/canvas/utils/fontStringFromTextStyle.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/canvas/CanvasTextMetrics.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/canvas/utils/getCanvasFillStyle.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-bitmap/utils/resolveCharacters.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-bitmap/DynamicBitmapFont.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-bitmap/utils/getBitmapTextLayout.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-bitmap/BitmapFontManager.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/filters/FilterPipe.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/container/bounds/getFastGlobalBounds.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/container/bounds/getRenderableBounds.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/filters/FilterSystem.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/Graphics.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/mesh/shared/MeshGeometry.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/utils/textStyleToCSS.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/HtmlTextStyle.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/HTMLTextRenderData.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/utils/measureHtmlText.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/shared/GraphicsPipe.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/mesh-plane/PlaneGeometry.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/mesh/shared/BatchableMesh.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/mesh/shared/MeshPipe.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/sprite-nine-slice/NineSliceGeometry.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/sprite-nine-slice/NineSliceSpritePipe.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/sprite-tiling/shader/tilingBit.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/sprite-tiling/shader/TilingSpriteShader.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/sprite-tiling/utils/QuadGeometry.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/sprite-tiling/utils/setPositions.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/sprite-tiling/utils/applyMatrix.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/sprite-tiling/utils/setUvs.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/sprite-tiling/TilingSpritePipe.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/sdfShader/shader-bits/localUniformMSDFBit.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/sdfShader/shader-bits/mSDFBit.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/sdfShader/SdfShader.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-bitmap/BitmapTextPipe.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/HTMLTextPipe.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/utils/browser/isSafari.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/utils/getPo2TextureFromSource.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/utils/extractFontFamilies.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/utils/loadFontAsBase64.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/utils/loadFontCSS.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/utils/getFontCss.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/utils/getSVGUrl.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/utils/getTemporaryCanvasFromImage.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/utils/loadSVGImage.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/HTMLTextSystem.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/canvas/CanvasTextPipe.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/utils/canvas/getCanvasBoundingBox.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/canvas/CanvasTextSystem.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/app/init.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/graphics/init.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/mesh/init.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text/init.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-bitmap/init.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/text-html/init.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/sprite-tiling/init.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/scene/sprite-nine-slice/init.mjs","../../../../../../node_modules/.pnpm/pixi.js@8.1.8/node_modules/pixi.js/lib/filters/init.mjs"],"sourcesContent":["import { ExtensionType } from '../extensions/Extensions.mjs';\n\n\"use strict\";\nclass ResizePlugin {\n  /**\n   * Initialize the plugin with scope of application instance\n   * @static\n   * @private\n   * @param {object} [options] - See application options\n   */\n  static init(options) {\n    Object.defineProperty(\n      this,\n      \"resizeTo\",\n      /**\n       * The HTML element or window to automatically resize the\n       * renderer's view element to match width and height.\n       * @member {Window|HTMLElement}\n       * @name resizeTo\n       * @memberof app.Application#\n       */\n      {\n        set(dom) {\n          globalThis.removeEventListener(\"resize\", this.queueResize);\n          this._resizeTo = dom;\n          if (dom) {\n            globalThis.addEventListener(\"resize\", this.queueResize);\n            this.resize();\n          }\n        },\n        get() {\n          return this._resizeTo;\n        }\n      }\n    );\n    this.queueResize = () => {\n      if (!this._resizeTo) {\n        return;\n      }\n      this._cancelResize();\n      this._resizeId = requestAnimationFrame(() => this.resize());\n    };\n    this._cancelResize = () => {\n      if (this._resizeId) {\n        cancelAnimationFrame(this._resizeId);\n        this._resizeId = null;\n      }\n    };\n    this.resize = () => {\n      if (!this._resizeTo) {\n        return;\n      }\n      this._cancelResize();\n      let width;\n      let height;\n      if (this._resizeTo === globalThis.window) {\n        width = globalThis.innerWidth;\n        height = globalThis.innerHeight;\n      } else {\n        const { clientWidth, clientHeight } = this._resizeTo;\n        width = clientWidth;\n        height = clientHeight;\n      }\n      this.renderer.resize(width, height);\n      this.render();\n    };\n    this._resizeId = null;\n    this._resizeTo = null;\n    this.resizeTo = options.resizeTo || null;\n  }\n  /**\n   * Clean up the ticker, scoped to application\n   * @static\n   * @private\n   */\n  static destroy() {\n    globalThis.removeEventListener(\"resize\", this.queueResize);\n    this._cancelResize();\n    this._cancelResize = null;\n    this.queueResize = null;\n    this.resizeTo = null;\n    this.resize = null;\n  }\n}\n/** @ignore */\nResizePlugin.extension = ExtensionType.Application;\n\nexport { ResizePlugin };\n//# sourceMappingURL=ResizePlugin.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { UPDATE_PRIORITY } from '../ticker/const.mjs';\nimport { Ticker } from '../ticker/Ticker.mjs';\n\n\"use strict\";\nclass TickerPlugin {\n  /**\n   * Initialize the plugin with scope of application instance\n   * @static\n   * @private\n   * @param {object} [options] - See application options\n   */\n  static init(options) {\n    options = Object.assign({\n      autoStart: true,\n      sharedTicker: false\n    }, options);\n    Object.defineProperty(\n      this,\n      \"ticker\",\n      {\n        set(ticker) {\n          if (this._ticker) {\n            this._ticker.remove(this.render, this);\n          }\n          this._ticker = ticker;\n          if (ticker) {\n            ticker.add(this.render, this, UPDATE_PRIORITY.LOW);\n          }\n        },\n        get() {\n          return this._ticker;\n        }\n      }\n    );\n    this.stop = () => {\n      this._ticker.stop();\n    };\n    this.start = () => {\n      this._ticker.start();\n    };\n    this._ticker = null;\n    this.ticker = options.sharedTicker ? Ticker.shared : new Ticker();\n    if (options.autoStart) {\n      this.start();\n    }\n  }\n  /**\n   * Clean up the ticker, scoped to application.\n   * @static\n   * @private\n   */\n  static destroy() {\n    if (this._ticker) {\n      const oldTicker = this._ticker;\n      this.ticker = null;\n      oldTicker.destroy();\n    }\n  }\n}\n/** @ignore */\nTickerPlugin.extension = ExtensionType.Application;\n\nexport { TickerPlugin };\n//# sourceMappingURL=TickerPlugin.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nclass AbstractBitmapFont extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    /** The map of characters by character code. */\n    this.chars = /* @__PURE__ */ Object.create(null);\n    /**\n     * The line-height of the font face in pixels.\n     * @type {number}\n     */\n    this.lineHeight = 0;\n    /**\n     * The name of the font face\n     * @type {string}\n     */\n    this.fontFamily = \"\";\n    /** The metrics of the font face. */\n    this.fontMetrics = { fontSize: 0, ascent: 0, descent: 0 };\n    /**\n     * The offset of the font face from the baseline.\n     * @type {number}\n     */\n    this.baseLineOffset = 0;\n    /** The range and type of the distance field for this font. */\n    this.distanceField = { type: \"none\", range: 0 };\n    /** The map of base page textures (i.e., sheets of glyphs). */\n    this.pages = [];\n    /** should the fill for this font be applied as a tint to the text. */\n    this.applyFillAsTint = true;\n    /** The size of the font face in pixels. */\n    this.baseMeasurementFontSize = 100;\n    this.baseRenderedFontSize = 100;\n  }\n  /**\n   * The name of the font face.\n   * @deprecated since 8.0.0 Use `fontFamily` instead.\n   */\n  get font() {\n    deprecation(v8_0_0, \"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead.\");\n    return this.fontFamily;\n  }\n  /**\n   * The map of base page textures (i.e., sheets of glyphs).\n   * @deprecated since 8.0.0 Use `pages` instead.\n   */\n  get pageTextures() {\n    deprecation(v8_0_0, \"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead.\");\n    return this.pages;\n  }\n  /**\n   * The size of the font face in pixels.\n   * @deprecated since 8.0.0 Use `fontMetrics.fontSize` instead.\n   */\n  get size() {\n    deprecation(v8_0_0, \"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead.\");\n    return this.fontMetrics.fontSize;\n  }\n  /**\n   * The kind of distance field for this font or \"none\".\n   * @deprecated since 8.0.0 Use `distanceField.type` instead.\n   */\n  get distanceFieldRange() {\n    deprecation(v8_0_0, \"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead.\");\n    return this.distanceField.range;\n  }\n  /**\n   * The range of the distance field in pixels.\n   * @deprecated since 8.0.0 Use `distanceField.range` instead.\n   */\n  get distanceFieldType() {\n    deprecation(v8_0_0, \"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead.\");\n    return this.distanceField.type;\n  }\n  destroy(destroyTextures = false) {\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n    for (const i in this.chars) {\n      this.chars[i].texture?.destroy();\n    }\n    this.chars = null;\n    if (destroyTextures) {\n      this.pages.forEach((page) => page.texture.destroy(true));\n      this.pages = null;\n    }\n  }\n}\n\nexport { AbstractBitmapFont };\n//# sourceMappingURL=AbstractBitmapFont.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { ImageSource } from '../../../../rendering/renderers/shared/texture/sources/ImageSource.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\n\n\"use strict\";\nconst _FillGradient = class _FillGradient {\n  constructor(x0, y0, x1, y1) {\n    this.uid = uid(\"fillGradient\");\n    this.type = \"linear\";\n    this.gradientStops = [];\n    this._styleKey = null;\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n  addColorStop(offset, color) {\n    this.gradientStops.push({ offset, color: Color.shared.setValue(color).toHex() });\n    this._styleKey = null;\n    return this;\n  }\n  // TODO move to the system!\n  buildLinearGradient() {\n    const defaultSize = _FillGradient.defaultTextureSize;\n    const { gradientStops } = this;\n    const canvas = DOMAdapter.get().createCanvas();\n    canvas.width = defaultSize;\n    canvas.height = defaultSize;\n    const ctx = canvas.getContext(\"2d\");\n    const gradient = ctx.createLinearGradient(0, 0, _FillGradient.defaultTextureSize, 1);\n    for (let i = 0; i < gradientStops.length; i++) {\n      const stop = gradientStops[i];\n      gradient.addColorStop(stop.offset, stop.color);\n    }\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, defaultSize, defaultSize);\n    this.texture = new Texture({\n      source: new ImageSource({\n        resource: canvas,\n        addressModeU: \"clamp-to-edge\",\n        addressModeV: \"repeat\"\n      })\n    });\n    const { x0, y0, x1, y1 } = this;\n    const m = new Matrix();\n    const dx = x1 - x0;\n    const dy = y1 - y0;\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    const angle = Math.atan2(dy, dx);\n    m.translate(-x0, -y0);\n    m.scale(1 / defaultSize, 1 / defaultSize);\n    m.rotate(-angle);\n    m.scale(256 / dist, 1);\n    this.transform = m;\n    this._styleKey = null;\n  }\n  get styleKey() {\n    if (this._styleKey) {\n      return this._styleKey;\n    }\n    const stops = this.gradientStops.map((stop) => `${stop.offset}-${stop.color}`).join(\"-\");\n    const texture = this.texture.uid;\n    const transform = this.transform.toArray().join(\"-\");\n    return `fill-gradient-${this.uid}-${stops}-${texture}-${transform}-${this.x0}-${this.y0}-${this.x1}-${this.y1}`;\n  }\n};\n_FillGradient.defaultTextureSize = 256;\nlet FillGradient = _FillGradient;\n\nexport { FillGradient };\n//# sourceMappingURL=FillGradient.mjs.map\n","import { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\n\n\"use strict\";\nconst repetitionMap = {\n  repeat: {\n    addressModeU: \"repeat\",\n    addressModeV: \"repeat\"\n  },\n  \"repeat-x\": {\n    addressModeU: \"repeat\",\n    addressModeV: \"clamp-to-edge\"\n  },\n  \"repeat-y\": {\n    addressModeU: \"clamp-to-edge\",\n    addressModeV: \"repeat\"\n  },\n  \"no-repeat\": {\n    addressModeU: \"clamp-to-edge\",\n    addressModeV: \"clamp-to-edge\"\n  }\n};\nclass FillPattern {\n  constructor(texture, repetition) {\n    this.uid = uid(\"fillPattern\");\n    this.transform = new Matrix();\n    this._styleKey = null;\n    this.texture = texture;\n    this.transform.scale(\n      1 / texture.frame.width,\n      1 / texture.frame.height\n    );\n    if (repetition) {\n      texture.source.style.addressModeU = repetitionMap[repetition].addressModeU;\n      texture.source.style.addressModeV = repetitionMap[repetition].addressModeV;\n    }\n  }\n  setTransform(transform) {\n    const texture = this.texture;\n    this.transform.copyFrom(transform);\n    this.transform.invert();\n    this.transform.scale(\n      1 / texture.frame.width,\n      1 / texture.frame.height\n    );\n    this._styleKey = null;\n  }\n  get styleKey() {\n    if (this._styleKey)\n      return this._styleKey;\n    this._styleKey = `fill-pattern-${this.uid}-${this.texture.uid}-${this.transform.toArray().join(\"-\")}`;\n    return this._styleKey;\n  }\n}\n\nexport { FillPattern };\n//# sourceMappingURL=FillPattern.mjs.map\n","\nmodule.exports = parse\n\n/**\n * expected argument lengths\n * @type {Object}\n */\n\nvar length = {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0}\n\n/**\n * segment pattern\n * @type {RegExp}\n */\n\nvar segment = /([astvzqmhlc])([^astvzqmhlc]*)/ig\n\n/**\n * parse an svg path data string. Generates an Array\n * of commands where each command is an Array of the\n * form `[command, arg1, arg2, ...]`\n *\n * @param {String} path\n * @return {Array}\n */\n\nfunction parse(path) {\n\tvar data = []\n\tpath.replace(segment, function(_, command, args){\n\t\tvar type = command.toLowerCase()\n\t\targs = parseValues(args)\n\n\t\t// overloaded moveTo\n\t\tif (type == 'm' && args.length > 2) {\n\t\t\tdata.push([command].concat(args.splice(0, 2)))\n\t\t\ttype = 'l'\n\t\t\tcommand = command == 'm' ? 'l' : 'L'\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (args.length == length[type]) {\n\t\t\t\targs.unshift(command)\n\t\t\t\treturn data.push(args)\n\t\t\t}\n\t\t\tif (args.length < length[type]) throw new Error('malformed path data')\n\t\t\tdata.push([command].concat(args.splice(0, length[type])))\n\t\t}\n\t})\n\treturn data\n}\n\nvar number = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig\n\nfunction parseValues(args) {\n\tvar numbers = args.match(number)\n\treturn numbers ? numbers.map(Number) : []\n}\n","import parse from 'parse-svg-path';\nimport { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nfunction SVGToGraphicsPath(svgPath, path) {\n  const commands = parse(svgPath);\n  const subpaths = [];\n  let currentSubPath = null;\n  let lastX = 0;\n  let lastY = 0;\n  for (let i = 0; i < commands.length; i++) {\n    const command = commands[i];\n    const type = command[0];\n    const data = command;\n    switch (type) {\n      case \"M\":\n        lastX = data[1];\n        lastY = data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"m\":\n        lastX += data[1];\n        lastY += data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"H\":\n        lastX = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"h\":\n        lastX += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"V\":\n        lastY = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"v\":\n        lastY += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"L\":\n        lastX = data[1];\n        lastY = data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"l\":\n        lastX += data[1];\n        lastY += data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"C\":\n        lastX = data[5];\n        lastY = data[6];\n        path.bezierCurveTo(\n          data[1],\n          data[2],\n          data[3],\n          data[4],\n          lastX,\n          lastY\n        );\n        break;\n      case \"c\":\n        path.bezierCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          lastX + data[3],\n          lastY + data[4],\n          lastX + data[5],\n          lastY + data[6]\n        );\n        lastX += data[5];\n        lastY += data[6];\n        break;\n      case \"S\":\n        lastX = data[3];\n        lastY = data[4];\n        path.bezierCurveToShort(\n          data[1],\n          data[2],\n          lastX,\n          lastY\n        );\n        break;\n      case \"s\":\n        path.bezierCurveToShort(\n          lastX + data[1],\n          lastY + data[2],\n          lastX + data[3],\n          lastY + data[4]\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"Q\":\n        lastX = data[3];\n        lastY = data[4];\n        path.quadraticCurveTo(\n          data[1],\n          data[2],\n          lastX,\n          lastY\n        );\n        break;\n      case \"q\":\n        path.quadraticCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          lastX + data[3],\n          lastY + data[4]\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"T\":\n        lastX = data[1];\n        lastY = data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n        );\n        break;\n      case \"t\":\n        lastX += data[1];\n        lastY += data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n        );\n        break;\n      case \"A\":\n        lastX = data[6];\n        lastY = data[7];\n        path.arcToSvg(\n          data[1],\n          data[2],\n          data[3],\n          data[4],\n          data[5],\n          lastX,\n          lastY\n        );\n        break;\n      case \"a\":\n        lastX += data[6];\n        lastY += data[7];\n        path.arcToSvg(\n          data[1],\n          data[2],\n          data[3],\n          data[4],\n          data[5],\n          lastX,\n          lastY\n        );\n        break;\n      case \"Z\":\n      case \"z\":\n        path.closePath();\n        if (subpaths.length > 0) {\n          currentSubPath = subpaths.pop();\n          if (currentSubPath) {\n            lastX = currentSubPath.startX;\n            lastY = currentSubPath.startY;\n          } else {\n            lastX = 0;\n            lastY = 0;\n          }\n        }\n        currentSubPath = null;\n        break;\n      default:\n        warn(`Unknown SVG path command: ${type}`);\n    }\n    if (type !== \"Z\" && type !== \"z\") {\n      if (currentSubPath === null) {\n        currentSubPath = { startX: lastX, startY: lastY };\n        subpaths.push(currentSubPath);\n      }\n    }\n  }\n  return path;\n}\n\nexport { SVGToGraphicsPath };\n//# sourceMappingURL=SVGToGraphicsPath.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nclass Circle {\n  /**\n   * @param x - The X coordinate of the center of this circle\n   * @param y - The Y coordinate of the center of this circle\n   * @param radius - The radius of the circle\n   */\n  constructor(x = 0, y = 0, radius = 0) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'circle'\n     */\n    this.type = \"circle\";\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n  }\n  /**\n   * Creates a clone of this Circle instance\n   * @returns A copy of the Circle\n   */\n  clone() {\n    return new Circle(this.x, this.y, this.radius);\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coordinates are within this Circle\n   */\n  contains(x, y) {\n    if (this.radius <= 0)\n      return false;\n    const r2 = this.radius * this.radius;\n    let dx = this.x - x;\n    let dy = this.y - y;\n    dx *= dx;\n    dy *= dy;\n    return dx + dy <= r2;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle including the stroke.\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param width - The width of the line to check\n   * @returns Whether the x/y coordinates are within this Circle\n   */\n  strokeContains(x, y, width) {\n    if (this.radius === 0)\n      return false;\n    const dx = this.x - x;\n    const dy = this.y - y;\n    const r = this.radius;\n    const w2 = width / 2;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < r + w2 && distance > r - w2;\n  }\n  /**\n   * Returns the framing rectangle of the circle as a Rectangle object\n   * @param out\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out = out || new Rectangle();\n    out.x = this.x - this.radius;\n    out.y = this.y - this.radius;\n    out.width = this.radius * 2;\n    out.height = this.radius * 2;\n    return out;\n  }\n  /**\n   * Copies another circle to this one.\n   * @param circle - The circle to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(circle) {\n    this.x = circle.x;\n    this.y = circle.y;\n    this.radius = circle.radius;\n    return this;\n  }\n  /**\n   * Copies this circle to another one.\n   * @param circle - The circle to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(circle) {\n    circle.copyFrom(this);\n    return circle;\n  }\n  toString() {\n    return `[pixi.js/math:Circle x=${this.x} y=${this.y} radius=${this.radius}]`;\n  }\n}\n\nexport { Circle };\n//# sourceMappingURL=Circle.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nclass Ellipse {\n  /**\n   * @param x - The X coordinate of the center of this ellipse\n   * @param y - The Y coordinate of the center of this ellipse\n   * @param halfWidth - The half width of this ellipse\n   * @param halfHeight - The half height of this ellipse\n   */\n  constructor(x = 0, y = 0, halfWidth = 0, halfHeight = 0) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'ellipse'\n     */\n    this.type = \"ellipse\";\n    this.x = x;\n    this.y = y;\n    this.halfWidth = halfWidth;\n    this.halfHeight = halfHeight;\n  }\n  /**\n   * Creates a clone of this Ellipse instance\n   * @returns {Ellipse} A copy of the ellipse\n   */\n  clone() {\n    return new Ellipse(this.x, this.y, this.halfWidth, this.halfHeight);\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this ellipse\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coords are within this ellipse\n   */\n  contains(x, y) {\n    if (this.halfWidth <= 0 || this.halfHeight <= 0) {\n      return false;\n    }\n    let normx = (x - this.x) / this.halfWidth;\n    let normy = (y - this.y) / this.halfHeight;\n    normx *= normx;\n    normy *= normy;\n    return normx + normy <= 1;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this ellipse including stroke\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param width\n   * @returns Whether the x/y coords are within this ellipse\n   */\n  strokeContains(x, y, width) {\n    const { halfWidth, halfHeight } = this;\n    if (halfWidth <= 0 || halfHeight <= 0) {\n      return false;\n    }\n    const halfStrokeWidth = width / 2;\n    const innerA = halfWidth - halfStrokeWidth;\n    const innerB = halfHeight - halfStrokeWidth;\n    const outerA = halfWidth + halfStrokeWidth;\n    const outerB = halfHeight + halfStrokeWidth;\n    const normalizedX = x - this.x;\n    const normalizedY = y - this.y;\n    const innerEllipse = normalizedX * normalizedX / (innerA * innerA) + normalizedY * normalizedY / (innerB * innerB);\n    const outerEllipse = normalizedX * normalizedX / (outerA * outerA) + normalizedY * normalizedY / (outerB * outerB);\n    return innerEllipse > 1 && outerEllipse <= 1;\n  }\n  /**\n   * Returns the framing rectangle of the ellipse as a Rectangle object\n   * @returns The framing rectangle\n   */\n  getBounds() {\n    return new Rectangle(this.x - this.halfWidth, this.y - this.halfHeight, this.halfWidth * 2, this.halfHeight * 2);\n  }\n  /**\n   * Copies another ellipse to this one.\n   * @param ellipse - The ellipse to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(ellipse) {\n    this.x = ellipse.x;\n    this.y = ellipse.y;\n    this.halfWidth = ellipse.halfWidth;\n    this.halfHeight = ellipse.halfHeight;\n    return this;\n  }\n  /**\n   * Copies this ellipse to another one.\n   * @param ellipse - The ellipse to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(ellipse) {\n    ellipse.copyFrom(this);\n    return ellipse;\n  }\n  toString() {\n    return `[pixi.js/math:Ellipse x=${this.x} y=${this.y} halfWidth=${this.halfWidth} halfHeight=${this.halfHeight}]`;\n  }\n}\n\nexport { Ellipse };\n//# sourceMappingURL=Ellipse.mjs.map\n","\"use strict\";\nfunction squaredDistanceToLineSegment(x, y, x1, y1, x2, y2) {\n  const a = x - x1;\n  const b = y - y1;\n  const c = x2 - x1;\n  const d = y2 - y1;\n  const dot = a * c + b * d;\n  const lenSq = c * c + d * d;\n  let param = -1;\n  if (lenSq !== 0) {\n    param = dot / lenSq;\n  }\n  let xx;\n  let yy;\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * c;\n    yy = y1 + param * d;\n  }\n  const dx = x - xx;\n  const dy = y - yy;\n  return dx * dx + dy * dy;\n}\n\nexport { squaredDistanceToLineSegment };\n//# sourceMappingURL=squaredDistanceToLineSegment.mjs.map\n","import { squaredDistanceToLineSegment } from '../misc/squaredDistanceToLineSegment.mjs';\nimport { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nclass Polygon {\n  /**\n   * @param points - This can be an array of Points\n   *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n   *  the arguments passed can be all the points of the polygon e.g.\n   *  `new Polygon(new Point(), new Point(), ...)`, or the arguments passed can be flat\n   *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n   */\n  constructor(...points) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'polygon'\n     */\n    this.type = \"polygon\";\n    let flat = Array.isArray(points[0]) ? points[0] : points;\n    if (typeof flat[0] !== \"number\") {\n      const p = [];\n      for (let i = 0, il = flat.length; i < il; i++) {\n        p.push(flat[i].x, flat[i].y);\n      }\n      flat = p;\n    }\n    this.points = flat;\n    this.closePath = true;\n  }\n  /**\n   * Creates a clone of this polygon.\n   * @returns - A copy of the polygon.\n   */\n  clone() {\n    const points = this.points.slice();\n    const polygon = new Polygon(points);\n    polygon.closePath = this.closePath;\n    return polygon;\n  }\n  /**\n   * Checks whether the x and y coordinates passed to this function are contained within this polygon.\n   * @param x - The X coordinate of the point to test.\n   * @param y - The Y coordinate of the point to test.\n   * @returns - Whether the x/y coordinates are within this polygon.\n   */\n  contains(x, y) {\n    let inside = false;\n    const length = this.points.length / 2;\n    for (let i = 0, j = length - 1; i < length; j = i++) {\n      const xi = this.points[i * 2];\n      const yi = this.points[i * 2 + 1];\n      const xj = this.points[j * 2];\n      const yj = this.points[j * 2 + 1];\n      const intersect = yi > y !== yj > y && x < (xj - xi) * ((y - yi) / (yj - yi)) + xi;\n      if (intersect) {\n        inside = !inside;\n      }\n    }\n    return inside;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this polygon including the stroke.\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @returns Whether the x/y coordinates are within this polygon\n   */\n  strokeContains(x, y, strokeWidth) {\n    const halfStrokeWidth = strokeWidth / 2;\n    const halfStrokeWidthSqrd = halfStrokeWidth * halfStrokeWidth;\n    const { points } = this;\n    const iterationLength = points.length - (this.closePath ? 0 : 2);\n    for (let i = 0; i < iterationLength; i += 2) {\n      const x1 = points[i];\n      const y1 = points[i + 1];\n      const x2 = points[(i + 2) % points.length];\n      const y2 = points[(i + 3) % points.length];\n      const distanceSqrd = squaredDistanceToLineSegment(x, y, x1, y1, x2, y2);\n      if (distanceSqrd <= halfStrokeWidthSqrd) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Returns the framing rectangle of the polygon as a Rectangle object\n   * @param out - optional rectangle to store the result\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out = out || new Rectangle();\n    const points = this.points;\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i];\n      const y = points[i + 1];\n      minX = x < minX ? x : minX;\n      maxX = x > maxX ? x : maxX;\n      minY = y < minY ? y : minY;\n      maxY = y > maxY ? y : maxY;\n    }\n    out.x = minX;\n    out.width = maxX - minX;\n    out.y = minY;\n    out.height = maxY - minY;\n    return out;\n  }\n  /**\n   * Copies another polygon to this one.\n   * @param polygon - The polygon to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(polygon) {\n    this.points = polygon.points.slice();\n    this.closePath = polygon.closePath;\n    return this;\n  }\n  /**\n   * Copies this polygon to another one.\n   * @param polygon - The polygon to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(polygon) {\n    polygon.copyFrom(this);\n    return polygon;\n  }\n  toString() {\n    return `[pixi.js/math:PolygoncloseStroke=${this.closePath}points=${this.points.reduce((pointsDesc, currentPoint) => `${pointsDesc}, ${currentPoint}`, \"\")}]`;\n  }\n  /**\n   * Get the last X coordinate of the polygon\n   * @readonly\n   */\n  get lastX() {\n    return this.points[this.points.length - 2];\n  }\n  /**\n   * Get the last Y coordinate of the polygon\n   * @readonly\n   */\n  get lastY() {\n    return this.points[this.points.length - 1];\n  }\n  /**\n   * Get the first X coordinate of the polygon\n   * @readonly\n   */\n  get x() {\n    return this.points[this.points.length - 2];\n  }\n  /**\n   * Get the first Y coordinate of the polygon\n   * @readonly\n   */\n  get y() {\n    return this.points[this.points.length - 1];\n  }\n}\n\nexport { Polygon };\n//# sourceMappingURL=Polygon.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nconst isCornerWithinStroke = (pX, pY, cornerX, cornerY, radius, halfStrokeWidth) => {\n  const dx = pX - cornerX;\n  const dy = pY - cornerY;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  return distance >= radius - halfStrokeWidth && distance <= radius + halfStrokeWidth;\n};\nclass RoundedRectangle {\n  /**\n   * @param x - The X coordinate of the upper-left corner of the rounded rectangle\n   * @param y - The Y coordinate of the upper-left corner of the rounded rectangle\n   * @param width - The overall width of this rounded rectangle\n   * @param height - The overall height of this rounded rectangle\n   * @param radius - Controls the radius of the rounded corners\n   */\n  constructor(x = 0, y = 0, width = 0, height = 0, radius = 20) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'roundedRectangle'\n     */\n    this.type = \"roundedRectangle\";\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.radius = radius;\n  }\n  /**\n   * Returns the framing rectangle of the rounded rectangle as a Rectangle object\n   * @param out - optional rectangle to store the result\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out = out || new Rectangle();\n    out.x = this.x;\n    out.y = this.y;\n    out.width = this.width;\n    out.height = this.height;\n    return out;\n  }\n  /**\n   * Creates a clone of this Rounded Rectangle.\n   * @returns - A copy of the rounded rectangle.\n   */\n  clone() {\n    return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n  }\n  /**\n   * Copies another rectangle to this one.\n   * @param rectangle - The rectangle to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(rectangle) {\n    this.x = rectangle.x;\n    this.y = rectangle.y;\n    this.width = rectangle.width;\n    this.height = rectangle.height;\n    return this;\n  }\n  /**\n   * Copies this rectangle to another one.\n   * @param rectangle - The rectangle to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(rectangle) {\n    rectangle.copyFrom(this);\n    return rectangle;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n   * @param x - The X coordinate of the point to test.\n   * @param y - The Y coordinate of the point to test.\n   * @returns - Whether the x/y coordinates are within this Rounded Rectangle.\n   */\n  contains(x, y) {\n    if (this.width <= 0 || this.height <= 0) {\n      return false;\n    }\n    if (x >= this.x && x <= this.x + this.width) {\n      if (y >= this.y && y <= this.y + this.height) {\n        const radius = Math.max(0, Math.min(this.radius, Math.min(this.width, this.height) / 2));\n        if (y >= this.y + radius && y <= this.y + this.height - radius || x >= this.x + radius && x <= this.x + this.width - radius) {\n          return true;\n        }\n        let dx = x - (this.x + radius);\n        let dy = y - (this.y + radius);\n        const radius2 = radius * radius;\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dx = x - (this.x + this.width - radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dy = y - (this.y + this.height - radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dx = x - (this.x + radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this rectangle including the stroke.\n   * @param pX - The X coordinate of the point to test\n   * @param pY - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @returns Whether the x/y coordinates are within this rectangle\n   */\n  strokeContains(pX, pY, strokeWidth) {\n    const { x, y, width, height, radius } = this;\n    const halfStrokeWidth = strokeWidth / 2;\n    const innerX = x + radius;\n    const innerY = y + radius;\n    const innerWidth = width - radius * 2;\n    const innerHeight = height - radius * 2;\n    const rightBound = x + width;\n    const bottomBound = y + height;\n    if ((pX >= x - halfStrokeWidth && pX <= x + halfStrokeWidth || pX >= rightBound - halfStrokeWidth && pX <= rightBound + halfStrokeWidth) && pY >= innerY && pY <= innerY + innerHeight) {\n      return true;\n    }\n    if ((pY >= y - halfStrokeWidth && pY <= y + halfStrokeWidth || pY >= bottomBound - halfStrokeWidth && pY <= bottomBound + halfStrokeWidth) && pX >= innerX && pX <= innerX + innerWidth) {\n      return true;\n    }\n    return (\n      // Top-left\n      pX < innerX && pY < innerY && isCornerWithinStroke(pX, pY, innerX, innerY, radius, halfStrokeWidth) || pX > rightBound - radius && pY < innerY && isCornerWithinStroke(pX, pY, rightBound - radius, innerY, radius, halfStrokeWidth) || pX > rightBound - radius && pY > bottomBound - radius && isCornerWithinStroke(pX, pY, rightBound - radius, bottomBound - radius, radius, halfStrokeWidth) || pX < innerX && pY > bottomBound - radius && isCornerWithinStroke(pX, pY, innerX, bottomBound - radius, radius, halfStrokeWidth)\n    );\n  }\n  toString() {\n    return `[pixi.js/math:RoundedRectangle x=${this.x} y=${this.y}width=${this.width} height=${this.height} radius=${this.radius}]`;\n  }\n}\n\nexport { RoundedRectangle };\n//# sourceMappingURL=RoundedRectangle.mjs.map\n","\"use strict\";\nfunction buildUvs(vertices, verticesStride, verticesOffset, uvs, uvsOffset, uvsStride, size, matrix = null) {\n  let index = 0;\n  verticesOffset *= verticesStride;\n  uvsOffset *= uvsStride;\n  const a = matrix.a;\n  const b = matrix.b;\n  const c = matrix.c;\n  const d = matrix.d;\n  const tx = matrix.tx;\n  const ty = matrix.ty;\n  while (index < size) {\n    const x = vertices[verticesOffset];\n    const y = vertices[verticesOffset + 1];\n    uvs[uvsOffset] = a * x + c * y + tx;\n    uvs[uvsOffset + 1] = b * x + d * y + ty;\n    uvsOffset += uvsStride;\n    verticesOffset += verticesStride;\n    index++;\n  }\n}\nfunction buildSimpleUvs(uvs, uvsOffset, uvsStride, size) {\n  let index = 0;\n  uvsOffset *= uvsStride;\n  while (index < size) {\n    uvs[uvsOffset] = 0;\n    uvs[uvsOffset + 1] = 0;\n    uvsOffset += uvsStride;\n    index++;\n  }\n}\n\nexport { buildSimpleUvs, buildUvs };\n//# sourceMappingURL=buildUvs.mjs.map\n","\"use strict\";\nfunction transformVertices(vertices, m, offset, stride, size) {\n  const a = m.a;\n  const b = m.b;\n  const c = m.c;\n  const d = m.d;\n  const tx = m.tx;\n  const ty = m.ty;\n  offset = offset || 0;\n  stride = stride || 2;\n  size = size || vertices.length / stride - offset;\n  let index = offset * stride;\n  for (let i = 0; i < size; i++) {\n    const x = vertices[index];\n    const y = vertices[index + 1];\n    vertices[index] = a * x + c * y + tx;\n    vertices[index + 1] = b * x + d * y + ty;\n    index += stride;\n  }\n}\n\nexport { transformVertices };\n//# sourceMappingURL=transformVertices.mjs.map\n","\"use strict\";\nfunction multiplyHexColors(color1, color2) {\n  if (color1 === 16777215 || !color2)\n    return color2;\n  if (color2 === 16777215 || !color1)\n    return color1;\n  const r1 = color1 >> 16 & 255;\n  const g1 = color1 >> 8 & 255;\n  const b1 = color1 & 255;\n  const r2 = color2 >> 16 & 255;\n  const g2 = color2 >> 8 & 255;\n  const b2 = color2 & 255;\n  const r = r1 * r2 / 255;\n  const g = g1 * g2 / 255;\n  const b = b1 * b2 / 255;\n  return (r << 16) + (g << 8) + b;\n}\n\nexport { multiplyHexColors };\n//# sourceMappingURL=multiplyHexColors.mjs.map\n","import { multiplyHexColors } from '../../container/utils/multiplyHexColors.mjs';\n\n\"use strict\";\nclass BatchableGraphics {\n  constructor() {\n    this.batcher = null;\n    this.batch = null;\n    this.applyTransform = true;\n    this.roundPixels = 0;\n  }\n  get blendMode() {\n    if (this.applyTransform) {\n      return this.renderable.groupBlendMode;\n    }\n    return \"normal\";\n  }\n  packIndex(indexBuffer, index, indicesOffset) {\n    const indices = this.geometryData.indices;\n    for (let i = 0; i < this.indexSize; i++) {\n      indexBuffer[index++] = indices[i + this.indexOffset] + indicesOffset - this.vertexOffset;\n    }\n  }\n  packAttributes(float32View, uint32View, index, textureId) {\n    const geometry = this.geometryData;\n    const graphics = this.renderable;\n    const positions = geometry.vertices;\n    const uvs = geometry.uvs;\n    const offset = this.vertexOffset * 2;\n    const vertSize = (this.vertexOffset + this.vertexSize) * 2;\n    const rgb = this.color;\n    const bgr = rgb >> 16 | rgb & 65280 | (rgb & 255) << 16;\n    if (this.applyTransform) {\n      const argb = multiplyHexColors(bgr, graphics.groupColor) + (this.alpha * graphics.groupAlpha * 255 << 24);\n      const wt = graphics.groupTransform;\n      const textureIdAndRound = textureId << 16 | this.roundPixels & 65535;\n      const a = wt.a;\n      const b = wt.b;\n      const c = wt.c;\n      const d = wt.d;\n      const tx = wt.tx;\n      const ty = wt.ty;\n      for (let i = offset; i < vertSize; i += 2) {\n        const x = positions[i];\n        const y = positions[i + 1];\n        float32View[index] = a * x + c * y + tx;\n        float32View[index + 1] = b * x + d * y + ty;\n        float32View[index + 2] = uvs[i];\n        float32View[index + 3] = uvs[i + 1];\n        uint32View[index + 4] = argb;\n        uint32View[index + 5] = textureIdAndRound;\n        index += 6;\n      }\n    } else {\n      const argb = bgr + (this.alpha * 255 << 24);\n      for (let i = offset; i < vertSize; i += 2) {\n        float32View[index] = positions[i];\n        float32View[index + 1] = positions[i + 1];\n        float32View[index + 2] = uvs[i];\n        float32View[index + 3] = uvs[i + 1];\n        uint32View[index + 4] = argb;\n        uint32View[index + 5] = textureId << 16;\n        index += 6;\n      }\n    }\n  }\n  // TODO rename to vertexSize\n  get vertSize() {\n    return this.vertexSize;\n  }\n  copyTo(gpuBuffer) {\n    gpuBuffer.indexOffset = this.indexOffset;\n    gpuBuffer.indexSize = this.indexSize;\n    gpuBuffer.vertexOffset = this.vertexOffset;\n    gpuBuffer.vertexSize = this.vertexSize;\n    gpuBuffer.color = this.color;\n    gpuBuffer.alpha = this.alpha;\n    gpuBuffer.texture = this.texture;\n    gpuBuffer.geometryData = this.geometryData;\n  }\n  reset() {\n    this.applyTransform = true;\n  }\n}\n\nexport { BatchableGraphics };\n//# sourceMappingURL=BatchableGraphics.mjs.map\n","\"use strict\";\nconst buildCircle = {\n  build(shape, points) {\n    let x;\n    let y;\n    let dx;\n    let dy;\n    let rx;\n    let ry;\n    if (shape.type === \"circle\") {\n      const circle = shape;\n      x = circle.x;\n      y = circle.y;\n      rx = ry = circle.radius;\n      dx = dy = 0;\n    } else if (shape.type === \"ellipse\") {\n      const ellipse = shape;\n      x = ellipse.x;\n      y = ellipse.y;\n      rx = ellipse.halfWidth;\n      ry = ellipse.halfHeight;\n      dx = dy = 0;\n    } else {\n      const roundedRect = shape;\n      const halfWidth = roundedRect.width / 2;\n      const halfHeight = roundedRect.height / 2;\n      x = roundedRect.x + halfWidth;\n      y = roundedRect.y + halfHeight;\n      rx = ry = Math.max(0, Math.min(roundedRect.radius, Math.min(halfWidth, halfHeight)));\n      dx = halfWidth - rx;\n      dy = halfHeight - ry;\n    }\n    if (!(rx >= 0 && ry >= 0 && dx >= 0 && dy >= 0)) {\n      return points;\n    }\n    const n = Math.ceil(2.3 * Math.sqrt(rx + ry));\n    const m = n * 8 + (dx ? 4 : 0) + (dy ? 4 : 0);\n    if (m === 0) {\n      return points;\n    }\n    if (n === 0) {\n      points[0] = points[6] = x + dx;\n      points[1] = points[3] = y + dy;\n      points[2] = points[4] = x - dx;\n      points[5] = points[7] = y - dy;\n      return points;\n    }\n    let j1 = 0;\n    let j2 = n * 4 + (dx ? 2 : 0) + 2;\n    let j3 = j2;\n    let j4 = m;\n    let x0 = dx + rx;\n    let y0 = dy;\n    let x1 = x + x0;\n    let x2 = x - x0;\n    let y1 = y + y0;\n    points[j1++] = x1;\n    points[j1++] = y1;\n    points[--j2] = y1;\n    points[--j2] = x2;\n    if (dy) {\n      const y22 = y - y0;\n      points[j3++] = x2;\n      points[j3++] = y22;\n      points[--j4] = y22;\n      points[--j4] = x1;\n    }\n    for (let i = 1; i < n; i++) {\n      const a = Math.PI / 2 * (i / n);\n      const x02 = dx + Math.cos(a) * rx;\n      const y02 = dy + Math.sin(a) * ry;\n      const x12 = x + x02;\n      const x22 = x - x02;\n      const y12 = y + y02;\n      const y22 = y - y02;\n      points[j1++] = x12;\n      points[j1++] = y12;\n      points[--j2] = y12;\n      points[--j2] = x22;\n      points[j3++] = x22;\n      points[j3++] = y22;\n      points[--j4] = y22;\n      points[--j4] = x12;\n    }\n    x0 = dx;\n    y0 = dy + ry;\n    x1 = x + x0;\n    x2 = x - x0;\n    y1 = y + y0;\n    const y2 = y - y0;\n    points[j1++] = x1;\n    points[j1++] = y1;\n    points[--j4] = y2;\n    points[--j4] = x1;\n    if (dx) {\n      points[j1++] = x2;\n      points[j1++] = y1;\n      points[--j4] = y2;\n      points[--j4] = x2;\n    }\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    if (points.length === 0) {\n      return;\n    }\n    let centerX = 0;\n    let centerY = 0;\n    for (let i = 0; i < points.length; i += 2) {\n      centerX += points[i];\n      centerY += points[i + 1];\n    }\n    centerX /= points.length / 2;\n    centerY /= points.length / 2;\n    let count = verticesOffset;\n    vertices[count * verticesStride] = centerX;\n    vertices[count * verticesStride + 1] = centerY;\n    const centerIndex = count++;\n    for (let i = 0; i < points.length; i += 2) {\n      vertices[count * verticesStride] = points[i];\n      vertices[count * verticesStride + 1] = points[i + 1];\n      if (i > 0) {\n        indices[indicesOffset++] = count;\n        indices[indicesOffset++] = centerIndex;\n        indices[indicesOffset++] = count - 1;\n      }\n      count++;\n    }\n    indices[indicesOffset++] = centerIndex + 1;\n    indices[indicesOffset++] = centerIndex;\n    indices[indicesOffset++] = count - 1;\n  }\n};\n\nexport { buildCircle };\n//# sourceMappingURL=buildCircle.mjs.map\n","\"use strict\";\nconst closePointEps = 1e-4;\nconst curveEps = 1e-4;\n\nexport { closePointEps, curveEps };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nfunction getOrientationOfPoints(points) {\n  const m = points.length;\n  if (m < 6) {\n    return 1;\n  }\n  let area = 0;\n  for (let i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2) {\n    const x2 = points[i];\n    const y2 = points[i + 1];\n    area += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  if (area < 0) {\n    return -1;\n  }\n  return 1;\n}\n\nexport { getOrientationOfPoints };\n//# sourceMappingURL=getOrientationOfPoints.mjs.map\n","import { Point } from '../../../../maths/point/Point.mjs';\nimport { closePointEps, curveEps } from '../const.mjs';\nimport { getOrientationOfPoints } from '../utils/getOrientationOfPoints.mjs';\n\n\"use strict\";\nfunction square(x, y, nx, ny, innerWeight, outerWeight, clockwise, verts) {\n  const ix = x - nx * innerWeight;\n  const iy = y - ny * innerWeight;\n  const ox = x + nx * outerWeight;\n  const oy = y + ny * outerWeight;\n  let exx;\n  let eyy;\n  if (clockwise) {\n    exx = ny;\n    eyy = -nx;\n  } else {\n    exx = -ny;\n    eyy = nx;\n  }\n  const eix = ix + exx;\n  const eiy = iy + eyy;\n  const eox = ox + exx;\n  const eoy = oy + eyy;\n  verts.push(eix, eiy);\n  verts.push(eox, eoy);\n  return 2;\n}\nfunction round(cx, cy, sx, sy, ex, ey, verts, clockwise) {\n  const cx2p0x = sx - cx;\n  const cy2p0y = sy - cy;\n  let angle0 = Math.atan2(cx2p0x, cy2p0y);\n  let angle1 = Math.atan2(ex - cx, ey - cy);\n  if (clockwise && angle0 < angle1) {\n    angle0 += Math.PI * 2;\n  } else if (!clockwise && angle0 > angle1) {\n    angle1 += Math.PI * 2;\n  }\n  let startAngle = angle0;\n  const angleDiff = angle1 - angle0;\n  const absAngleDiff = Math.abs(angleDiff);\n  const radius = Math.sqrt(cx2p0x * cx2p0x + cy2p0y * cy2p0y);\n  const segCount = (15 * absAngleDiff * Math.sqrt(radius) / Math.PI >> 0) + 1;\n  const angleInc = angleDiff / segCount;\n  startAngle += angleInc;\n  if (clockwise) {\n    verts.push(cx, cy);\n    verts.push(sx, sy);\n    for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc) {\n      verts.push(cx, cy);\n      verts.push(\n        cx + Math.sin(angle) * radius,\n        cy + Math.cos(angle) * radius\n      );\n    }\n    verts.push(cx, cy);\n    verts.push(ex, ey);\n  } else {\n    verts.push(sx, sy);\n    verts.push(cx, cy);\n    for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc) {\n      verts.push(\n        cx + Math.sin(angle) * radius,\n        cy + Math.cos(angle) * radius\n      );\n      verts.push(cx, cy);\n    }\n    verts.push(ex, ey);\n    verts.push(cx, cy);\n  }\n  return segCount * 2;\n}\nfunction buildLine(points, lineStyle, flipAlignment, closed, vertices, _verticesStride, _verticesOffset, indices, _indicesOffset) {\n  const eps = closePointEps;\n  if (points.length === 0) {\n    return;\n  }\n  const style = lineStyle;\n  let alignment = style.alignment;\n  if (lineStyle.alignment !== 0.5) {\n    let orientation = getOrientationOfPoints(points);\n    if (flipAlignment)\n      orientation *= -1;\n    alignment = (alignment - 0.5) * orientation + 0.5;\n  }\n  const firstPoint = new Point(points[0], points[1]);\n  const lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n  const closedShape = closed;\n  const closedPath = Math.abs(firstPoint.x - lastPoint.x) < eps && Math.abs(firstPoint.y - lastPoint.y) < eps;\n  if (closedShape) {\n    points = points.slice();\n    if (closedPath) {\n      points.pop();\n      points.pop();\n      lastPoint.set(points[points.length - 2], points[points.length - 1]);\n    }\n    const midPointX = (firstPoint.x + lastPoint.x) * 0.5;\n    const midPointY = (lastPoint.y + firstPoint.y) * 0.5;\n    points.unshift(midPointX, midPointY);\n    points.push(midPointX, midPointY);\n  }\n  const verts = vertices;\n  const length = points.length / 2;\n  let indexCount = points.length;\n  const indexStart = verts.length / 2;\n  const width = style.width / 2;\n  const widthSquared = width * width;\n  const miterLimitSquared = style.miterLimit * style.miterLimit;\n  let x0 = points[0];\n  let y0 = points[1];\n  let x1 = points[2];\n  let y1 = points[3];\n  let x2 = 0;\n  let y2 = 0;\n  let perpX = -(y0 - y1);\n  let perpY = x0 - x1;\n  let perp1x = 0;\n  let perp1y = 0;\n  let dist = Math.sqrt(perpX * perpX + perpY * perpY);\n  perpX /= dist;\n  perpY /= dist;\n  perpX *= width;\n  perpY *= width;\n  const ratio = alignment;\n  const innerWeight = (1 - ratio) * 2;\n  const outerWeight = ratio * 2;\n  if (!closedShape) {\n    if (style.cap === \"round\") {\n      indexCount += round(\n        x0 - perpX * (innerWeight - outerWeight) * 0.5,\n        y0 - perpY * (innerWeight - outerWeight) * 0.5,\n        x0 - perpX * innerWeight,\n        y0 - perpY * innerWeight,\n        x0 + perpX * outerWeight,\n        y0 + perpY * outerWeight,\n        verts,\n        true\n      ) + 2;\n    } else if (style.cap === \"square\") {\n      indexCount += square(x0, y0, perpX, perpY, innerWeight, outerWeight, true, verts);\n    }\n  }\n  verts.push(\n    x0 - perpX * innerWeight,\n    y0 - perpY * innerWeight\n  );\n  verts.push(\n    x0 + perpX * outerWeight,\n    y0 + perpY * outerWeight\n  );\n  for (let i = 1; i < length - 1; ++i) {\n    x0 = points[(i - 1) * 2];\n    y0 = points[(i - 1) * 2 + 1];\n    x1 = points[i * 2];\n    y1 = points[i * 2 + 1];\n    x2 = points[(i + 1) * 2];\n    y2 = points[(i + 1) * 2 + 1];\n    perpX = -(y0 - y1);\n    perpY = x0 - x1;\n    dist = Math.sqrt(perpX * perpX + perpY * perpY);\n    perpX /= dist;\n    perpY /= dist;\n    perpX *= width;\n    perpY *= width;\n    perp1x = -(y1 - y2);\n    perp1y = x1 - x2;\n    dist = Math.sqrt(perp1x * perp1x + perp1y * perp1y);\n    perp1x /= dist;\n    perp1y /= dist;\n    perp1x *= width;\n    perp1y *= width;\n    const dx0 = x1 - x0;\n    const dy0 = y0 - y1;\n    const dx1 = x1 - x2;\n    const dy1 = y2 - y1;\n    const dot = dx0 * dx1 + dy0 * dy1;\n    const cross = dy0 * dx1 - dy1 * dx0;\n    const clockwise = cross < 0;\n    if (Math.abs(cross) < 1e-3 * Math.abs(dot)) {\n      verts.push(\n        x1 - perpX * innerWeight,\n        y1 - perpY * innerWeight\n      );\n      verts.push(\n        x1 + perpX * outerWeight,\n        y1 + perpY * outerWeight\n      );\n      if (dot >= 0) {\n        if (style.join === \"round\") {\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 4;\n        } else {\n          indexCount += 2;\n        }\n        verts.push(\n          x1 - perp1x * outerWeight,\n          y1 - perp1y * outerWeight\n        );\n        verts.push(\n          x1 + perp1x * innerWeight,\n          y1 + perp1y * innerWeight\n        );\n      }\n      continue;\n    }\n    const c1 = (-perpX + x0) * (-perpY + y1) - (-perpX + x1) * (-perpY + y0);\n    const c2 = (-perp1x + x2) * (-perp1y + y1) - (-perp1x + x1) * (-perp1y + y2);\n    const px = (dx0 * c2 - dx1 * c1) / cross;\n    const py = (dy1 * c1 - dy0 * c2) / cross;\n    const pDist = (px - x1) * (px - x1) + (py - y1) * (py - y1);\n    const imx = x1 + (px - x1) * innerWeight;\n    const imy = y1 + (py - y1) * innerWeight;\n    const omx = x1 - (px - x1) * outerWeight;\n    const omy = y1 - (py - y1) * outerWeight;\n    const smallerInsideSegmentSq = Math.min(dx0 * dx0 + dy0 * dy0, dx1 * dx1 + dy1 * dy1);\n    const insideWeight = clockwise ? innerWeight : outerWeight;\n    const smallerInsideDiagonalSq = smallerInsideSegmentSq + insideWeight * insideWeight * widthSquared;\n    const insideMiterOk = pDist <= smallerInsideDiagonalSq;\n    if (insideMiterOk) {\n      if (style.join === \"bevel\" || pDist / widthSquared > miterLimitSquared) {\n        if (clockwise) {\n          verts.push(imx, imy);\n          verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n          verts.push(imx, imy);\n          verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n        } else {\n          verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n          verts.push(omx, omy);\n          verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n          verts.push(omx, omy);\n        }\n        indexCount += 2;\n      } else if (style.join === \"round\") {\n        if (clockwise) {\n          verts.push(imx, imy);\n          verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n          indexCount += round(\n            x1,\n            y1,\n            x1 + perpX * outerWeight,\n            y1 + perpY * outerWeight,\n            x1 + perp1x * outerWeight,\n            y1 + perp1y * outerWeight,\n            verts,\n            true\n          ) + 4;\n          verts.push(imx, imy);\n          verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n        } else {\n          verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n          verts.push(omx, omy);\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 4;\n          verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n          verts.push(omx, omy);\n        }\n      } else {\n        verts.push(imx, imy);\n        verts.push(omx, omy);\n      }\n    } else {\n      verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n      verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n      if (style.join === \"round\") {\n        if (clockwise) {\n          indexCount += round(\n            x1,\n            y1,\n            x1 + perpX * outerWeight,\n            y1 + perpY * outerWeight,\n            x1 + perp1x * outerWeight,\n            y1 + perp1y * outerWeight,\n            verts,\n            true\n          ) + 2;\n        } else {\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 2;\n        }\n      } else if (style.join === \"miter\" && pDist / widthSquared <= miterLimitSquared) {\n        if (clockwise) {\n          verts.push(omx, omy);\n          verts.push(omx, omy);\n        } else {\n          verts.push(imx, imy);\n          verts.push(imx, imy);\n        }\n        indexCount += 2;\n      }\n      verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n      verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n      indexCount += 2;\n    }\n  }\n  x0 = points[(length - 2) * 2];\n  y0 = points[(length - 2) * 2 + 1];\n  x1 = points[(length - 1) * 2];\n  y1 = points[(length - 1) * 2 + 1];\n  perpX = -(y0 - y1);\n  perpY = x0 - x1;\n  dist = Math.sqrt(perpX * perpX + perpY * perpY);\n  perpX /= dist;\n  perpY /= dist;\n  perpX *= width;\n  perpY *= width;\n  verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n  verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n  if (!closedShape) {\n    if (style.cap === \"round\") {\n      indexCount += round(\n        x1 - perpX * (innerWeight - outerWeight) * 0.5,\n        y1 - perpY * (innerWeight - outerWeight) * 0.5,\n        x1 - perpX * innerWeight,\n        y1 - perpY * innerWeight,\n        x1 + perpX * outerWeight,\n        y1 + perpY * outerWeight,\n        verts,\n        false\n      ) + 2;\n    } else if (style.cap === \"square\") {\n      indexCount += square(x1, y1, perpX, perpY, innerWeight, outerWeight, false, verts);\n    }\n  }\n  const eps2 = curveEps * curveEps;\n  for (let i = indexStart; i < indexCount + indexStart - 2; ++i) {\n    x0 = verts[i * 2];\n    y0 = verts[i * 2 + 1];\n    x1 = verts[(i + 1) * 2];\n    y1 = verts[(i + 1) * 2 + 1];\n    x2 = verts[(i + 2) * 2];\n    y2 = verts[(i + 2) * 2 + 1];\n    if (Math.abs(x0 * (y1 - y2) + x1 * (y2 - y0) + x2 * (y0 - y1)) < eps2) {\n      continue;\n    }\n    indices.push(i, i + 1, i + 2);\n  }\n}\n\nexport { buildLine };\n//# sourceMappingURL=buildLine.mjs.map\n","import earcut from 'earcut';\n\n\"use strict\";\nfunction triangulateWithHoles(points, holes, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n  const triangles = earcut(points, holes, 2);\n  if (!triangles) {\n    return;\n  }\n  for (let i = 0; i < triangles.length; i += 3) {\n    indices[indicesOffset++] = triangles[i] + verticesOffset;\n    indices[indicesOffset++] = triangles[i + 1] + verticesOffset;\n    indices[indicesOffset++] = triangles[i + 2] + verticesOffset;\n  }\n  let index = verticesOffset * verticesStride;\n  for (let i = 0; i < points.length; i += 2) {\n    vertices[index] = points[i];\n    vertices[index + 1] = points[i + 1];\n    index += verticesStride;\n  }\n}\n\nexport { triangulateWithHoles };\n//# sourceMappingURL=triangulateWithHoles.mjs.map\n","import { triangulateWithHoles } from '../utils/triangulateWithHoles.mjs';\n\n\"use strict\";\nconst emptyArray = [];\nconst buildPolygon = {\n  build(shape, points) {\n    for (let i = 0; i < shape.points.length; i++) {\n      points[i] = shape.points[i];\n    }\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    triangulateWithHoles(points, emptyArray, vertices, verticesStride, verticesOffset, indices, indicesOffset);\n  }\n};\n\nexport { buildPolygon };\n//# sourceMappingURL=buildPolygon.mjs.map\n","\"use strict\";\nconst buildRectangle = {\n  build(shape, points) {\n    const rectData = shape;\n    const x = rectData.x;\n    const y = rectData.y;\n    const width = rectData.width;\n    const height = rectData.height;\n    if (!(width >= 0 && height >= 0)) {\n      return points;\n    }\n    points[0] = x;\n    points[1] = y;\n    points[2] = x + width;\n    points[3] = y;\n    points[4] = x + width;\n    points[5] = y + height;\n    points[6] = x;\n    points[7] = y + height;\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    let count = 0;\n    verticesOffset *= verticesStride;\n    vertices[verticesOffset + count] = points[0];\n    vertices[verticesOffset + count + 1] = points[1];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[2];\n    vertices[verticesOffset + count + 1] = points[3];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[6];\n    vertices[verticesOffset + count + 1] = points[7];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[4];\n    vertices[verticesOffset + count + 1] = points[5];\n    count += verticesStride;\n    const verticesIndex = verticesOffset / verticesStride;\n    indices[indicesOffset++] = verticesIndex;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 2;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 3;\n    indices[indicesOffset++] = verticesIndex + 2;\n  }\n};\n\nexport { buildRectangle };\n//# sourceMappingURL=buildRectangle.mjs.map\n","\"use strict\";\nconst buildTriangle = {\n  build(shape, points) {\n    points[0] = shape.x;\n    points[1] = shape.y;\n    points[2] = shape.x2;\n    points[3] = shape.y2;\n    points[4] = shape.x3;\n    points[5] = shape.y3;\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    let count = 0;\n    verticesOffset *= verticesStride;\n    vertices[verticesOffset + count] = points[0];\n    vertices[verticesOffset + count + 1] = points[1];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[2];\n    vertices[verticesOffset + count + 1] = points[3];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[4];\n    vertices[verticesOffset + count + 1] = points[5];\n    const verticesIndex = verticesOffset / verticesStride;\n    indices[indicesOffset++] = verticesIndex;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 2;\n  }\n};\n\nexport { buildTriangle };\n//# sourceMappingURL=buildTriangle.mjs.map\n","import { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { buildUvs, buildSimpleUvs } from '../../../../rendering/renderers/shared/geometry/utils/buildUvs.mjs';\nimport { transformVertices } from '../../../../rendering/renderers/shared/geometry/utils/transformVertices.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { BigPool } from '../../../../utils/pool/PoolGroup.mjs';\nimport { BatchableGraphics } from '../BatchableGraphics.mjs';\nimport { buildCircle } from '../buildCommands/buildCircle.mjs';\nimport { buildLine } from '../buildCommands/buildLine.mjs';\nimport { buildPolygon } from '../buildCommands/buildPolygon.mjs';\nimport { buildRectangle } from '../buildCommands/buildRectangle.mjs';\nimport { buildTriangle } from '../buildCommands/buildTriangle.mjs';\nimport { triangulateWithHoles } from './triangulateWithHoles.mjs';\n\n\"use strict\";\nconst buildMap = {\n  rectangle: buildRectangle,\n  polygon: buildPolygon,\n  triangle: buildTriangle,\n  circle: buildCircle,\n  ellipse: buildCircle,\n  roundedRectangle: buildCircle\n};\nconst tempRect = new Rectangle();\nfunction buildContextBatches(context, gpuContext) {\n  const { geometryData, batches } = gpuContext;\n  batches.length = 0;\n  geometryData.indices.length = 0;\n  geometryData.vertices.length = 0;\n  geometryData.uvs.length = 0;\n  for (let i = 0; i < context.instructions.length; i++) {\n    const instruction = context.instructions[i];\n    if (instruction.action === \"texture\") {\n      addTextureToGeometryData(instruction.data, batches, geometryData);\n    } else if (instruction.action === \"fill\" || instruction.action === \"stroke\") {\n      const isStroke = instruction.action === \"stroke\";\n      const shapePath = instruction.data.path.shapePath;\n      const style = instruction.data.style;\n      const hole = instruction.data.hole;\n      if (isStroke && hole) {\n        addShapePathToGeometryData(hole.shapePath, style, null, true, batches, geometryData);\n      }\n      addShapePathToGeometryData(shapePath, style, hole, isStroke, batches, geometryData);\n    }\n  }\n}\nfunction addTextureToGeometryData(data, batches, geometryData) {\n  const { vertices, uvs, indices } = geometryData;\n  const indexOffset = indices.length;\n  const vertOffset = vertices.length / 2;\n  const points = [];\n  const build = buildMap.rectangle;\n  const rect = tempRect;\n  const texture = data.image;\n  rect.x = data.dx;\n  rect.y = data.dy;\n  rect.width = data.dw;\n  rect.height = data.dh;\n  const matrix = data.transform;\n  build.build(rect, points);\n  if (matrix) {\n    transformVertices(points, matrix);\n  }\n  build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n  const textureUvs = texture.uvs;\n  uvs.push(\n    textureUvs.x0,\n    textureUvs.y0,\n    textureUvs.x1,\n    textureUvs.y1,\n    textureUvs.x3,\n    textureUvs.y3,\n    textureUvs.x2,\n    textureUvs.y2\n  );\n  const graphicsBatch = BigPool.get(BatchableGraphics);\n  graphicsBatch.indexOffset = indexOffset;\n  graphicsBatch.indexSize = indices.length - indexOffset;\n  graphicsBatch.vertexOffset = vertOffset;\n  graphicsBatch.vertexSize = vertices.length / 2 - vertOffset;\n  graphicsBatch.color = data.style;\n  graphicsBatch.alpha = data.alpha;\n  graphicsBatch.texture = texture;\n  graphicsBatch.geometryData = geometryData;\n  batches.push(graphicsBatch);\n}\nfunction addShapePathToGeometryData(shapePath, style, hole, isStroke, batches, geometryData) {\n  const { vertices, uvs, indices } = geometryData;\n  const lastIndex = shapePath.shapePrimitives.length - 1;\n  shapePath.shapePrimitives.forEach(({ shape, transform: matrix }, i) => {\n    const indexOffset = indices.length;\n    const vertOffset = vertices.length / 2;\n    const points = [];\n    const build = buildMap[shape.type];\n    build.build(shape, points);\n    if (matrix) {\n      transformVertices(points, matrix);\n    }\n    if (!isStroke) {\n      if (hole && lastIndex === i) {\n        if (lastIndex !== 0) {\n          console.warn(\"[Pixi Graphics] only the last shape have be cut out\");\n        }\n        const holeIndices = [];\n        const otherPoints = points.slice();\n        const holeArrays = getHoleArrays(hole.shapePath);\n        holeArrays.forEach((holePoints) => {\n          holeIndices.push(otherPoints.length / 2);\n          otherPoints.push(...holePoints);\n        });\n        triangulateWithHoles(otherPoints, holeIndices, vertices, 2, vertOffset, indices, indexOffset);\n      } else {\n        build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n      }\n    } else {\n      const close = shape.closePath ?? true;\n      const lineStyle = style;\n      buildLine(points, lineStyle, false, close, vertices, 2, vertOffset, indices, indexOffset);\n    }\n    const uvsOffset = uvs.length / 2;\n    const texture = style.texture;\n    if (texture !== Texture.WHITE) {\n      const textureMatrix = style.matrix;\n      if (matrix && textureMatrix) {\n        textureMatrix.append(matrix.clone().invert());\n      }\n      buildUvs(vertices, 2, vertOffset, uvs, uvsOffset, 2, vertices.length / 2 - vertOffset, textureMatrix);\n    } else {\n      buildSimpleUvs(uvs, uvsOffset, 2, vertices.length / 2 - vertOffset);\n    }\n    const graphicsBatch = BigPool.get(BatchableGraphics);\n    graphicsBatch.indexOffset = indexOffset;\n    graphicsBatch.indexSize = indices.length - indexOffset;\n    graphicsBatch.vertexOffset = vertOffset;\n    graphicsBatch.vertexSize = vertices.length / 2 - vertOffset;\n    graphicsBatch.color = style.color;\n    graphicsBatch.alpha = style.alpha;\n    graphicsBatch.texture = texture;\n    graphicsBatch.geometryData = geometryData;\n    batches.push(graphicsBatch);\n  });\n}\nfunction getHoleArrays(shape) {\n  if (!shape)\n    return [];\n  const holePrimitives = shape.shapePrimitives;\n  const holeArrays = [];\n  for (let k = 0; k < holePrimitives.length; k++) {\n    const holePrimitive = holePrimitives[k].shape;\n    const holePoints = [];\n    const holeBuilder = buildMap[holePrimitive.type];\n    holeBuilder.build(holePrimitive, holePoints);\n    holeArrays.push(holePoints);\n  }\n  return holeArrays;\n}\n\nexport { buildContextBatches };\n//# sourceMappingURL=buildContextBatches.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { BatchGeometry } from '../../../rendering/batcher/gpu/BatchGeometry.mjs';\nimport { getTextureBatchBindGroup } from '../../../rendering/batcher/gpu/getTextureBatchBindGroup.mjs';\nimport { Batcher } from '../../../rendering/batcher/shared/Batcher.mjs';\nimport { InstructionSet } from '../../../rendering/renderers/shared/instructions/InstructionSet.mjs';\nimport { BigPool } from '../../../utils/pool/PoolGroup.mjs';\nimport { buildContextBatches } from './utils/buildContextBatches.mjs';\n\n\"use strict\";\nclass GpuGraphicsContext {\n  constructor() {\n    this.batches = [];\n    this.geometryData = {\n      vertices: [],\n      uvs: [],\n      indices: []\n    };\n  }\n}\nclass GraphicsContextRenderData {\n  constructor() {\n    this.geometry = new BatchGeometry();\n    this.instructions = new InstructionSet();\n  }\n  init() {\n    this.instructions.reset();\n  }\n}\nconst _GraphicsContextSystem = class _GraphicsContextSystem {\n  constructor() {\n    // the root context batches, used to either make a batch or geometry\n    // all graphics use this as a base\n    this._activeBatchers = [];\n    this._gpuContextHash = {};\n    // used for non-batchable graphics\n    this._graphicsDataContextHash = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * Runner init called, update the default options\n   * @ignore\n   */\n  init(options) {\n    _GraphicsContextSystem.defaultOptions.bezierSmoothness = options?.bezierSmoothness ?? _GraphicsContextSystem.defaultOptions.bezierSmoothness;\n  }\n  prerender() {\n    this._returnActiveBatchers();\n  }\n  getContextRenderData(context) {\n    return this._graphicsDataContextHash[context.uid] || this._initContextRenderData(context);\n  }\n  // Context management functions\n  updateGpuContext(context) {\n    let gpuContext = this._gpuContextHash[context.uid] || this._initContext(context);\n    if (context.dirty) {\n      if (gpuContext) {\n        this._cleanGraphicsContextData(context);\n      } else {\n        gpuContext = this._initContext(context);\n      }\n      buildContextBatches(context, gpuContext);\n      const batchMode = context.batchMode;\n      if (context.customShader || batchMode === \"no-batch\") {\n        gpuContext.isBatchable = false;\n      } else if (batchMode === \"auto\") {\n        gpuContext.isBatchable = gpuContext.geometryData.vertices.length < 400;\n      }\n      context.dirty = false;\n    }\n    return gpuContext;\n  }\n  getGpuContext(context) {\n    return this._gpuContextHash[context.uid] || this._initContext(context);\n  }\n  _returnActiveBatchers() {\n    for (let i = 0; i < this._activeBatchers.length; i++) {\n      BigPool.return(this._activeBatchers[i]);\n    }\n    this._activeBatchers.length = 0;\n  }\n  _initContextRenderData(context) {\n    const graphicsData = BigPool.get(GraphicsContextRenderData);\n    const { batches, geometryData } = this._gpuContextHash[context.uid];\n    const vertexSize = geometryData.vertices.length;\n    const indexSize = geometryData.indices.length;\n    for (let i = 0; i < batches.length; i++) {\n      batches[i].applyTransform = false;\n    }\n    const batcher = BigPool.get(Batcher);\n    this._activeBatchers.push(batcher);\n    batcher.ensureAttributeBuffer(vertexSize);\n    batcher.ensureIndexBuffer(indexSize);\n    batcher.begin();\n    for (let i = 0; i < batches.length; i++) {\n      const batch = batches[i];\n      batcher.add(batch);\n    }\n    batcher.finish(graphicsData.instructions);\n    const geometry = graphicsData.geometry;\n    geometry.indexBuffer.setDataWithSize(batcher.indexBuffer, batcher.indexSize, true);\n    geometry.buffers[0].setDataWithSize(batcher.attributeBuffer.float32View, batcher.attributeSize, true);\n    const drawBatches = batcher.batches;\n    for (let i = 0; i < drawBatches.length; i++) {\n      const batch = drawBatches[i];\n      batch.bindGroup = getTextureBatchBindGroup(batch.textures.textures, batch.textures.count);\n    }\n    this._graphicsDataContextHash[context.uid] = graphicsData;\n    return graphicsData;\n  }\n  _initContext(context) {\n    const gpuContext = new GpuGraphicsContext();\n    gpuContext.context = context;\n    this._gpuContextHash[context.uid] = gpuContext;\n    context.on(\"destroy\", this.onGraphicsContextDestroy, this);\n    return this._gpuContextHash[context.uid];\n  }\n  onGraphicsContextDestroy(context) {\n    this._cleanGraphicsContextData(context);\n    context.off(\"destroy\", this.onGraphicsContextDestroy, this);\n    this._gpuContextHash[context.uid] = null;\n  }\n  _cleanGraphicsContextData(context) {\n    const gpuContext = this._gpuContextHash[context.uid];\n    if (!gpuContext.isBatchable) {\n      if (this._graphicsDataContextHash[context.uid]) {\n        BigPool.return(this.getContextRenderData(context));\n        this._graphicsDataContextHash[context.uid] = null;\n      }\n    }\n    if (gpuContext.batches) {\n      gpuContext.batches.forEach((batch) => {\n        BigPool.return(batch);\n      });\n    }\n  }\n  destroy() {\n    for (const i in this._gpuContextHash) {\n      if (this._gpuContextHash[i]) {\n        this.onGraphicsContextDestroy(this._gpuContextHash[i].context);\n      }\n    }\n  }\n};\n/** @ignore */\n_GraphicsContextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem,\n    ExtensionType.CanvasSystem\n  ],\n  name: \"graphicsContext\"\n};\n/** The default options for the GraphicsContextSystem. */\n_GraphicsContextSystem.defaultOptions = {\n  /**\n   * A value from 0 to 1 that controls the smoothness of bezier curves (the higher the smoother)\n   * @default 0.5\n   */\n  bezierSmoothness: 0.5\n};\nlet GraphicsContextSystem = _GraphicsContextSystem;\n\nexport { GpuGraphicsContext, GraphicsContextRenderData, GraphicsContextSystem };\n//# sourceMappingURL=GraphicsContextSystem.mjs.map\n","import { GraphicsContextSystem } from '../GraphicsContextSystem.mjs';\n\n\"use strict\";\nconst RECURSION_LIMIT = 8;\nconst FLT_EPSILON = 11920929e-14;\nconst PATH_DISTANCE_EPSILON = 1;\nconst curveAngleToleranceEpsilon = 0.01;\nconst mAngleTolerance = 0;\nconst mCuspLimit = 0;\nfunction buildAdaptiveBezier(points, sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, smoothness) {\n  const scale = 1;\n  const smoothing = Math.min(\n    0.99,\n    // a value of 1.0 actually inverts smoothing, so we cap it at 0.99\n    Math.max(0, smoothness ?? GraphicsContextSystem.defaultOptions.bezierSmoothness)\n  );\n  let distanceTolerance = (PATH_DISTANCE_EPSILON - smoothing) / scale;\n  distanceTolerance *= distanceTolerance;\n  begin(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance);\n  return points;\n}\nfunction begin(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance) {\n  recursive(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance, 0);\n  points.push(eX, eY);\n}\nfunction recursive(x1, y1, x2, y2, x3, y3, x4, y4, points, distanceTolerance, level) {\n  if (level > RECURSION_LIMIT) {\n    return;\n  }\n  const pi = Math.PI;\n  const x12 = (x1 + x2) / 2;\n  const y12 = (y1 + y2) / 2;\n  const x23 = (x2 + x3) / 2;\n  const y23 = (y2 + y3) / 2;\n  const x34 = (x3 + x4) / 2;\n  const y34 = (y3 + y4) / 2;\n  const x123 = (x12 + x23) / 2;\n  const y123 = (y12 + y23) / 2;\n  const x234 = (x23 + x34) / 2;\n  const y234 = (y23 + y34) / 2;\n  const x1234 = (x123 + x234) / 2;\n  const y1234 = (y123 + y234) / 2;\n  if (level > 0) {\n    let dx = x4 - x1;\n    let dy = y4 - y1;\n    const d2 = Math.abs((x2 - x4) * dy - (y2 - y4) * dx);\n    const d3 = Math.abs((x3 - x4) * dy - (y3 - y4) * dx);\n    let da1;\n    let da2;\n    if (d2 > FLT_EPSILON && d3 > FLT_EPSILON) {\n      if ((d2 + d3) * (d2 + d3) <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        const a23 = Math.atan2(y3 - y2, x3 - x2);\n        da1 = Math.abs(a23 - Math.atan2(y2 - y1, x2 - x1));\n        da2 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - a23);\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da2 >= pi)\n          da2 = 2 * pi - da2;\n        if (da1 + da2 < mAngleTolerance) {\n          points.push(x1234, y1234);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x2, y2);\n            return;\n          }\n          if (da2 > mCuspLimit) {\n            points.push(x3, y3);\n            return;\n          }\n        }\n      }\n    } else if (d2 > FLT_EPSILON) {\n      if (d2 * d2 <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        da1 = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1));\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da1 < mAngleTolerance) {\n          points.push(x2, y2);\n          points.push(x3, y3);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x2, y2);\n            return;\n          }\n        }\n      }\n    } else if (d3 > FLT_EPSILON) {\n      if (d3 * d3 <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        da1 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - Math.atan2(y3 - y2, x3 - x2));\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da1 < mAngleTolerance) {\n          points.push(x2, y2);\n          points.push(x3, y3);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x3, y3);\n            return;\n          }\n        }\n      }\n    } else {\n      dx = x1234 - (x1 + x4) / 2;\n      dy = y1234 - (y1 + y4) / 2;\n      if (dx * dx + dy * dy <= distanceTolerance) {\n        points.push(x1234, y1234);\n        return;\n      }\n    }\n  }\n  recursive(x1, y1, x12, y12, x123, y123, x1234, y1234, points, distanceTolerance, level + 1);\n  recursive(x1234, y1234, x234, y234, x34, y34, x4, y4, points, distanceTolerance, level + 1);\n}\n\nexport { buildAdaptiveBezier };\n//# sourceMappingURL=buildAdaptiveBezier.mjs.map\n","import { GraphicsContextSystem } from '../GraphicsContextSystem.mjs';\n\n\"use strict\";\nconst RECURSION_LIMIT = 8;\nconst FLT_EPSILON = 11920929e-14;\nconst PATH_DISTANCE_EPSILON = 1;\nconst curveAngleToleranceEpsilon = 0.01;\nconst mAngleTolerance = 0;\nfunction buildAdaptiveQuadratic(points, sX, sY, cp1x, cp1y, eX, eY, smoothness) {\n  const scale = 1;\n  const smoothing = Math.min(\n    0.99,\n    // a value of 1.0 actually inverts smoothing, so we cap it at 0.99\n    Math.max(0, smoothness ?? GraphicsContextSystem.defaultOptions.bezierSmoothness)\n  );\n  let distanceTolerance = (PATH_DISTANCE_EPSILON - smoothing) / scale;\n  distanceTolerance *= distanceTolerance;\n  begin(sX, sY, cp1x, cp1y, eX, eY, points, distanceTolerance);\n  return points;\n}\nfunction begin(sX, sY, cp1x, cp1y, eX, eY, points, distanceTolerance) {\n  recursive(points, sX, sY, cp1x, cp1y, eX, eY, distanceTolerance, 0);\n  points.push(eX, eY);\n}\nfunction recursive(points, x1, y1, x2, y2, x3, y3, distanceTolerance, level) {\n  if (level > RECURSION_LIMIT) {\n    return;\n  }\n  const pi = Math.PI;\n  const x12 = (x1 + x2) / 2;\n  const y12 = (y1 + y2) / 2;\n  const x23 = (x2 + x3) / 2;\n  const y23 = (y2 + y3) / 2;\n  const x123 = (x12 + x23) / 2;\n  const y123 = (y12 + y23) / 2;\n  let dx = x3 - x1;\n  let dy = y3 - y1;\n  const d = Math.abs((x2 - x3) * dy - (y2 - y3) * dx);\n  if (d > FLT_EPSILON) {\n    if (d * d <= distanceTolerance * (dx * dx + dy * dy)) {\n      if (mAngleTolerance < curveAngleToleranceEpsilon) {\n        points.push(x123, y123);\n        return;\n      }\n      let da = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1));\n      if (da >= pi)\n        da = 2 * pi - da;\n      if (da < mAngleTolerance) {\n        points.push(x123, y123);\n        return;\n      }\n    }\n  } else {\n    dx = x123 - (x1 + x3) / 2;\n    dy = y123 - (y1 + y3) / 2;\n    if (dx * dx + dy * dy <= distanceTolerance) {\n      points.push(x123, y123);\n      return;\n    }\n  }\n  recursive(points, x1, y1, x12, y12, x123, y123, distanceTolerance, level + 1);\n  recursive(points, x123, y123, x23, y23, x3, y3, distanceTolerance, level + 1);\n}\n\nexport { buildAdaptiveQuadratic };\n//# sourceMappingURL=buildAdaptiveQuadratic.mjs.map\n","\"use strict\";\nfunction buildArc(points, x, y, radius, start, end, clockwise, steps) {\n  let dist = Math.abs(start - end);\n  if (!clockwise && start > end) {\n    dist = 2 * Math.PI - dist;\n  } else if (clockwise && end > start) {\n    dist = 2 * Math.PI - dist;\n  }\n  steps = steps || Math.max(6, Math.floor(6 * Math.pow(radius, 1 / 3) * (dist / Math.PI)));\n  steps = Math.max(steps, 3);\n  let f = dist / steps;\n  let t = start;\n  f *= clockwise ? -1 : 1;\n  for (let i = 0; i < steps + 1; i++) {\n    const cs = Math.cos(t);\n    const sn = Math.sin(t);\n    const nx = x + cs * radius;\n    const ny = y + sn * radius;\n    points.push(nx, ny);\n    t += f;\n  }\n}\n\nexport { buildArc };\n//# sourceMappingURL=buildArc.mjs.map\n","import { buildArc } from './buildArc.mjs';\n\n\"use strict\";\nfunction buildArcTo(points, x1, y1, x2, y2, radius) {\n  const fromX = points[points.length - 2];\n  const fromY = points[points.length - 1];\n  const a1 = fromY - y1;\n  const b1 = fromX - x1;\n  const a2 = y2 - y1;\n  const b2 = x2 - x1;\n  const mm = Math.abs(a1 * b2 - b1 * a2);\n  if (mm < 1e-8 || radius === 0) {\n    if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1) {\n      points.push(x1, y1);\n    }\n    return;\n  }\n  const dd = a1 * a1 + b1 * b1;\n  const cc = a2 * a2 + b2 * b2;\n  const tt = a1 * a2 + b1 * b2;\n  const k1 = radius * Math.sqrt(dd) / mm;\n  const k2 = radius * Math.sqrt(cc) / mm;\n  const j1 = k1 * tt / dd;\n  const j2 = k2 * tt / cc;\n  const cx = k1 * b2 + k2 * b1;\n  const cy = k1 * a2 + k2 * a1;\n  const px = b1 * (k2 + j1);\n  const py = a1 * (k2 + j1);\n  const qx = b2 * (k1 + j2);\n  const qy = a2 * (k1 + j2);\n  const startAngle = Math.atan2(py - cy, px - cx);\n  const endAngle = Math.atan2(qy - cy, qx - cx);\n  buildArc(\n    points,\n    cx + x1,\n    cy + y1,\n    radius,\n    startAngle,\n    endAngle,\n    b1 * a2 > b2 * a1\n  );\n}\n\nexport { buildArcTo };\n//# sourceMappingURL=buildArcTo.mjs.map\n","import { buildAdaptiveBezier } from './buildAdaptiveBezier.mjs';\n\n\"use strict\";\nconst TAU = Math.PI * 2;\nconst out = {\n  centerX: 0,\n  centerY: 0,\n  ang1: 0,\n  ang2: 0\n};\nconst mapToEllipse = ({ x, y }, rx, ry, cosPhi, sinPhi, centerX, centerY, out2) => {\n  x *= rx;\n  y *= ry;\n  const xp = cosPhi * x - sinPhi * y;\n  const yp = sinPhi * x + cosPhi * y;\n  out2.x = xp + centerX;\n  out2.y = yp + centerY;\n  return out2;\n};\nfunction approxUnitArc(ang1, ang2) {\n  const a1 = ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n  const a = ang2 === 1.5707963267948966 ? 0.551915024494 : a1;\n  const x1 = Math.cos(ang1);\n  const y1 = Math.sin(ang1);\n  const x2 = Math.cos(ang1 + ang2);\n  const y2 = Math.sin(ang1 + ang2);\n  return [\n    {\n      x: x1 - y1 * a,\n      y: y1 + x1 * a\n    },\n    {\n      x: x2 + y2 * a,\n      y: y2 - x2 * a\n    },\n    {\n      x: x2,\n      y: y2\n    }\n  ];\n}\nconst vectorAngle = (ux, uy, vx, vy) => {\n  const sign = ux * vy - uy * vx < 0 ? -1 : 1;\n  let dot = ux * vx + uy * vy;\n  if (dot > 1) {\n    dot = 1;\n  }\n  if (dot < -1) {\n    dot = -1;\n  }\n  return sign * Math.acos(dot);\n};\nconst getArcCenter = (px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinPhi, cosPhi, pxp, pyp, out2) => {\n  const rxSq = Math.pow(rx, 2);\n  const rySq = Math.pow(ry, 2);\n  const pxpSq = Math.pow(pxp, 2);\n  const pypSq = Math.pow(pyp, 2);\n  let radicant = rxSq * rySq - rxSq * pypSq - rySq * pxpSq;\n  if (radicant < 0) {\n    radicant = 0;\n  }\n  radicant /= rxSq * pypSq + rySq * pxpSq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n  const centerXp = radicant * rx / ry * pyp;\n  const centerYp = radicant * -ry / rx * pxp;\n  const centerX = cosPhi * centerXp - sinPhi * centerYp + (px + cx) / 2;\n  const centerY = sinPhi * centerXp + cosPhi * centerYp + (py + cy) / 2;\n  const vx1 = (pxp - centerXp) / rx;\n  const vy1 = (pyp - centerYp) / ry;\n  const vx2 = (-pxp - centerXp) / rx;\n  const vy2 = (-pyp - centerYp) / ry;\n  const ang1 = vectorAngle(1, 0, vx1, vy1);\n  let ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n  out2.centerX = centerX;\n  out2.centerY = centerY;\n  out2.ang1 = ang1;\n  out2.ang2 = ang2;\n};\nfunction buildArcToSvg(points, px, py, cx, cy, rx, ry, xAxisRotation = 0, largeArcFlag = 0, sweepFlag = 0) {\n  if (rx === 0 || ry === 0) {\n    return;\n  }\n  const sinPhi = Math.sin(xAxisRotation * TAU / 360);\n  const cosPhi = Math.cos(xAxisRotation * TAU / 360);\n  const pxp = cosPhi * (px - cx) / 2 + sinPhi * (py - cy) / 2;\n  const pyp = -sinPhi * (px - cx) / 2 + cosPhi * (py - cy) / 2;\n  if (pxp === 0 && pyp === 0) {\n    return;\n  }\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  const lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n  getArcCenter(\n    px,\n    py,\n    cx,\n    cy,\n    rx,\n    ry,\n    largeArcFlag,\n    sweepFlag,\n    sinPhi,\n    cosPhi,\n    pxp,\n    pyp,\n    out\n  );\n  let { ang1, ang2 } = out;\n  const { centerX, centerY } = out;\n  let ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1 - ratio) < 1e-7) {\n    ratio = 1;\n  }\n  const segments = Math.max(Math.ceil(ratio), 1);\n  ang2 /= segments;\n  let lastX = points[points.length - 2];\n  let lastY = points[points.length - 1];\n  const outCurvePoint = { x: 0, y: 0 };\n  for (let i = 0; i < segments; i++) {\n    const curve = approxUnitArc(ang1, ang2);\n    const { x: x1, y: y1 } = mapToEllipse(curve[0], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    const { x: x2, y: y2 } = mapToEllipse(curve[1], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    const { x, y } = mapToEllipse(curve[2], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    buildAdaptiveBezier(\n      points,\n      lastX,\n      lastY,\n      x1,\n      y1,\n      x2,\n      y2,\n      x,\n      y\n    );\n    lastX = x;\n    lastY = y;\n    ang1 += ang2;\n  }\n}\n\nexport { buildArcToSvg };\n//# sourceMappingURL=buildArcToSvg.mjs.map\n","\"use strict\";\nfunction roundedShapeArc(g, points, radius) {\n  const vecFrom = (p, pp) => {\n    const x = pp.x - p.x;\n    const y = pp.y - p.y;\n    const len = Math.sqrt(x * x + y * y);\n    const nx = x / len;\n    const ny = y / len;\n    return { len, nx, ny };\n  };\n  const sharpCorner = (i, p) => {\n    if (i === 0) {\n      g.moveTo(p.x, p.y);\n    } else {\n      g.lineTo(p.x, p.y);\n    }\n  };\n  let p1 = points[points.length - 1];\n  for (let i = 0; i < points.length; i++) {\n    const p2 = points[i % points.length];\n    const pRadius = p2.radius ?? radius;\n    if (pRadius <= 0) {\n      sharpCorner(i, p2);\n      p1 = p2;\n      continue;\n    }\n    const p3 = points[(i + 1) % points.length];\n    const v1 = vecFrom(p2, p1);\n    const v2 = vecFrom(p2, p3);\n    if (v1.len < 1e-4 || v2.len < 1e-4) {\n      sharpCorner(i, p2);\n      p1 = p2;\n      continue;\n    }\n    let angle = Math.asin(v1.nx * v2.ny - v1.ny * v2.nx);\n    let radDirection = 1;\n    let drawDirection = false;\n    if (v1.nx * v2.nx - v1.ny * -v2.ny < 0) {\n      if (angle < 0) {\n        angle = Math.PI + angle;\n      } else {\n        angle = Math.PI - angle;\n        radDirection = -1;\n        drawDirection = true;\n      }\n    } else if (angle > 0) {\n      radDirection = -1;\n      drawDirection = true;\n    }\n    const halfAngle = angle / 2;\n    let cRadius;\n    let lenOut = Math.abs(\n      Math.cos(halfAngle) * pRadius / Math.sin(halfAngle)\n    );\n    if (lenOut > Math.min(v1.len / 2, v2.len / 2)) {\n      lenOut = Math.min(v1.len / 2, v2.len / 2);\n      cRadius = Math.abs(lenOut * Math.sin(halfAngle) / Math.cos(halfAngle));\n    } else {\n      cRadius = pRadius;\n    }\n    const cX = p2.x + v2.nx * lenOut + -v2.ny * cRadius * radDirection;\n    const cY = p2.y + v2.ny * lenOut + v2.nx * cRadius * radDirection;\n    const startAngle = Math.atan2(v1.ny, v1.nx) + Math.PI / 2 * radDirection;\n    const endAngle = Math.atan2(v2.ny, v2.nx) - Math.PI / 2 * radDirection;\n    if (i === 0) {\n      g.moveTo(\n        cX + Math.cos(startAngle) * cRadius,\n        cY + Math.sin(startAngle) * cRadius\n      );\n    }\n    g.arc(cX, cY, cRadius, startAngle, endAngle, drawDirection);\n    p1 = p2;\n  }\n}\nfunction roundedShapeQuadraticCurve(g, points, radius, smoothness) {\n  const distance = (p1, p2) => Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n  const pointLerp = (p1, p2, t) => ({\n    x: p1.x + (p2.x - p1.x) * t,\n    y: p1.y + (p2.y - p1.y) * t\n  });\n  const numPoints = points.length;\n  for (let i = 0; i < numPoints; i++) {\n    const thisPoint = points[(i + 1) % numPoints];\n    const pRadius = thisPoint.radius ?? radius;\n    if (pRadius <= 0) {\n      if (i === 0) {\n        g.moveTo(thisPoint.x, thisPoint.y);\n      } else {\n        g.lineTo(thisPoint.x, thisPoint.y);\n      }\n      continue;\n    }\n    const lastPoint = points[i];\n    const nextPoint = points[(i + 2) % numPoints];\n    const lastEdgeLength = distance(lastPoint, thisPoint);\n    let start;\n    if (lastEdgeLength < 1e-4) {\n      start = thisPoint;\n    } else {\n      const lastOffsetDistance = Math.min(lastEdgeLength / 2, pRadius);\n      start = pointLerp(\n        thisPoint,\n        lastPoint,\n        lastOffsetDistance / lastEdgeLength\n      );\n    }\n    const nextEdgeLength = distance(nextPoint, thisPoint);\n    let end;\n    if (nextEdgeLength < 1e-4) {\n      end = thisPoint;\n    } else {\n      const nextOffsetDistance = Math.min(nextEdgeLength / 2, pRadius);\n      end = pointLerp(\n        thisPoint,\n        nextPoint,\n        nextOffsetDistance / nextEdgeLength\n      );\n    }\n    if (i === 0) {\n      g.moveTo(start.x, start.y);\n    } else {\n      g.lineTo(start.x, start.y);\n    }\n    g.quadraticCurveTo(thisPoint.x, thisPoint.y, end.x, end.y, smoothness);\n  }\n}\n\nexport { roundedShapeArc, roundedShapeQuadraticCurve };\n//# sourceMappingURL=roundShape.mjs.map\n","import { Circle } from '../../../../maths/shapes/Circle.mjs';\nimport { Ellipse } from '../../../../maths/shapes/Ellipse.mjs';\nimport { Polygon } from '../../../../maths/shapes/Polygon.mjs';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { RoundedRectangle } from '../../../../maths/shapes/RoundedRectangle.mjs';\nimport { Bounds } from '../../../container/bounds/Bounds.mjs';\nimport { buildAdaptiveBezier } from '../buildCommands/buildAdaptiveBezier.mjs';\nimport { buildAdaptiveQuadratic } from '../buildCommands/buildAdaptiveQuadratic.mjs';\nimport { buildArc } from '../buildCommands/buildArc.mjs';\nimport { buildArcTo } from '../buildCommands/buildArcTo.mjs';\nimport { buildArcToSvg } from '../buildCommands/buildArcToSvg.mjs';\nimport { roundedShapeQuadraticCurve, roundedShapeArc } from './roundShape.mjs';\n\n\"use strict\";\nconst tempRectangle = new Rectangle();\nclass ShapePath {\n  constructor(graphicsPath2D) {\n    /** The list of shape primitives that make up the path. */\n    this.shapePrimitives = [];\n    this._currentPoly = null;\n    this._bounds = new Bounds();\n    this._graphicsPath2D = graphicsPath2D;\n  }\n  /**\n   * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n   * @param x - The x-coordinate for the starting point.\n   * @param y - The y-coordinate for the starting point.\n   * @returns The instance of the current object for chaining.\n   */\n  moveTo(x, y) {\n    this.startPoly(x, y);\n    return this;\n  }\n  /**\n   * Connects the current point to a new point with a straight line. This method updates the current path.\n   * @param x - The x-coordinate of the new point to connect to.\n   * @param y - The y-coordinate of the new point to connect to.\n   * @returns The instance of the current object for chaining.\n   */\n  lineTo(x, y) {\n    this._ensurePoly();\n    const points = this._currentPoly.points;\n    const fromX = points[points.length - 2];\n    const fromY = points[points.length - 1];\n    if (fromX !== x || fromY !== y) {\n      points.push(x, y);\n    }\n    return this;\n  }\n  /**\n   * Adds an arc to the path. The arc is centered at (x, y)\n   *  position with radius `radius` starting at `startAngle` and ending at `endAngle`.\n   * @param x - The x-coordinate of the arc's center.\n   * @param y - The y-coordinate of the arc's center.\n   * @param radius - The radius of the arc.\n   * @param startAngle - The starting angle of the arc, in radians.\n   * @param endAngle - The ending angle of the arc, in radians.\n   * @param counterclockwise - Specifies whether the arc should be drawn in the anticlockwise direction. False by default.\n   * @returns The instance of the current object for chaining.\n   */\n  arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n    this._ensurePoly(false);\n    const points = this._currentPoly.points;\n    buildArc(points, x, y, radius, startAngle, endAngle, counterclockwise);\n    return this;\n  }\n  /**\n   * Adds an arc to the path with the arc tangent to the line joining two specified points.\n   * The arc radius is specified by `radius`.\n   * @param x1 - The x-coordinate of the first point.\n   * @param y1 - The y-coordinate of the first point.\n   * @param x2 - The x-coordinate of the second point.\n   * @param y2 - The y-coordinate of the second point.\n   * @param radius - The radius of the arc.\n   * @returns The instance of the current object for chaining.\n   */\n  arcTo(x1, y1, x2, y2, radius) {\n    this._ensurePoly();\n    const points = this._currentPoly.points;\n    buildArcTo(points, x1, y1, x2, y2, radius);\n    return this;\n  }\n  /**\n   * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n   * @param rx - The x-radius of the ellipse.\n   * @param ry - The y-radius of the ellipse.\n   * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n   * to the x-axis of the coordinate system, in degrees.\n   * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n   * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n   * @param x - The x-coordinate of the arc's end point.\n   * @param y - The y-coordinate of the arc's end point.\n   * @returns The instance of the current object for chaining.\n   */\n  arcToSvg(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y) {\n    const points = this._currentPoly.points;\n    buildArcToSvg(\n      points,\n      this._currentPoly.lastX,\n      this._currentPoly.lastY,\n      x,\n      y,\n      rx,\n      ry,\n      xAxisRotation,\n      largeArcFlag,\n      sweepFlag\n    );\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires three points: the first two are control points and the third one is the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the first control point.\n   * @param cp1y - The y-coordinate of the first control point.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y, smoothness) {\n    this._ensurePoly();\n    const currentPoly = this._currentPoly;\n    buildAdaptiveBezier(\n      this._currentPoly.points,\n      currentPoly.lastX,\n      currentPoly.lastY,\n      cp1x,\n      cp1y,\n      cp2x,\n      cp2y,\n      x,\n      y,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the control point.\n   * @param cp1y - The y-coordinate of the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothing - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveTo(cp1x, cp1y, x, y, smoothing) {\n    this._ensurePoly();\n    const currentPoly = this._currentPoly;\n    buildAdaptiveQuadratic(\n      this._currentPoly.points,\n      currentPoly.lastX,\n      currentPoly.lastY,\n      cp1x,\n      cp1y,\n      x,\n      y,\n      smoothing\n    );\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this.endPoly(true);\n    return this;\n  }\n  /**\n   * Adds another path to the current path. This method allows for the combination of multiple paths into one.\n   * @param path - The `GraphicsPath` object representing the path to add.\n   * @param transform - An optional `Matrix` object to apply a transformation to the path before adding it.\n   * @returns The instance of the current object for chaining.\n   */\n  addPath(path, transform) {\n    this.endPoly();\n    if (transform && !transform.isIdentity()) {\n      path = path.clone(true);\n      path.transform(transform);\n    }\n    for (let i = 0; i < path.instructions.length; i++) {\n      const instruction = path.instructions[i];\n      this[instruction.action](...instruction.data);\n    }\n    return this;\n  }\n  /**\n   * Finalizes the drawing of the current path. Optionally, it can close the path.\n   * @param closePath - A boolean indicating whether to close the path after finishing. False by default.\n   */\n  finish(closePath = false) {\n    this.endPoly(closePath);\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h, transform) {\n    this.drawShape(new Rectangle(x, y, w, h), transform);\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius, transform) {\n    this.drawShape(new Circle(x, y, radius), transform);\n    return this;\n  }\n  /**\n   * Draws a polygon shape. This method allows for the creation of complex polygons by specifying a sequence of points.\n   * @param points - An array of numbers, or or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n   * representing the x and y coordinates of the polygon's vertices, in sequence.\n   * @param close - A boolean indicating whether to close the polygon path. True by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  poly(points, close, transform) {\n    const polygon = new Polygon(points);\n    polygon.closePath = close;\n    this.drawShape(polygon, transform);\n    return this;\n  }\n  /**\n   * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  regularPoly(x, y, radius, sides, rotation = 0, transform) {\n    sides = Math.max(sides | 0, 3);\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const delta = Math.PI * 2 / sides;\n    const polygon = [];\n    for (let i = 0; i < sides; i++) {\n      const angle = i * delta + startAngle;\n      polygon.push(\n        x + radius * Math.cos(angle),\n        y + radius * Math.sin(angle)\n      );\n    }\n    this.poly(polygon, true, transform);\n    return this;\n  }\n  /**\n   * Draws a polygon with rounded corners.\n   * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param corner - The radius of the rounding of the corners.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param smoothness - Optional parameter to adjust the smoothness of the rounding.\n   * @returns The instance of the current object for chaining.\n   */\n  roundPoly(x, y, radius, sides, corner, rotation = 0, smoothness) {\n    sides = Math.max(sides | 0, 3);\n    if (corner <= 0) {\n      return this.regularPoly(x, y, radius, sides, rotation);\n    }\n    const sideLength = radius * Math.sin(Math.PI / sides) - 1e-3;\n    corner = Math.min(corner, sideLength);\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const delta = Math.PI * 2 / sides;\n    const internalAngle = (sides - 2) * Math.PI / sides / 2;\n    for (let i = 0; i < sides; i++) {\n      const angle = i * delta + startAngle;\n      const x0 = x + radius * Math.cos(angle);\n      const y0 = y + radius * Math.sin(angle);\n      const a1 = angle + Math.PI + internalAngle;\n      const a2 = angle - Math.PI - internalAngle;\n      const x1 = x0 + corner * Math.cos(a1);\n      const y1 = y0 + corner * Math.sin(a1);\n      const x3 = x0 + corner * Math.cos(a2);\n      const y3 = y0 + corner * Math.sin(a2);\n      if (i === 0) {\n        this.moveTo(x1, y1);\n      } else {\n        this.lineTo(x1, y1);\n      }\n      this.quadraticCurveTo(x0, y0, x3, y3, smoothness);\n    }\n    return this.closePath();\n  }\n  /**\n   * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n   * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n   * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n   * A minimum of 3 points is required.\n   * @param radius - The default radius for the corners.\n   * This radius is applied to all corners unless overridden in `points`.\n   * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n   *  method instead of an arc method. Defaults to false.\n   * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n   * Higher values make the curve smoother.\n   * @returns The instance of the current object for chaining.\n   */\n  roundShape(points, radius, useQuadratic = false, smoothness) {\n    if (points.length < 3) {\n      return this;\n    }\n    if (useQuadratic) {\n      roundedShapeQuadraticCurve(this, points, radius, smoothness);\n    } else {\n      roundedShapeArc(this, points, radius);\n    }\n    return this.closePath();\n  }\n  /**\n   * Draw Rectangle with fillet corners. This is much like rounded rectangle\n   * however it support negative numbers as well for the corner radius.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param fillet - accept negative or positive values\n   */\n  filletRect(x, y, width, height, fillet) {\n    if (fillet === 0) {\n      return this.rect(x, y, width, height);\n    }\n    const maxFillet = Math.min(width, height) / 2;\n    const inset = Math.min(maxFillet, Math.max(-maxFillet, fillet));\n    const right = x + width;\n    const bottom = y + height;\n    const dir = inset < 0 ? -inset : 0;\n    const size = Math.abs(inset);\n    return this.moveTo(x, y + size).arcTo(x + dir, y + dir, x + size, y, size).lineTo(right - size, y).arcTo(right - dir, y + dir, right, y + size, size).lineTo(right, bottom - size).arcTo(right - dir, bottom - dir, x + width - size, bottom, size).lineTo(x + size, bottom).arcTo(x + dir, bottom - dir, x, bottom - size, size).closePath();\n  }\n  /**\n   * Draw Rectangle with chamfer corners. These are angled corners.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param chamfer - non-zero real number, size of corner cutout\n   * @param transform\n   */\n  chamferRect(x, y, width, height, chamfer, transform) {\n    if (chamfer <= 0) {\n      return this.rect(x, y, width, height);\n    }\n    const inset = Math.min(chamfer, Math.min(width, height) / 2);\n    const right = x + width;\n    const bottom = y + height;\n    const points = [\n      x + inset,\n      y,\n      right - inset,\n      y,\n      right,\n      y + inset,\n      right,\n      bottom - inset,\n      right - inset,\n      bottom,\n      x + inset,\n      bottom,\n      x,\n      bottom - inset,\n      x,\n      y + inset\n    ];\n    for (let i = points.length - 1; i >= 2; i -= 2) {\n      if (points[i] === points[i - 2] && points[i - 1] === points[i - 3]) {\n        points.splice(i - 1, 2);\n      }\n    }\n    return this.poly(points, true, transform);\n  }\n  /**\n   * Draws an ellipse at the specified location and with the given x and y radii.\n   * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n   * @param x - The x-coordinate of the center of the ellipse.\n   * @param y - The y-coordinate of the center of the ellipse.\n   * @param radiusX - The horizontal radius of the ellipse.\n   * @param radiusY - The vertical radius of the ellipse.\n   * @param transform - An optional `Matrix` object to apply a transformation to the ellipse. This can include rotations.\n   * @returns The instance of the current object for chaining.\n   */\n  ellipse(x, y, radiusX, radiusY, transform) {\n    this.drawShape(new Ellipse(x, y, radiusX, radiusY), transform);\n    return this;\n  }\n  /**\n   * Draws a rectangle with rounded corners.\n   * The corner radius can be specified to determine how rounded the corners should be.\n   * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  roundRect(x, y, w, h, radius, transform) {\n    this.drawShape(new RoundedRectangle(x, y, w, h, radius), transform);\n    return this;\n  }\n  /**\n   * Draws a given shape on the canvas.\n   * This is a generic method that can draw any type of shape specified by the `ShapePrimitive` parameter.\n   * An optional transformation matrix can be applied to the shape, allowing for complex transformations.\n   * @param shape - The shape to draw, defined as a `ShapePrimitive` object.\n   * @param matrix - An optional `Matrix` for transforming the shape. This can include rotations,\n   * scaling, and translations.\n   * @returns The instance of the current object for chaining.\n   */\n  drawShape(shape, matrix) {\n    this.endPoly();\n    this.shapePrimitives.push({ shape, transform: matrix });\n    return this;\n  }\n  /**\n   * Starts a new polygon path from the specified starting point.\n   * This method initializes a new polygon or ends the current one if it exists.\n   * @param x - The x-coordinate of the starting point of the new polygon.\n   * @param y - The y-coordinate of the starting point of the new polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  startPoly(x, y) {\n    let currentPoly = this._currentPoly;\n    if (currentPoly) {\n      this.endPoly();\n    }\n    currentPoly = new Polygon();\n    currentPoly.points.push(x, y);\n    this._currentPoly = currentPoly;\n    return this;\n  }\n  /**\n   * Ends the current polygon path. If `closePath` is set to true,\n   * the path is closed by connecting the last point to the first one.\n   * This method finalizes the current polygon and prepares it for drawing or adding to the shape primitives.\n   * @param closePath - A boolean indicating whether to close the polygon by connecting the last point\n   *  back to the starting point. False by default.\n   * @returns The instance of the current object for chaining.\n   */\n  endPoly(closePath = false) {\n    const shape = this._currentPoly;\n    if (shape && shape.points.length > 2) {\n      shape.closePath = closePath;\n      this.shapePrimitives.push({ shape });\n    }\n    this._currentPoly = null;\n    return this;\n  }\n  _ensurePoly(start = true) {\n    if (this._currentPoly)\n      return;\n    this._currentPoly = new Polygon();\n    if (start) {\n      const lastShape = this.shapePrimitives[this.shapePrimitives.length - 1];\n      if (lastShape) {\n        let lx = lastShape.shape.x;\n        let ly = lastShape.shape.y;\n        if (!lastShape.transform.isIdentity()) {\n          const t = lastShape.transform;\n          const tempX = lx;\n          lx = t.a * lx + t.c * ly + t.tx;\n          ly = t.b * tempX + t.d * ly + t.ty;\n        }\n        this._currentPoly.points.push(lx, ly);\n      } else {\n        this._currentPoly.points.push(0, 0);\n      }\n    }\n  }\n  /** Builds the path. */\n  buildPath() {\n    const path = this._graphicsPath2D;\n    this.shapePrimitives.length = 0;\n    this._currentPoly = null;\n    for (let i = 0; i < path.instructions.length; i++) {\n      const instruction = path.instructions[i];\n      this[instruction.action](...instruction.data);\n    }\n    this.finish();\n  }\n  /** Gets the bounds of the path. */\n  get bounds() {\n    const bounds = this._bounds;\n    bounds.clear();\n    const shapePrimitives = this.shapePrimitives;\n    for (let i = 0; i < shapePrimitives.length; i++) {\n      const shapePrimitive = shapePrimitives[i];\n      const boundsRect = shapePrimitive.shape.getBounds(tempRectangle);\n      if (shapePrimitive.transform) {\n        bounds.addRect(boundsRect, shapePrimitive.transform);\n      } else {\n        bounds.addRect(boundsRect);\n      }\n    }\n    return bounds;\n  }\n}\n\nexport { ShapePath };\n//# sourceMappingURL=ShapePath.mjs.map\n","import { Point } from '../../../../maths/point/Point.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { SVGToGraphicsPath } from '../svg/SVGToGraphicsPath.mjs';\nimport { ShapePath } from './ShapePath.mjs';\n\n\"use strict\";\nclass GraphicsPath {\n  /**\n   * Creates a `GraphicsPath` instance optionally from an SVG path string or an array of `PathInstruction`.\n   * @param instructions - An SVG path string or an array of `PathInstruction` objects.\n   */\n  constructor(instructions) {\n    this.instructions = [];\n    this.uid = uid(\"graphicsPath\");\n    this._dirty = true;\n    if (typeof instructions === \"string\") {\n      SVGToGraphicsPath(instructions, this);\n    } else {\n      this.instructions = instructions?.slice() ?? [];\n    }\n  }\n  /**\n   * Provides access to the internal shape path, ensuring it is up-to-date with the current instructions.\n   * @returns The `ShapePath` instance associated with this `GraphicsPath`.\n   */\n  get shapePath() {\n    if (!this._shapePath) {\n      this._shapePath = new ShapePath(this);\n    }\n    if (this._dirty) {\n      this._dirty = false;\n      this._shapePath.buildPath();\n    }\n    return this._shapePath;\n  }\n  /**\n   * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n   * @param path - The `GraphicsPath` to add.\n   * @param transform - An optional transformation to apply to the added path.\n   * @returns The instance of the current object for chaining.\n   */\n  addPath(path, transform) {\n    path = path.clone();\n    this.instructions.push({ action: \"addPath\", data: [path, transform] });\n    this._dirty = true;\n    return this;\n  }\n  arc(...args) {\n    this.instructions.push({ action: \"arc\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  arcTo(...args) {\n    this.instructions.push({ action: \"arcTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  arcToSvg(...args) {\n    this.instructions.push({ action: \"arcToSvg\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  bezierCurveTo(...args) {\n    this.instructions.push({ action: \"bezierCurveTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires two points: the second control point and the end point. The first control point is assumed to be\n   * The starting point is the last point in the current path.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveToShort(cp2x, cp2y, x, y, smoothness) {\n    const last = this.instructions[this.instructions.length - 1];\n    const lastPoint = this.getLastPoint(Point.shared);\n    let cp1x = 0;\n    let cp1y = 0;\n    if (!last || last.action !== \"bezierCurveTo\") {\n      cp1x = lastPoint.x;\n      cp1y = lastPoint.y;\n    } else {\n      cp1x = last.data[2];\n      cp1y = last.data[3];\n      const currentX = lastPoint.x;\n      const currentY = lastPoint.y;\n      cp1x = currentX + (currentX - cp1x);\n      cp1y = currentY + (currentY - cp1y);\n    }\n    this.instructions.push({ action: \"bezierCurveTo\", data: [cp1x, cp1y, cp2x, cp2y, x, y, smoothness] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this.instructions.push({ action: \"closePath\", data: [] });\n    this._dirty = true;\n    return this;\n  }\n  ellipse(...args) {\n    this.instructions.push({ action: \"ellipse\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  lineTo(...args) {\n    this.instructions.push({ action: \"lineTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  moveTo(...args) {\n    this.instructions.push({ action: \"moveTo\", data: args });\n    return this;\n  }\n  quadraticCurveTo(...args) {\n    this.instructions.push({ action: \"quadraticCurveTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It uses the previous point as the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveToShort(x, y, smoothness) {\n    const last = this.instructions[this.instructions.length - 1];\n    const lastPoint = this.getLastPoint(Point.shared);\n    let cpx1 = 0;\n    let cpy1 = 0;\n    if (!last || last.action !== \"quadraticCurveTo\") {\n      cpx1 = lastPoint.x;\n      cpy1 = lastPoint.y;\n    } else {\n      cpx1 = last.data[0];\n      cpy1 = last.data[1];\n      const currentX = lastPoint.x;\n      const currentY = lastPoint.y;\n      cpx1 = currentX + (currentX - cpx1);\n      cpy1 = currentY + (currentY - cpy1);\n    }\n    this.instructions.push({ action: \"quadraticCurveTo\", data: [cpx1, cpy1, x, y, smoothness] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h, transform) {\n    this.instructions.push({ action: \"rect\", data: [x, y, w, h, transform] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius, transform) {\n    this.instructions.push({ action: \"circle\", data: [x, y, radius, transform] });\n    this._dirty = true;\n    return this;\n  }\n  roundRect(...args) {\n    this.instructions.push({ action: \"roundRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  poly(...args) {\n    this.instructions.push({ action: \"poly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  regularPoly(...args) {\n    this.instructions.push({ action: \"regularPoly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  roundPoly(...args) {\n    this.instructions.push({ action: \"roundPoly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  roundShape(...args) {\n    this.instructions.push({ action: \"roundShape\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  filletRect(...args) {\n    this.instructions.push({ action: \"filletRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  chamferRect(...args) {\n    this.instructions.push({ action: \"chamferRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a star shape centered at a specified location. This method allows for the creation\n   *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n   * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n   * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n   * @param x - The x-coordinate of the center of the star.\n   * @param y - The y-coordinate of the center of the star.\n   * @param points - The number of points of the star.\n   * @param radius - The outer radius of the star (distance from the center to the outer points).\n   * @param innerRadius - Optional. The inner radius of the star\n   * (distance from the center to the inner points between the outer points).\n   * If not provided, defaults to half of the `radius`.\n   * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n   * Defaults to 0, meaning one point is directly upward.\n   * @param transform - An optional `Matrix` object to apply a transformation to the star.\n   * This can include rotations, scaling, and translations.\n   * @returns The instance of the current object for chaining further drawing commands.\n   */\n  // eslint-disable-next-line max-len\n  star(x, y, points, radius, innerRadius, rotation, transform) {\n    innerRadius = innerRadius || radius / 2;\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const len = points * 2;\n    const delta = Math.PI * 2 / len;\n    const polygon = [];\n    for (let i = 0; i < len; i++) {\n      const r = i % 2 ? innerRadius : radius;\n      const angle = i * delta + startAngle;\n      polygon.push(\n        x + r * Math.cos(angle),\n        y + r * Math.sin(angle)\n      );\n    }\n    this.poly(polygon, true, transform);\n    return this;\n  }\n  /**\n   * Creates a copy of the current `GraphicsPath` instance. This method supports both shallow and deep cloning.\n   * A shallow clone copies the reference of the instructions array, while a deep clone creates a new array and\n   * copies each instruction individually, ensuring that modifications to the instructions of the cloned `GraphicsPath`\n   * do not affect the original `GraphicsPath` and vice versa.\n   * @param deep - A boolean flag indicating whether the clone should be deep.\n   * @returns A new `GraphicsPath` instance that is a clone of the current instance.\n   */\n  clone(deep = false) {\n    const newGraphicsPath2D = new GraphicsPath();\n    if (!deep) {\n      newGraphicsPath2D.instructions = this.instructions.slice();\n    } else {\n      for (let i = 0; i < this.instructions.length; i++) {\n        const instruction = this.instructions[i];\n        newGraphicsPath2D.instructions.push({ action: instruction.action, data: instruction.data.slice() });\n      }\n    }\n    return newGraphicsPath2D;\n  }\n  clear() {\n    this.instructions.length = 0;\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Applies a transformation matrix to all drawing instructions within the `GraphicsPath`.\n   * This method enables the modification of the path's geometry according to the provided\n   * transformation matrix, which can include translations, rotations, scaling, and skewing.\n   *\n   * Each drawing instruction in the path is updated to reflect the transformation,\n   * ensuring the visual representation of the path is consistent with the applied matrix.\n   *\n   * Note: The transformation is applied directly to the coordinates and control points of the drawing instructions,\n   * not to the path as a whole. This means the transformation's effects are baked into the individual instructions,\n   * allowing for fine-grained control over the path's appearance.\n   * @param matrix - A `Matrix` object representing the transformation to apply.\n   * @returns The instance of the current object for chaining further operations.\n   */\n  transform(matrix) {\n    if (matrix.isIdentity())\n      return this;\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n    const tx = matrix.tx;\n    const ty = matrix.ty;\n    let x = 0;\n    let y = 0;\n    let cpx1 = 0;\n    let cpy1 = 0;\n    let cpx2 = 0;\n    let cpy2 = 0;\n    let rx = 0;\n    let ry = 0;\n    for (let i = 0; i < this.instructions.length; i++) {\n      const instruction = this.instructions[i];\n      const data = instruction.data;\n      switch (instruction.action) {\n        case \"moveTo\":\n        case \"lineTo\":\n          x = data[0];\n          y = data[1];\n          data[0] = a * x + c * y + tx;\n          data[1] = b * x + d * y + ty;\n          break;\n        case \"bezierCurveTo\":\n          cpx1 = data[0];\n          cpy1 = data[1];\n          cpx2 = data[2];\n          cpy2 = data[3];\n          x = data[4];\n          y = data[5];\n          data[0] = a * cpx1 + c * cpy1 + tx;\n          data[1] = b * cpx1 + d * cpy1 + ty;\n          data[2] = a * cpx2 + c * cpy2 + tx;\n          data[3] = b * cpx2 + d * cpy2 + ty;\n          data[4] = a * x + c * y + tx;\n          data[5] = b * x + d * y + ty;\n          break;\n        case \"quadraticCurveTo\":\n          cpx1 = data[0];\n          cpy1 = data[1];\n          x = data[2];\n          y = data[3];\n          data[0] = a * cpx1 + c * cpy1 + tx;\n          data[1] = b * cpx1 + d * cpy1 + ty;\n          data[2] = a * x + c * y + tx;\n          data[3] = b * x + d * y + ty;\n          break;\n        case \"arcToSvg\":\n          x = data[5];\n          y = data[6];\n          rx = data[0];\n          ry = data[1];\n          data[0] = a * rx + c * ry;\n          data[1] = b * rx + d * ry;\n          data[5] = a * x + c * y + tx;\n          data[6] = b * x + d * y + ty;\n          break;\n        case \"circle\":\n          data[4] = adjustTransform(data[3], matrix);\n          break;\n        case \"rect\":\n          data[4] = adjustTransform(data[4], matrix);\n          break;\n        case \"ellipse\":\n          data[8] = adjustTransform(data[8], matrix);\n          break;\n        case \"roundRect\":\n          data[5] = adjustTransform(data[5], matrix);\n          break;\n        case \"addPath\":\n          data[0].transform(matrix);\n          break;\n        case \"poly\":\n          data[2] = adjustTransform(data[2], matrix);\n          break;\n        default:\n          warn(\"unknown transform action\", instruction.action);\n          break;\n      }\n    }\n    this._dirty = true;\n    return this;\n  }\n  get bounds() {\n    return this.shapePath.bounds;\n  }\n  /**\n   * Retrieves the last point from the current drawing instructions in the `GraphicsPath`.\n   * This method is useful for operations that depend on the path's current endpoint,\n   * such as connecting subsequent shapes or paths. It supports various drawing instructions,\n   * ensuring the last point's position is accurately determined regardless of the path's complexity.\n   *\n   * If the last instruction is a `closePath`, the method iterates backward through the instructions\n   *  until it finds an actionable instruction that defines a point (e.g., `moveTo`, `lineTo`,\n   * `quadraticCurveTo`, etc.). For compound paths added via `addPath`, it recursively retrieves\n   * the last point from the nested path.\n   * @param out - A `Point` object where the last point's coordinates will be stored.\n   * This object is modified directly to contain the result.\n   * @returns The `Point` object containing the last point's coordinates.\n   */\n  getLastPoint(out) {\n    let index = this.instructions.length - 1;\n    let lastInstruction = this.instructions[index];\n    if (!lastInstruction) {\n      out.x = 0;\n      out.y = 0;\n      return out;\n    }\n    while (lastInstruction.action === \"closePath\") {\n      index--;\n      if (index < 0) {\n        out.x = 0;\n        out.y = 0;\n        return out;\n      }\n      lastInstruction = this.instructions[index];\n    }\n    switch (lastInstruction.action) {\n      case \"moveTo\":\n      case \"lineTo\":\n        out.x = lastInstruction.data[0];\n        out.y = lastInstruction.data[1];\n        break;\n      case \"quadraticCurveTo\":\n        out.x = lastInstruction.data[2];\n        out.y = lastInstruction.data[3];\n        break;\n      case \"bezierCurveTo\":\n        out.x = lastInstruction.data[4];\n        out.y = lastInstruction.data[5];\n        break;\n      case \"arc\":\n      case \"arcToSvg\":\n        out.x = lastInstruction.data[5];\n        out.y = lastInstruction.data[6];\n        break;\n      case \"addPath\":\n        lastInstruction.data[0].getLastPoint(out);\n        break;\n    }\n    return out;\n  }\n}\nfunction adjustTransform(currentMatrix, transform) {\n  if (currentMatrix) {\n    return currentMatrix.prepend(transform);\n  }\n  return transform.clone();\n}\n\nexport { GraphicsPath };\n//# sourceMappingURL=GraphicsPath.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { GraphicsPath } from '../path/GraphicsPath.mjs';\n\n\"use strict\";\nfunction SVGParser(svg, graphicsContext) {\n  if (typeof svg === \"string\") {\n    const div = document.createElement(\"div\");\n    div.innerHTML = svg.trim();\n    svg = div.querySelector(\"svg\");\n  }\n  const session = {\n    context: graphicsContext,\n    path: new GraphicsPath()\n  };\n  renderChildren(svg, session, null, null);\n  return graphicsContext;\n}\nfunction renderChildren(svg, session, fillStyle, strokeStyle) {\n  const children = svg.children;\n  const { fillStyle: f1, strokeStyle: s1 } = parseStyle(svg);\n  if (f1 && fillStyle) {\n    fillStyle = { ...fillStyle, ...f1 };\n  } else if (f1) {\n    fillStyle = f1;\n  }\n  if (s1 && strokeStyle) {\n    strokeStyle = { ...strokeStyle, ...s1 };\n  } else if (s1) {\n    strokeStyle = s1;\n  }\n  session.context.fillStyle = fillStyle;\n  session.context.strokeStyle = strokeStyle;\n  let x;\n  let y;\n  let x1;\n  let y1;\n  let x2;\n  let y2;\n  let cx;\n  let cy;\n  let r;\n  let rx;\n  let ry;\n  let points;\n  let pointsString;\n  let d;\n  let graphicsPath;\n  let width;\n  let height;\n  switch (svg.nodeName.toLowerCase()) {\n    case \"path\":\n      d = svg.getAttribute(\"d\");\n      graphicsPath = new GraphicsPath(d);\n      session.context.path(graphicsPath);\n      if (fillStyle)\n        session.context.fill();\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"circle\":\n      cx = parseFloatAttribute(svg, \"cx\", 0);\n      cy = parseFloatAttribute(svg, \"cy\", 0);\n      r = parseFloatAttribute(svg, \"r\", 0);\n      session.context.ellipse(cx, cy, r, r);\n      if (fillStyle)\n        session.context.fill();\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"rect\":\n      x = parseFloatAttribute(svg, \"x\", 0);\n      y = parseFloatAttribute(svg, \"y\", 0);\n      width = parseFloatAttribute(svg, \"width\", 0);\n      height = parseFloatAttribute(svg, \"height\", 0);\n      rx = parseFloatAttribute(svg, \"rx\", 0);\n      ry = parseFloatAttribute(svg, \"ry\", 0);\n      if (rx || ry) {\n        session.context.roundRect(x, y, width, height, rx || ry);\n      } else {\n        session.context.rect(x, y, width, height);\n      }\n      if (fillStyle)\n        session.context.fill();\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"ellipse\":\n      cx = parseFloatAttribute(svg, \"cx\", 0);\n      cy = parseFloatAttribute(svg, \"cy\", 0);\n      rx = parseFloatAttribute(svg, \"rx\", 0);\n      ry = parseFloatAttribute(svg, \"ry\", 0);\n      session.context.beginPath();\n      session.context.ellipse(cx, cy, rx, ry);\n      if (fillStyle)\n        session.context.fill();\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"line\":\n      x1 = parseFloatAttribute(svg, \"x1\", 0);\n      y1 = parseFloatAttribute(svg, \"y1\", 0);\n      x2 = parseFloatAttribute(svg, \"x2\", 0);\n      y2 = parseFloatAttribute(svg, \"y2\", 0);\n      session.context.beginPath();\n      session.context.moveTo(x1, y1);\n      session.context.lineTo(x2, y2);\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"polygon\":\n      pointsString = svg.getAttribute(\"points\");\n      points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n      session.context.poly(points, true);\n      if (fillStyle)\n        session.context.fill();\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"polyline\":\n      pointsString = svg.getAttribute(\"points\");\n      points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n      session.context.poly(points, false);\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"g\":\n    case \"svg\":\n      break;\n    default: {\n      console.info(`[SVG parser] <${svg.nodeName}> elements unsupported`);\n      break;\n    }\n  }\n  for (let i = 0; i < children.length; i++) {\n    renderChildren(children[i], session, fillStyle, strokeStyle);\n  }\n}\nfunction parseFloatAttribute(svg, id, defaultValue) {\n  const value = svg.getAttribute(id);\n  return value ? Number(value) : defaultValue;\n}\nfunction parseStyle(svg) {\n  const style = svg.getAttribute(\"style\");\n  const strokeStyle = {};\n  const fillStyle = {};\n  let useFill = false;\n  let useStroke = false;\n  if (style) {\n    const styleParts = style.split(\";\");\n    for (let i = 0; i < styleParts.length; i++) {\n      const stylePart = styleParts[i];\n      const [key, value] = stylePart.split(\":\");\n      switch (key) {\n        case \"stroke\":\n          if (value !== \"none\") {\n            strokeStyle.color = Color.shared.setValue(value).toNumber();\n            useStroke = true;\n          }\n          break;\n        case \"stroke-width\":\n          strokeStyle.width = Number(value);\n          break;\n        case \"fill\":\n          if (value !== \"none\") {\n            useFill = true;\n            fillStyle.color = Color.shared.setValue(value).toNumber();\n          }\n          break;\n        case \"fill-opacity\":\n          fillStyle.alpha = Number(value);\n          break;\n        case \"stroke-opacity\":\n          strokeStyle.alpha = Number(value);\n          break;\n        case \"opacity\":\n          fillStyle.alpha = Number(value);\n          strokeStyle.alpha = Number(value);\n          break;\n      }\n    }\n  } else {\n    const stroke = svg.getAttribute(\"stroke\");\n    if (stroke && stroke !== \"none\") {\n      useStroke = true;\n      strokeStyle.color = Color.shared.setValue(stroke).toNumber();\n      strokeStyle.width = parseFloatAttribute(svg, \"stroke-width\", 1);\n    }\n    const fill = svg.getAttribute(\"fill\");\n    if (fill && fill !== \"none\") {\n      useFill = true;\n      fillStyle.color = Color.shared.setValue(fill).toNumber();\n    }\n  }\n  return {\n    strokeStyle: useStroke ? strokeStyle : null,\n    fillStyle: useFill ? fillStyle : null\n  };\n}\n\nexport { SVGParser };\n//# sourceMappingURL=SVGParser.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { FillGradient } from '../fill/FillGradient.mjs';\nimport { FillPattern } from '../fill/FillPattern.mjs';\n\n\"use strict\";\nfunction isColorLike(value) {\n  return Color.isColorLike(value);\n}\nfunction isFillPattern(value) {\n  return value instanceof FillPattern;\n}\nfunction isFillGradient(value) {\n  return value instanceof FillGradient;\n}\nfunction handleColorLike(fill, value, defaultStyle) {\n  const temp = Color.shared.setValue(value ?? 0);\n  fill.color = temp.toNumber();\n  fill.alpha = temp.alpha === 1 ? defaultStyle.alpha : temp.alpha;\n  fill.texture = Texture.WHITE;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillPattern(fill, value, defaultStyle) {\n  fill.fill = value;\n  fill.color = 16777215;\n  fill.texture = value.texture;\n  fill.matrix = value.transform;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillGradient(fill, value, defaultStyle) {\n  value.buildLinearGradient();\n  fill.fill = value;\n  fill.color = 16777215;\n  fill.texture = value.texture;\n  fill.matrix = value.transform;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillObject(value, defaultStyle) {\n  const style = { ...defaultStyle, ...value };\n  if (style.texture) {\n    if (style.texture !== Texture.WHITE) {\n      const m = style.matrix?.invert() || new Matrix();\n      m.scale(1 / style.texture.frame.width, 1 / style.texture.frame.height);\n      style.matrix = m;\n    }\n    const sourceStyle = style.texture.source.style;\n    if (sourceStyle.addressMode === \"clamp-to-edge\") {\n      sourceStyle.addressMode = \"repeat\";\n      sourceStyle.update();\n    }\n  }\n  const color = Color.shared.setValue(style.color);\n  style.alpha *= color.alpha;\n  style.color = color.toNumber();\n  style.matrix = style.matrix ? style.matrix.clone() : null;\n  return style;\n}\nfunction toFillStyle(value, defaultStyle) {\n  if (value === void 0 || value === null) {\n    return null;\n  }\n  const fill = {};\n  const objectStyle = value;\n  if (isColorLike(value)) {\n    return handleColorLike(fill, value, defaultStyle);\n  } else if (isFillPattern(value)) {\n    return handleFillPattern(fill, value, defaultStyle);\n  } else if (isFillGradient(value)) {\n    return handleFillGradient(fill, value, defaultStyle);\n  } else if (objectStyle.fill && isFillPattern(objectStyle.fill)) {\n    return handleFillPattern(objectStyle, objectStyle.fill, defaultStyle);\n  } else if (objectStyle.fill && isFillGradient(objectStyle.fill)) {\n    return handleFillGradient(objectStyle, objectStyle.fill, defaultStyle);\n  }\n  return handleFillObject(objectStyle, defaultStyle);\n}\nfunction toStrokeStyle(value, defaultStyle) {\n  const { width, alignment, miterLimit, cap, join, ...rest } = defaultStyle;\n  const fill = toFillStyle(value, rest);\n  if (!fill) {\n    return null;\n  }\n  return {\n    width,\n    alignment,\n    miterLimit,\n    cap,\n    join,\n    ...fill\n  };\n}\n\nexport { toFillStyle, toStrokeStyle };\n//# sourceMappingURL=convertFillInputToFillStyle.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Color } from '../../../color/Color.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { Point } from '../../../maths/point/Point.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { uid } from '../../../utils/data/uid.mjs';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\nimport { Bounds } from '../../container/bounds/Bounds.mjs';\nimport { GraphicsPath } from './path/GraphicsPath.mjs';\nimport { SVGParser } from './svg/SVGParser.mjs';\nimport { toFillStyle, toStrokeStyle } from './utils/convertFillInputToFillStyle.mjs';\n\n\"use strict\";\nconst tmpPoint = new Point();\nconst tempMatrix = new Matrix();\nconst _GraphicsContext = class _GraphicsContext extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    this.uid = uid(\"graphicsContext\");\n    this.dirty = true;\n    this.batchMode = \"auto\";\n    this.instructions = [];\n    this._activePath = new GraphicsPath();\n    this._transform = new Matrix();\n    this._fillStyle = { ..._GraphicsContext.defaultFillStyle };\n    this._strokeStyle = { ..._GraphicsContext.defaultStrokeStyle };\n    this._stateStack = [];\n    this._tick = 0;\n    this._bounds = new Bounds();\n    this._boundsDirty = true;\n  }\n  /**\n   * Creates a new GraphicsContext object that is a clone of this instance, copying all properties,\n   * including the current drawing state, transformations, styles, and instructions.\n   * @returns A new GraphicsContext instance with the same properties and state as this one.\n   */\n  clone() {\n    const clone = new _GraphicsContext();\n    clone.batchMode = this.batchMode;\n    clone.instructions = this.instructions.slice();\n    clone._activePath = this._activePath.clone();\n    clone._transform = this._transform.clone();\n    clone._fillStyle = { ...this._fillStyle };\n    clone._strokeStyle = { ...this._strokeStyle };\n    clone._stateStack = this._stateStack.slice();\n    clone._bounds = this._bounds.clone();\n    clone._boundsDirty = true;\n    return clone;\n  }\n  /**\n   * The current fill style of the graphics context. This can be a color, gradient, pattern, or a more complex style defined by a FillStyle object.\n   */\n  get fillStyle() {\n    return this._fillStyle;\n  }\n  set fillStyle(value) {\n    this._fillStyle = toFillStyle(value, _GraphicsContext.defaultFillStyle);\n  }\n  /**\n   * The current stroke style of the graphics context. Similar to fill styles, stroke styles can encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n   */\n  get strokeStyle() {\n    return this._strokeStyle;\n  }\n  set strokeStyle(value) {\n    this._strokeStyle = toStrokeStyle(value, _GraphicsContext.defaultStrokeStyle);\n  }\n  /**\n   * Sets the current fill style of the graphics context. The fill style can be a color, gradient,\n   * pattern, or a more complex style defined by a FillStyle object.\n   * @param style - The fill style to apply. This can be a simple color, a gradient or pattern object,\n   *                or a FillStyle or ConvertedFillStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setFillStyle(style) {\n    this._fillStyle = toFillStyle(style, _GraphicsContext.defaultFillStyle);\n    return this;\n  }\n  /**\n   * Sets the current stroke style of the graphics context. Similar to fill styles, stroke styles can\n   * encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n   * @param style - The stroke style to apply. Can be defined as a color, a gradient or pattern,\n   *                or a StrokeStyle or ConvertedStrokeStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setStrokeStyle(style) {\n    this._strokeStyle = toFillStyle(style, _GraphicsContext.defaultStrokeStyle);\n    return this;\n  }\n  texture(texture, tint, dx, dy, dw, dh) {\n    this.instructions.push({\n      action: \"texture\",\n      data: {\n        image: texture,\n        dx: dx || 0,\n        dy: dy || 0,\n        dw: dw || texture.frame.width,\n        dh: dh || texture.frame.height,\n        transform: this._transform.clone(),\n        alpha: this._fillStyle.alpha,\n        style: tint ? Color.shared.setValue(tint).toNumber() : 16777215\n      }\n    });\n    this.onUpdate();\n    return this;\n  }\n  /**\n   * Resets the current path. Any previous path and its commands are discarded and a new path is\n   * started. This is typically called before beginning a new shape or series of drawing commands.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  beginPath() {\n    this._activePath = new GraphicsPath();\n    return this;\n  }\n  fill(style, alpha) {\n    let path;\n    const lastInstruction = this.instructions[this.instructions.length - 1];\n    if (this._tick === 0 && lastInstruction && lastInstruction.action === \"stroke\") {\n      path = lastInstruction.data.path;\n    } else {\n      path = this._activePath.clone();\n    }\n    if (!path)\n      return this;\n    if (style != null) {\n      if (alpha !== void 0 && typeof style === \"number\") {\n        deprecation(v8_0_0, \"GraphicsContext.fill(color, alpha) is deprecated, use GraphicsContext.fill({ color, alpha }) instead\");\n        style = { color: style, alpha };\n      }\n      this._fillStyle = toFillStyle(style, _GraphicsContext.defaultFillStyle);\n    }\n    this.instructions.push({\n      action: \"fill\",\n      // TODO copy fill style!\n      data: { style: this.fillStyle, path }\n    });\n    this.onUpdate();\n    this._initNextPathLocation();\n    this._tick = 0;\n    return this;\n  }\n  _initNextPathLocation() {\n    const { x, y } = this._activePath.getLastPoint(Point.shared);\n    this._activePath.clear();\n    this._activePath.moveTo(x, y);\n  }\n  /**\n   * Strokes the current path with the current stroke style. This method can take an optional\n   * FillInput parameter to define the stroke's appearance, including its color, width, and other properties.\n   * @param style - (Optional) The stroke style to apply. Can be defined as a simple color or a more complex style object. If omitted, uses the current stroke style.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  stroke(style) {\n    let path;\n    const lastInstruction = this.instructions[this.instructions.length - 1];\n    if (this._tick === 0 && lastInstruction && lastInstruction.action === \"fill\") {\n      path = lastInstruction.data.path;\n    } else {\n      path = this._activePath.clone();\n    }\n    if (!path)\n      return this;\n    if (style != null) {\n      this._strokeStyle = toStrokeStyle(style, _GraphicsContext.defaultStrokeStyle);\n    }\n    this.instructions.push({\n      action: \"stroke\",\n      // TODO copy fill style!\n      data: { style: this.strokeStyle, path }\n    });\n    this.onUpdate();\n    this._initNextPathLocation();\n    this._tick = 0;\n    return this;\n  }\n  /**\n   * Applies a cutout to the last drawn shape. This is used to create holes or complex shapes by\n   * subtracting a path from the previously drawn path. If a hole is not completely in a shape, it will\n   * fail to cut correctly!\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  cut() {\n    for (let i = 0; i < 2; i++) {\n      const lastInstruction = this.instructions[this.instructions.length - 1 - i];\n      const holePath = this._activePath.clone();\n      if (lastInstruction) {\n        if (lastInstruction.action === \"stroke\" || lastInstruction.action === \"fill\") {\n          if (lastInstruction.data.hole) {\n            lastInstruction.data.hole.addPath(holePath);\n          } else {\n            lastInstruction.data.hole = holePath;\n            break;\n          }\n        }\n      }\n    }\n    this._initNextPathLocation();\n    return this;\n  }\n  /**\n   * Adds an arc to the current path, which is centered at (x, y) with the specified radius,\n   * starting and ending angles, and direction.\n   * @param x - The x-coordinate of the arc's center.\n   * @param y - The y-coordinate of the arc's center.\n   * @param radius - The arc's radius.\n   * @param startAngle - The starting angle, in radians.\n   * @param endAngle - The ending angle, in radians.\n   * @param counterclockwise - (Optional) Specifies whether the arc is drawn counterclockwise (true) or clockwise (false). Defaults to false.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arc(\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      radius,\n      startAngle,\n      endAngle,\n      counterclockwise\n    );\n    return this;\n  }\n  /**\n   * Adds an arc to the current path with the given control points and radius, connected to the previous point\n   * by a straight line if necessary.\n   * @param x1 - The x-coordinate of the first control point.\n   * @param y1 - The y-coordinate of the first control point.\n   * @param x2 - The x-coordinate of the second control point.\n   * @param y2 - The y-coordinate of the second control point.\n   * @param radius - The arc's radius.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  arcTo(x1, y1, x2, y2, radius) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arcTo(\n      t.a * x1 + t.c * y1 + t.tx,\n      t.b * x1 + t.d * y1 + t.ty,\n      t.a * x2 + t.c * y2 + t.tx,\n      t.b * x2 + t.d * y2 + t.ty,\n      radius\n    );\n    return this;\n  }\n  /**\n   * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n   * @param rx - The x-radius of the ellipse.\n   * @param ry - The y-radius of the ellipse.\n   * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n   * to the x-axis of the coordinate system, in degrees.\n   * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n   * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n   * @param x - The x-coordinate of the arc's end point.\n   * @param y - The y-coordinate of the arc's end point.\n   * @returns The instance of the current object for chaining.\n   */\n  arcToSvg(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arcToSvg(\n      rx,\n      ry,\n      xAxisRotation,\n      // should we rotate this with transform??\n      largeArcFlag,\n      sweepFlag,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty\n    );\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires three points: the first two are control points and the third one is the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the first control point.\n   * @param cp1y - The y-coordinate of the first control point.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y, smoothness) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.bezierCurveTo(\n      t.a * cp1x + t.c * cp1y + t.tx,\n      t.b * cp1x + t.d * cp1y + t.ty,\n      t.a * cp2x + t.c * cp2y + t.tx,\n      t.b * cp2x + t.d * cp2y + t.ty,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this._tick++;\n    this._activePath?.closePath();\n    return this;\n  }\n  /**\n   * Draws an ellipse at the specified location and with the given x and y radii.\n   * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n   * @param x - The x-coordinate of the center of the ellipse.\n   * @param y - The y-coordinate of the center of the ellipse.\n   * @param radiusX - The horizontal radius of the ellipse.\n   * @param radiusY - The vertical radius of the ellipse.\n   * @returns The instance of the current object for chaining.\n   */\n  ellipse(x, y, radiusX, radiusY) {\n    this._tick++;\n    this._activePath.ellipse(x, y, radiusX, radiusY, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius) {\n    this._tick++;\n    this._activePath.circle(x, y, radius, this._transform.clone());\n    return this;\n  }\n  /**\n   * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n   * @param path - The `GraphicsPath` to add.\n   * @returns The instance of the current object for chaining.\n   */\n  path(path) {\n    this._tick++;\n    this._activePath.addPath(path, this._transform.clone());\n    return this;\n  }\n  /**\n   * Connects the current point to a new point with a straight line. This method updates the current path.\n   * @param x - The x-coordinate of the new point to connect to.\n   * @param y - The y-coordinate of the new point to connect to.\n   * @returns The instance of the current object for chaining.\n   */\n  lineTo(x, y) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.lineTo(\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty\n    );\n    return this;\n  }\n  /**\n   * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n   * @param x - The x-coordinate for the starting point.\n   * @param y - The y-coordinate for the starting point.\n   * @returns The instance of the current object for chaining.\n   */\n  moveTo(x, y) {\n    this._tick++;\n    const t = this._transform;\n    const instructions = this._activePath.instructions;\n    const transformedX = t.a * x + t.c * y + t.tx;\n    const transformedY = t.b * x + t.d * y + t.ty;\n    if (instructions.length === 1 && instructions[0].action === \"moveTo\") {\n      instructions[0].data[0] = transformedX;\n      instructions[0].data[1] = transformedY;\n      return this;\n    }\n    this._activePath.moveTo(\n      transformedX,\n      transformedY\n    );\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n   * The starting point is the last point in the current path.\n   * @param cpx - The x-coordinate of the control point.\n   * @param cpy - The y-coordinate of the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveTo(cpx, cpy, x, y, smoothness) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.quadraticCurveTo(\n      t.a * cpx + t.c * cpy + t.tx,\n      t.b * cpx + t.d * cpy + t.ty,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h) {\n    this._tick++;\n    this._activePath.rect(x, y, w, h, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a rectangle with rounded corners.\n   * The corner radius can be specified to determine how rounded the corners should be.\n   * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n   * @returns The instance of the current object for chaining.\n   */\n  roundRect(x, y, w, h, radius) {\n    this._tick++;\n    this._activePath.roundRect(x, y, w, h, radius, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a polygon shape by specifying a sequence of points. This method allows for the creation of complex polygons,\n   * which can be both open and closed. An optional transformation can be applied, enabling the polygon to be scaled,\n   * rotated, or translated as needed.\n   * @param points - An array of numbers, or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n   * representing the x and y coordinates, of the polygon's vertices, in sequence.\n   * @param close - A boolean indicating whether to close the polygon path. True by default.\n   */\n  poly(points, close) {\n    this._tick++;\n    this._activePath.poly(points, close, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  regularPoly(x, y, radius, sides, rotation = 0, transform) {\n    this._tick++;\n    this._activePath.regularPoly(x, y, radius, sides, rotation, transform);\n    return this;\n  }\n  /**\n   * Draws a polygon with rounded corners.\n   * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param corner - The radius of the rounding of the corners.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @returns The instance of the current object for chaining.\n   */\n  roundPoly(x, y, radius, sides, corner, rotation) {\n    this._tick++;\n    this._activePath.roundPoly(x, y, radius, sides, corner, rotation);\n    return this;\n  }\n  /**\n   * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n   * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n   * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n   * A minimum of 3 points is required.\n   * @param radius - The default radius for the corners.\n   * This radius is applied to all corners unless overridden in `points`.\n   * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n   *  method instead of an arc method. Defaults to false.\n   * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n   * Higher values make the curve smoother.\n   * @returns The instance of the current object for chaining.\n   */\n  roundShape(points, radius, useQuadratic, smoothness) {\n    this._tick++;\n    this._activePath.roundShape(points, radius, useQuadratic, smoothness);\n    return this;\n  }\n  /**\n   * Draw Rectangle with fillet corners. This is much like rounded rectangle\n   * however it support negative numbers as well for the corner radius.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param fillet - accept negative or positive values\n   */\n  filletRect(x, y, width, height, fillet) {\n    this._tick++;\n    this._activePath.filletRect(x, y, width, height, fillet);\n    return this;\n  }\n  /**\n   * Draw Rectangle with chamfer corners. These are angled corners.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param chamfer - non-zero real number, size of corner cutout\n   * @param transform\n   */\n  chamferRect(x, y, width, height, chamfer, transform) {\n    this._tick++;\n    this._activePath.chamferRect(x, y, width, height, chamfer, transform);\n    return this;\n  }\n  /**\n   * Draws a star shape centered at a specified location. This method allows for the creation\n   *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n   * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n   * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n   * @param x - The x-coordinate of the center of the star.\n   * @param y - The y-coordinate of the center of the star.\n   * @param points - The number of points of the star.\n   * @param radius - The outer radius of the star (distance from the center to the outer points).\n   * @param innerRadius - Optional. The inner radius of the star\n   * (distance from the center to the inner points between the outer points).\n   * If not provided, defaults to half of the `radius`.\n   * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n   * Defaults to 0, meaning one point is directly upward.\n   * @returns The instance of the current object for chaining further drawing commands.\n   */\n  star(x, y, points, radius, innerRadius = 0, rotation = 0) {\n    this._tick++;\n    this._activePath.star(x, y, points, radius, innerRadius, rotation, this._transform.clone());\n    return this;\n  }\n  /**\n   * Parses and renders an SVG string into the graphics context. This allows for complex shapes and paths\n   * defined in SVG format to be drawn within the graphics context.\n   * @param svg - The SVG string to be parsed and rendered.\n   */\n  svg(svg) {\n    this._tick++;\n    SVGParser(svg, this);\n    return this;\n  }\n  /**\n   * Restores the most recently saved graphics state by popping the top of the graphics state stack.\n   * This includes transformations, fill styles, and stroke styles.\n   */\n  restore() {\n    const state = this._stateStack.pop();\n    if (state) {\n      this._transform = state.transform;\n      this._fillStyle = state.fillStyle;\n      this._strokeStyle = state.strokeStyle;\n    }\n    return this;\n  }\n  /** Saves the current graphics state, including transformations, fill styles, and stroke styles, onto a stack. */\n  save() {\n    this._stateStack.push({\n      transform: this._transform.clone(),\n      fillStyle: { ...this._fillStyle },\n      strokeStyle: { ...this._strokeStyle }\n    });\n    return this;\n  }\n  /**\n   * Returns the current transformation matrix of the graphics context.\n   * @returns The current transformation matrix.\n   */\n  getTransform() {\n    return this._transform;\n  }\n  /**\n   * Resets the current transformation matrix to the identity matrix, effectively removing any transformations (rotation, scaling, translation) previously applied.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  resetTransform() {\n    this._transform.identity();\n    return this;\n  }\n  /**\n   * Applies a rotation transformation to the graphics context around the current origin.\n   * @param angle - The angle of rotation in radians.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  rotate(angle) {\n    this._transform.rotate(angle);\n    return this;\n  }\n  /**\n   * Applies a scaling transformation to the graphics context, scaling drawings by x horizontally and by y vertically.\n   * @param x - The scale factor in the horizontal direction.\n   * @param y - (Optional) The scale factor in the vertical direction. If not specified, the x value is used for both directions.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  scale(x, y = x) {\n    this._transform.scale(x, y);\n    return this;\n  }\n  setTransform(a, b, c, d, dx, dy) {\n    if (a instanceof Matrix) {\n      this._transform.set(a.a, a.b, a.c, a.d, a.tx, a.ty);\n      return this;\n    }\n    this._transform.set(a, b, c, d, dx, dy);\n    return this;\n  }\n  transform(a, b, c, d, dx, dy) {\n    if (a instanceof Matrix) {\n      this._transform.append(a);\n      return this;\n    }\n    tempMatrix.set(a, b, c, d, dx, dy);\n    this._transform.append(tempMatrix);\n    return this;\n  }\n  /**\n   * Applies a translation transformation to the graphics context, moving the origin by the specified amounts.\n   * @param x - The amount to translate in the horizontal direction.\n   * @param y - (Optional) The amount to translate in the vertical direction. If not specified, the x value is used for both directions.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  translate(x, y = x) {\n    this._transform.translate(x, y);\n    return this;\n  }\n  /**\n   * Clears all drawing commands from the graphics context, effectively resetting it. This includes clearing the path,\n   * and optionally resetting transformations to the identity matrix.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  clear() {\n    this._activePath.clear();\n    this.instructions.length = 0;\n    this.resetTransform();\n    this.onUpdate();\n    return this;\n  }\n  onUpdate() {\n    if (this.dirty)\n      return;\n    this.emit(\"update\", this, 16);\n    this.dirty = true;\n    this._boundsDirty = true;\n  }\n  /** The bounds of the graphic shape. */\n  get bounds() {\n    if (!this._boundsDirty)\n      return this._bounds;\n    const bounds = this._bounds;\n    bounds.clear();\n    for (let i = 0; i < this.instructions.length; i++) {\n      const instruction = this.instructions[i];\n      const action = instruction.action;\n      if (action === \"fill\") {\n        const data = instruction.data;\n        bounds.addBounds(data.path.bounds);\n      } else if (action === \"texture\") {\n        const data = instruction.data;\n        bounds.addFrame(data.dx, data.dy, data.dx + data.dw, data.dy + data.dh, data.transform);\n      }\n      if (action === \"stroke\") {\n        const data = instruction.data;\n        const padding = data.style.width / 2;\n        const _bounds = data.path.bounds;\n        bounds.addFrame(\n          _bounds.minX - padding,\n          _bounds.minY - padding,\n          _bounds.maxX + padding,\n          _bounds.maxY + padding\n        );\n      }\n    }\n    return bounds;\n  }\n  /**\n   * Check to see if a point is contained within this geometry.\n   * @param point - Point to check if it's contained.\n   * @returns {boolean} `true` if the point is contained within geometry.\n   */\n  containsPoint(point) {\n    if (!this.bounds.containsPoint(point.x, point.y))\n      return false;\n    const instructions = this.instructions;\n    let hasHit = false;\n    for (let k = 0; k < instructions.length; k++) {\n      const instruction = instructions[k];\n      const data = instruction.data;\n      const path = data.path;\n      if (!instruction.action || !path)\n        continue;\n      const style = data.style;\n      const shapes = path.shapePath.shapePrimitives;\n      for (let i = 0; i < shapes.length; i++) {\n        const shape = shapes[i].shape;\n        if (!style || !shape)\n          continue;\n        const transform = shapes[i].transform;\n        const transformedPoint = transform ? transform.applyInverse(point, tmpPoint) : point;\n        if (instruction.action === \"fill\") {\n          hasHit = shape.contains(transformedPoint.x, transformedPoint.y);\n        } else {\n          hasHit = shape.strokeContains(transformedPoint.x, transformedPoint.y, style.width);\n        }\n        const holes = data.hole;\n        if (holes) {\n          const holeShapes = holes.shapePath?.shapePrimitives;\n          if (holeShapes) {\n            for (let j = 0; j < holeShapes.length; j++) {\n              if (holeShapes[j].shape.contains(transformedPoint.x, transformedPoint.y)) {\n                hasHit = false;\n              }\n            }\n          }\n        }\n        if (hasHit) {\n          return true;\n        }\n      }\n    }\n    return hasHit;\n  }\n  /**\n   * Destroys the GraphicsData object.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.texture=false] - Should it destroy the current texture of the fill/stroke style?\n   * @param {boolean} [options.textureSource=false] - Should it destroy the texture source of the fill/stroke style?\n   */\n  destroy(options = false) {\n    this._stateStack.length = 0;\n    this._transform = null;\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n    const destroyTexture = typeof options === \"boolean\" ? options : options?.texture;\n    if (destroyTexture) {\n      const destroyTextureSource = typeof options === \"boolean\" ? options : options?.textureSource;\n      if (this._fillStyle.texture) {\n        this._fillStyle.texture.destroy(destroyTextureSource);\n      }\n      if (this._strokeStyle.texture) {\n        this._strokeStyle.texture.destroy(destroyTextureSource);\n      }\n    }\n    this._fillStyle = null;\n    this._strokeStyle = null;\n    this.instructions = null;\n    this._activePath = null;\n    this._bounds = null;\n    this._stateStack = null;\n    this.customShader = null;\n    this._transform = null;\n  }\n};\n/** The default fill style to use when none is provided. */\n_GraphicsContext.defaultFillStyle = {\n  /** The color to use for the fill. */\n  color: 16777215,\n  /** The alpha value to use for the fill. */\n  alpha: 1,\n  /** The texture to use for the fill. */\n  texture: Texture.WHITE,\n  /** The matrix to apply. */\n  matrix: null,\n  /** The fill pattern to use. */\n  fill: null\n};\n/** The default stroke style to use when none is provided. */\n_GraphicsContext.defaultStrokeStyle = {\n  /** The width of the stroke. */\n  width: 1,\n  /** The color to use for the stroke. */\n  color: 16777215,\n  /** The alpha value to use for the stroke. */\n  alpha: 1,\n  /** The alignment of the stroke. */\n  alignment: 0.5,\n  /** The miter limit to use. */\n  miterLimit: 10,\n  /** The line cap style to use. */\n  cap: \"butt\",\n  /** The line join style to use. */\n  join: \"miter\",\n  /** The texture to use for the fill. */\n  texture: Texture.WHITE,\n  /** The matrix to apply. */\n  matrix: null,\n  /** The fill pattern to use. */\n  fill: null\n};\nlet GraphicsContext = _GraphicsContext;\n\nexport { GraphicsContext };\n//# sourceMappingURL=GraphicsContext.mjs.map\n","import { Color } from '../../../color/Color.mjs';\n\n\"use strict\";\nconst valuesToIterateForKeys = [\n  \"align\",\n  \"breakWords\",\n  \"cssOverrides\",\n  \"fontVariant\",\n  \"fontWeight\",\n  \"leading\",\n  \"letterSpacing\",\n  \"lineHeight\",\n  \"padding\",\n  \"textBaseline\",\n  \"trim\",\n  \"whiteSpace\",\n  \"wordWrap\",\n  \"wordWrapWidth\",\n  \"fontFamily\",\n  \"fontStyle\",\n  \"fontSize\"\n];\nfunction generateTextStyleKey(style) {\n  const key = [];\n  let index = 0;\n  for (let i = 0; i < valuesToIterateForKeys.length; i++) {\n    const prop = `_${valuesToIterateForKeys[i]}`;\n    key[index++] = style[prop];\n  }\n  index = addFillStyleKey(style._fill, key, index);\n  index = addStokeStyleKey(style._stroke, key, index);\n  index = addDropShadowKey(style.dropShadow, key, index);\n  return key.join(\"-\");\n}\nfunction addFillStyleKey(fillStyle, key, index) {\n  if (!fillStyle)\n    return index;\n  key[index++] = fillStyle.color;\n  key[index++] = fillStyle.alpha;\n  key[index++] = fillStyle.fill?.styleKey;\n  return index;\n}\nfunction addStokeStyleKey(strokeStyle, key, index) {\n  if (!strokeStyle)\n    return index;\n  index = addFillStyleKey(strokeStyle, key, index);\n  key[index++] = strokeStyle.width;\n  key[index++] = strokeStyle.alignment;\n  key[index++] = strokeStyle.cap;\n  key[index++] = strokeStyle.join;\n  key[index++] = strokeStyle.miterLimit;\n  return index;\n}\nfunction addDropShadowKey(dropShadow, key, index) {\n  if (!dropShadow)\n    return index;\n  key[index++] = dropShadow.alpha;\n  key[index++] = dropShadow.angle;\n  key[index++] = dropShadow.blur;\n  key[index++] = dropShadow.distance;\n  key[index++] = Color.shared.setValue(dropShadow.color).toNumber();\n  return index;\n}\n\nexport { generateTextStyleKey };\n//# sourceMappingURL=generateTextStyleKey.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Color } from '../../color/Color.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { FillGradient } from '../graphics/shared/fill/FillGradient.mjs';\nimport { FillPattern } from '../graphics/shared/fill/FillPattern.mjs';\nimport { GraphicsContext } from '../graphics/shared/GraphicsContext.mjs';\nimport { toFillStyle, toStrokeStyle } from '../graphics/shared/utils/convertFillInputToFillStyle.mjs';\nimport { generateTextStyleKey } from './utils/generateTextStyleKey.mjs';\n\n\"use strict\";\nconst _TextStyle = class _TextStyle extends EventEmitter {\n  constructor(style = {}) {\n    super();\n    convertV7Tov8Style(style);\n    const fullStyle = { ..._TextStyle.defaultTextStyle, ...style };\n    for (const key in fullStyle) {\n      const thisKey = key;\n      this[thisKey] = fullStyle[key];\n    }\n    this.update();\n  }\n  /**\n   * Alignment for multiline text, does not affect single line text.\n   * @member {'left'|'center'|'right'|'justify'}\n   */\n  get align() {\n    return this._align;\n  }\n  set align(value) {\n    this._align = value;\n    this.update();\n  }\n  /** Indicates if lines can be wrapped within words, it needs wordWrap to be set to true. */\n  get breakWords() {\n    return this._breakWords;\n  }\n  set breakWords(value) {\n    this._breakWords = value;\n    this.update();\n  }\n  /** Set a drop shadow for the text. */\n  get dropShadow() {\n    return this._dropShadow;\n  }\n  set dropShadow(value) {\n    if (value !== null && typeof value === \"object\") {\n      this._dropShadow = this._createProxy({ ..._TextStyle.defaultDropShadow, ...value });\n    } else {\n      this._dropShadow = value ? this._createProxy({ ..._TextStyle.defaultDropShadow }) : null;\n    }\n    this.update();\n  }\n  /** The font family, can be a single font name, or a list of names where the first is the preferred font. */\n  get fontFamily() {\n    return this._fontFamily;\n  }\n  set fontFamily(value) {\n    this._fontFamily = value;\n    this.update();\n  }\n  /** The font size (as a number it converts to px, but as a string, equivalents are '26px','20pt','160%' or '1.6em') */\n  get fontSize() {\n    return this._fontSize;\n  }\n  set fontSize(value) {\n    if (typeof value === \"string\") {\n      this._fontSize = parseInt(value, 10);\n    } else {\n      this._fontSize = value;\n    }\n    this.update();\n  }\n  /**\n   * The font style.\n   * @member {'normal'|'italic'|'oblique'}\n   */\n  get fontStyle() {\n    return this._fontStyle;\n  }\n  set fontStyle(value) {\n    this._fontStyle = value;\n    this.update();\n  }\n  /**\n   * The font variant.\n   * @member {'normal'|'small-caps'}\n   */\n  get fontVariant() {\n    return this._fontVariant;\n  }\n  set fontVariant(value) {\n    this._fontVariant = value;\n    this.update();\n  }\n  /**\n   * The font weight.\n   * @member {'normal'|'bold'|'bolder'|'lighter'|'100'|'200'|'300'|'400'|'500'|'600'|'700'|'800'|'900'}\n   */\n  get fontWeight() {\n    return this._fontWeight;\n  }\n  set fontWeight(value) {\n    this._fontWeight = value;\n    this.update();\n  }\n  /** The space between lines. */\n  get leading() {\n    return this._leading;\n  }\n  set leading(value) {\n    this._leading = value;\n    this.update();\n  }\n  /** The amount of spacing between letters, default is 0. */\n  get letterSpacing() {\n    return this._letterSpacing;\n  }\n  set letterSpacing(value) {\n    this._letterSpacing = value;\n    this.update();\n  }\n  /** The line height, a number that represents the vertical space that a letter uses. */\n  get lineHeight() {\n    return this._lineHeight;\n  }\n  set lineHeight(value) {\n    this._lineHeight = value;\n    this.update();\n  }\n  /**\n   * Occasionally some fonts are cropped. Adding some padding will prevent this from happening\n   * by adding padding to all sides of the text.\n   */\n  get padding() {\n    return this._padding;\n  }\n  set padding(value) {\n    this._padding = value;\n    this.update();\n  }\n  /** Trim transparent borders. This is an expensive operation so only use this if you have to! */\n  get trim() {\n    return this._trim;\n  }\n  set trim(value) {\n    this._trim = value;\n    this.update();\n  }\n  /**\n   * The baseline of the text that is rendered.\n   * @member {'alphabetic'|'top'|'hanging'|'middle'|'ideographic'|'bottom'}\n   */\n  get textBaseline() {\n    return this._textBaseline;\n  }\n  set textBaseline(value) {\n    this._textBaseline = value;\n    this.update();\n  }\n  /**\n   * How newlines and spaces should be handled.\n   * Default is 'pre' (preserve, preserve).\n   *\n   *  value       | New lines     |   Spaces\n   *  ---         | ---           |   ---\n   * 'normal'     | Collapse      |   Collapse\n   * 'pre'        | Preserve      |   Preserve\n   * 'pre-line'   | Preserve      |   Collapse\n   * @member {'normal'|'pre'|'pre-line'}\n   */\n  get whiteSpace() {\n    return this._whiteSpace;\n  }\n  set whiteSpace(value) {\n    this._whiteSpace = value;\n    this.update();\n  }\n  /** Indicates if word wrap should be used. */\n  get wordWrap() {\n    return this._wordWrap;\n  }\n  set wordWrap(value) {\n    this._wordWrap = value;\n    this.update();\n  }\n  /** The width at which text will wrap, it needs wordWrap to be set to true. */\n  get wordWrapWidth() {\n    return this._wordWrapWidth;\n  }\n  set wordWrapWidth(value) {\n    this._wordWrapWidth = value;\n    this.update();\n  }\n  /** A fillstyle that will be used on the text e.g., 'red', '#00FF00'. */\n  get fill() {\n    return this._originalFill;\n  }\n  set fill(value) {\n    if (value === this._originalFill)\n      return;\n    this._originalFill = value;\n    if (this._isFillStyle(value)) {\n      this._originalFill = this._createProxy({ ...GraphicsContext.defaultFillStyle, ...value }, () => {\n        this._fill = toFillStyle(\n          { ...this._originalFill },\n          GraphicsContext.defaultFillStyle\n        );\n      });\n    }\n    this._fill = toFillStyle(\n      value === 0 ? \"black\" : value,\n      GraphicsContext.defaultFillStyle\n    );\n    this.update();\n  }\n  /** A fillstyle that will be used on the text stroke, e.g., 'blue', '#FCFF00'. */\n  get stroke() {\n    return this._originalStroke;\n  }\n  set stroke(value) {\n    if (value === this._originalStroke)\n      return;\n    this._originalStroke = value;\n    if (this._isFillStyle(value)) {\n      this._originalStroke = this._createProxy({ ...GraphicsContext.defaultStrokeStyle, ...value }, () => {\n        this._stroke = toStrokeStyle(\n          { ...this._originalStroke },\n          GraphicsContext.defaultStrokeStyle\n        );\n      });\n    }\n    this._stroke = toStrokeStyle(value, GraphicsContext.defaultStrokeStyle);\n    this.update();\n  }\n  _generateKey() {\n    this._styleKey = generateTextStyleKey(this);\n    return this._styleKey;\n  }\n  update() {\n    this._styleKey = null;\n    this.emit(\"update\", this);\n  }\n  /** Resets all properties to the default values */\n  reset() {\n    const defaultStyle = _TextStyle.defaultTextStyle;\n    for (const key in defaultStyle) {\n      this[key] = defaultStyle[key];\n    }\n  }\n  get styleKey() {\n    return this._styleKey || this._generateKey();\n  }\n  /**\n   * Creates a new TextStyle object with the same values as this one.\n   * @returns New cloned TextStyle object\n   */\n  clone() {\n    return new _TextStyle({\n      align: this.align,\n      breakWords: this.breakWords,\n      dropShadow: this._dropShadow ? { ...this._dropShadow } : null,\n      fill: this._fill,\n      fontFamily: this.fontFamily,\n      fontSize: this.fontSize,\n      fontStyle: this.fontStyle,\n      fontVariant: this.fontVariant,\n      fontWeight: this.fontWeight,\n      leading: this.leading,\n      letterSpacing: this.letterSpacing,\n      lineHeight: this.lineHeight,\n      padding: this.padding,\n      stroke: this._stroke,\n      textBaseline: this.textBaseline,\n      whiteSpace: this.whiteSpace,\n      wordWrap: this.wordWrap,\n      wordWrapWidth: this.wordWrapWidth\n    });\n  }\n  /**\n   * Destroys this text style.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.texture=false] - Should it destroy the texture of the this style\n   * @param {boolean} [options.textureSource=false] - Should it destroy the textureSource of the this style\n   */\n  destroy(options = false) {\n    this.removeAllListeners();\n    const destroyTexture = typeof options === \"boolean\" ? options : options?.texture;\n    if (destroyTexture) {\n      const destroyTextureSource = typeof options === \"boolean\" ? options : options?.textureSource;\n      if (this._fill?.texture) {\n        this._fill.texture.destroy(destroyTextureSource);\n      }\n      if (this._originalFill?.texture) {\n        this._originalFill.texture.destroy(destroyTextureSource);\n      }\n      if (this._stroke?.texture) {\n        this._stroke.texture.destroy(destroyTextureSource);\n      }\n      if (this._originalStroke?.texture) {\n        this._originalStroke.texture.destroy(destroyTextureSource);\n      }\n    }\n    this._fill = null;\n    this._stroke = null;\n    this.dropShadow = null;\n    this._originalStroke = null;\n    this._originalFill = null;\n  }\n  _createProxy(value, cb) {\n    return new Proxy(value, {\n      set: (target, property, newValue) => {\n        target[property] = newValue;\n        cb?.(property, newValue);\n        this.update();\n        return true;\n      }\n    });\n  }\n  _isFillStyle(value) {\n    return (value ?? null) !== null && !(Color.isColorLike(value) || value instanceof FillGradient || value instanceof FillPattern);\n  }\n};\n/** The default drop shadow settings */\n_TextStyle.defaultDropShadow = {\n  /** Set alpha for the drop shadow */\n  alpha: 1,\n  /** Set a angle of the drop shadow */\n  angle: Math.PI / 6,\n  /** Set a shadow blur radius */\n  blur: 0,\n  /** A fill style to be used on the  e.g., 'red', '#00FF00' */\n  color: \"black\",\n  /** Set a distance of the drop shadow */\n  distance: 5\n};\n/** The default text style settings */\n_TextStyle.defaultTextStyle = {\n  /**\n   * See {@link TextStyle.align}\n   * @type {'left'|'center'|'right'|'justify'}\n   */\n  align: \"left\",\n  /** See {@link TextStyle.breakWords} */\n  breakWords: false,\n  /** See {@link TextStyle.dropShadow} */\n  dropShadow: null,\n  /**\n   * See {@link TextStyle.fill}\n   * @type {string|string[]|number|number[]|CanvasGradient|CanvasPattern}\n   */\n  fill: \"black\",\n  /**\n   * See {@link TextStyle.fontFamily}\n   * @type {string|string[]}\n   */\n  fontFamily: \"Arial\",\n  /**\n   * See {@link TextStyle.fontSize}\n   * @type {number|string}\n   */\n  fontSize: 26,\n  /**\n   * See {@link TextStyle.fontStyle}\n   * @type {'normal'|'italic'|'oblique'}\n   */\n  fontStyle: \"normal\",\n  /**\n   * See {@link TextStyle.fontVariant}\n   * @type {'normal'|'small-caps'}\n   */\n  fontVariant: \"normal\",\n  /**\n   * See {@link TextStyle.fontWeight}\n   * @type {'normal'|'bold'|'bolder'|'lighter'|'100'|'200'|'300'|'400'|'500'|'600'|'700'|'800'|'900'}\n   */\n  fontWeight: \"normal\",\n  /** See {@link TextStyle.leading} */\n  leading: 0,\n  /** See {@link TextStyle.letterSpacing} */\n  letterSpacing: 0,\n  /** See {@link TextStyle.lineHeight} */\n  lineHeight: 0,\n  /** See {@link TextStyle.padding} */\n  padding: 0,\n  /**\n   * See {@link TextStyle.stroke}\n   * @type {string|number}\n   */\n  stroke: null,\n  /**\n   * See {@link TextStyle.textBaseline}\n   * @type {'alphabetic'|'top'|'hanging'|'middle'|'ideographic'|'bottom'}\n   */\n  textBaseline: \"alphabetic\",\n  /** See {@link TextStyle.trim} */\n  trim: false,\n  /**\n   * See {@link TextStyle.whiteSpace}\n   * @type {'normal'|'pre'|'pre-line'}\n   */\n  whiteSpace: \"pre\",\n  /** See {@link TextStyle.wordWrap} */\n  wordWrap: false,\n  /** See {@link TextStyle.wordWrapWidth} */\n  wordWrapWidth: 100\n};\nlet TextStyle = _TextStyle;\nfunction convertV7Tov8Style(style) {\n  const oldStyle = style;\n  if (typeof oldStyle.dropShadow === \"boolean\" && oldStyle.dropShadow) {\n    const defaults = TextStyle.defaultDropShadow;\n    style.dropShadow = {\n      alpha: oldStyle.dropShadowAlpha ?? defaults.alpha,\n      angle: oldStyle.dropShadowAngle ?? defaults.angle,\n      blur: oldStyle.dropShadowBlur ?? defaults.blur,\n      color: oldStyle.dropShadowColor ?? defaults.color,\n      distance: oldStyle.dropShadowDistance ?? defaults.distance\n    };\n  }\n  if (oldStyle.strokeThickness !== void 0) {\n    deprecation(v8_0_0, \"strokeThickness is now a part of stroke\");\n    const color = oldStyle.stroke;\n    let obj = {};\n    if (Color.isColorLike(color)) {\n      obj.color = color;\n    } else if (color instanceof FillGradient || color instanceof FillPattern) {\n      obj.fill = color;\n    } else if (Object.hasOwnProperty.call(color, \"color\") || Object.hasOwnProperty.call(color, \"fill\")) {\n      obj = color;\n    } else {\n      throw new Error(\"Invalid stroke value.\");\n    }\n    style.stroke = {\n      ...obj,\n      width: oldStyle.strokeThickness\n    };\n  }\n  if (Array.isArray(oldStyle.fillGradientStops)) {\n    deprecation(v8_0_0, \"gradient fill is now a fill pattern: `new FillGradient(...)`\");\n    let fontSize;\n    if (style.fontSize == null) {\n      style.fontSize = TextStyle.defaultTextStyle.fontSize;\n    } else if (typeof style.fontSize === \"string\") {\n      fontSize = parseInt(style.fontSize, 10);\n    } else {\n      fontSize = style.fontSize;\n    }\n    const gradientFill = new FillGradient(0, 0, 0, fontSize * 1.7);\n    const fills = oldStyle.fillGradientStops.map((color) => Color.shared.setValue(color).toNumber());\n    fills.forEach((number, index) => {\n      const ratio = index / (fills.length - 1);\n      gradientFill.addColorStop(ratio, number);\n    });\n    style.fill = {\n      fill: gradientFill\n    };\n  }\n}\n\nexport { TextStyle };\n//# sourceMappingURL=TextStyle.mjs.map\n","\"use strict\";\nconst genericFontFamilies = [\n  \"serif\",\n  \"sans-serif\",\n  \"monospace\",\n  \"cursive\",\n  \"fantasy\",\n  \"system-ui\"\n];\nfunction fontStringFromTextStyle(style) {\n  const fontSizeString = typeof style.fontSize === \"number\" ? `${style.fontSize}px` : style.fontSize;\n  let fontFamilies = style.fontFamily;\n  if (!Array.isArray(style.fontFamily)) {\n    fontFamilies = style.fontFamily.split(\",\");\n  }\n  for (let i = fontFamilies.length - 1; i >= 0; i--) {\n    let fontFamily = fontFamilies[i].trim();\n    if (!/([\\\"\\'])[^\\'\\\"]+\\1/.test(fontFamily) && !genericFontFamilies.includes(fontFamily)) {\n      fontFamily = `\"${fontFamily}\"`;\n    }\n    fontFamilies[i] = fontFamily;\n  }\n  return `${style.fontStyle} ${style.fontVariant} ${style.fontWeight} ${fontSizeString} ${fontFamilies.join(\",\")}`;\n}\n\nexport { fontStringFromTextStyle };\n//# sourceMappingURL=fontStringFromTextStyle.mjs.map\n","import { DOMAdapter } from '../../../environment/adapter.mjs';\nimport { fontStringFromTextStyle } from './utils/fontStringFromTextStyle.mjs';\n\n\"use strict\";\nconst contextSettings = {\n  // TextMetrics requires getImageData readback for measuring fonts.\n  willReadFrequently: true\n};\nconst _CanvasTextMetrics = class _CanvasTextMetrics {\n  /**\n   * Checking that we can use modern canvas 2D API.\n   *\n   * Note: This is an unstable API, Chrome < 94 use `textLetterSpacing`, later versions use `letterSpacing`.\n   * @see TextMetrics.experimentalLetterSpacing\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/ICanvasRenderingContext2D/letterSpacing\n   * @see https://developer.chrome.com/origintrials/#/view_trial/3585991203293757441\n   */\n  static get experimentalLetterSpacingSupported() {\n    let result = _CanvasTextMetrics._experimentalLetterSpacingSupported;\n    if (result !== void 0) {\n      const proto = DOMAdapter.get().getCanvasRenderingContext2D().prototype;\n      result = _CanvasTextMetrics._experimentalLetterSpacingSupported = \"letterSpacing\" in proto || \"textLetterSpacing\" in proto;\n    }\n    return result;\n  }\n  /**\n   * @param text - the text that was measured\n   * @param style - the style that was measured\n   * @param width - the measured width of the text\n   * @param height - the measured height of the text\n   * @param lines - an array of the lines of text broken by new lines and wrapping if specified in style\n   * @param lineWidths - an array of the line widths for each line matched to `lines`\n   * @param lineHeight - the measured line height for this style\n   * @param maxLineWidth - the maximum line width for all measured lines\n   * @param {FontMetrics} fontProperties - the font properties object from TextMetrics.measureFont\n   */\n  constructor(text, style, width, height, lines, lineWidths, lineHeight, maxLineWidth, fontProperties) {\n    this.text = text;\n    this.style = style;\n    this.width = width;\n    this.height = height;\n    this.lines = lines;\n    this.lineWidths = lineWidths;\n    this.lineHeight = lineHeight;\n    this.maxLineWidth = maxLineWidth;\n    this.fontProperties = fontProperties;\n  }\n  /**\n   * Measures the supplied string of text and returns a Rectangle.\n   * @param text - The text to measure.\n   * @param style - The text style to use for measuring\n   * @param canvas - optional specification of the canvas to use for measuring.\n   * @param wordWrap\n   * @returns Measured width and height of the text.\n   */\n  static measureText(text = \" \", style, canvas = _CanvasTextMetrics._canvas, wordWrap = style.wordWrap) {\n    const textKey = `${text}:${style.styleKey}`;\n    if (_CanvasTextMetrics._measurementCache[textKey])\n      return _CanvasTextMetrics._measurementCache[textKey];\n    const font = fontStringFromTextStyle(style);\n    const fontProperties = _CanvasTextMetrics.measureFont(font);\n    if (fontProperties.fontSize === 0) {\n      fontProperties.fontSize = style.fontSize;\n      fontProperties.ascent = style.fontSize;\n    }\n    const context = _CanvasTextMetrics.__context;\n    context.font = font;\n    const outputText = wordWrap ? _CanvasTextMetrics._wordWrap(text, style, canvas) : text;\n    const lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n    const lineWidths = new Array(lines.length);\n    let maxLineWidth = 0;\n    for (let i = 0; i < lines.length; i++) {\n      const lineWidth = _CanvasTextMetrics._measureText(lines[i], style.letterSpacing, context);\n      lineWidths[i] = lineWidth;\n      maxLineWidth = Math.max(maxLineWidth, lineWidth);\n    }\n    const strokeWidth = style._stroke?.width || 0;\n    let width = maxLineWidth + strokeWidth;\n    if (style.dropShadow) {\n      width += style.dropShadow.distance;\n    }\n    const lineHeight = style.lineHeight || fontProperties.fontSize;\n    let height = Math.max(lineHeight, fontProperties.fontSize + strokeWidth) + (lines.length - 1) * (lineHeight + style.leading);\n    if (style.dropShadow) {\n      height += style.dropShadow.distance;\n    }\n    const measurements = new _CanvasTextMetrics(\n      text,\n      style,\n      width,\n      height,\n      lines,\n      lineWidths,\n      lineHeight + style.leading,\n      maxLineWidth,\n      fontProperties\n    );\n    return measurements;\n  }\n  static _measureText(text, letterSpacing, context) {\n    let useExperimentalLetterSpacing = false;\n    if (_CanvasTextMetrics.experimentalLetterSpacingSupported) {\n      if (_CanvasTextMetrics.experimentalLetterSpacing) {\n        context.letterSpacing = `${letterSpacing}px`;\n        context.textLetterSpacing = `${letterSpacing}px`;\n        useExperimentalLetterSpacing = true;\n      } else {\n        context.letterSpacing = \"0px\";\n        context.textLetterSpacing = \"0px\";\n      }\n    }\n    let width = context.measureText(text).width;\n    if (width > 0) {\n      if (useExperimentalLetterSpacing) {\n        width -= letterSpacing;\n      } else {\n        width += (_CanvasTextMetrics.graphemeSegmenter(text).length - 1) * letterSpacing;\n      }\n    }\n    return width;\n  }\n  /**\n   * Applies newlines to a string to have it optimally fit into the horizontal\n   * bounds set by the Text object's wordWrapWidth property.\n   * @param text - String to apply word wrapping to\n   * @param style - the style to use when wrapping\n   * @param canvas - optional specification of the canvas to use for measuring.\n   * @returns New string with new lines applied where required\n   */\n  static _wordWrap(text, style, canvas = _CanvasTextMetrics._canvas) {\n    const context = canvas.getContext(\"2d\", contextSettings);\n    let width = 0;\n    let line = \"\";\n    let lines = \"\";\n    const cache = /* @__PURE__ */ Object.create(null);\n    const { letterSpacing, whiteSpace } = style;\n    const collapseSpaces = _CanvasTextMetrics._collapseSpaces(whiteSpace);\n    const collapseNewlines = _CanvasTextMetrics._collapseNewlines(whiteSpace);\n    let canPrependSpaces = !collapseSpaces;\n    const wordWrapWidth = style.wordWrapWidth + letterSpacing;\n    const tokens = _CanvasTextMetrics._tokenize(text);\n    for (let i = 0; i < tokens.length; i++) {\n      let token = tokens[i];\n      if (_CanvasTextMetrics._isNewline(token)) {\n        if (!collapseNewlines) {\n          lines += _CanvasTextMetrics._addLine(line);\n          canPrependSpaces = !collapseSpaces;\n          line = \"\";\n          width = 0;\n          continue;\n        }\n        token = \" \";\n      }\n      if (collapseSpaces) {\n        const currIsBreakingSpace = _CanvasTextMetrics.isBreakingSpace(token);\n        const lastIsBreakingSpace = _CanvasTextMetrics.isBreakingSpace(line[line.length - 1]);\n        if (currIsBreakingSpace && lastIsBreakingSpace) {\n          continue;\n        }\n      }\n      const tokenWidth = _CanvasTextMetrics._getFromCache(token, letterSpacing, cache, context);\n      if (tokenWidth > wordWrapWidth) {\n        if (line !== \"\") {\n          lines += _CanvasTextMetrics._addLine(line);\n          line = \"\";\n          width = 0;\n        }\n        if (_CanvasTextMetrics.canBreakWords(token, style.breakWords)) {\n          const characters = _CanvasTextMetrics.wordWrapSplit(token);\n          for (let j = 0; j < characters.length; j++) {\n            let char = characters[j];\n            let lastChar = char;\n            let k = 1;\n            while (characters[j + k]) {\n              const nextChar = characters[j + k];\n              if (!_CanvasTextMetrics.canBreakChars(lastChar, nextChar, token, j, style.breakWords)) {\n                char += nextChar;\n              } else {\n                break;\n              }\n              lastChar = nextChar;\n              k++;\n            }\n            j += k - 1;\n            const characterWidth = _CanvasTextMetrics._getFromCache(char, letterSpacing, cache, context);\n            if (characterWidth + width > wordWrapWidth) {\n              lines += _CanvasTextMetrics._addLine(line);\n              canPrependSpaces = false;\n              line = \"\";\n              width = 0;\n            }\n            line += char;\n            width += characterWidth;\n          }\n        } else {\n          if (line.length > 0) {\n            lines += _CanvasTextMetrics._addLine(line);\n            line = \"\";\n            width = 0;\n          }\n          const isLastToken = i === tokens.length - 1;\n          lines += _CanvasTextMetrics._addLine(token, !isLastToken);\n          canPrependSpaces = false;\n          line = \"\";\n          width = 0;\n        }\n      } else {\n        if (tokenWidth + width > wordWrapWidth) {\n          canPrependSpaces = false;\n          lines += _CanvasTextMetrics._addLine(line);\n          line = \"\";\n          width = 0;\n        }\n        if (line.length > 0 || !_CanvasTextMetrics.isBreakingSpace(token) || canPrependSpaces) {\n          line += token;\n          width += tokenWidth;\n        }\n      }\n    }\n    lines += _CanvasTextMetrics._addLine(line, false);\n    return lines;\n  }\n  /**\n   * Convienience function for logging each line added during the wordWrap method.\n   * @param line    - The line of text to add\n   * @param newLine - Add new line character to end\n   * @returns A formatted line\n   */\n  static _addLine(line, newLine = true) {\n    line = _CanvasTextMetrics._trimRight(line);\n    line = newLine ? `${line}\n` : line;\n    return line;\n  }\n  /**\n   * Gets & sets the widths of calculated characters in a cache object\n   * @param key            - The key\n   * @param letterSpacing  - The letter spacing\n   * @param cache          - The cache\n   * @param context        - The canvas context\n   * @returns The from cache.\n   */\n  static _getFromCache(key, letterSpacing, cache, context) {\n    let width = cache[key];\n    if (typeof width !== \"number\") {\n      width = _CanvasTextMetrics._measureText(key, letterSpacing, context) + letterSpacing;\n      cache[key] = width;\n    }\n    return width;\n  }\n  /**\n   * Determines whether we should collapse breaking spaces.\n   * @param whiteSpace - The TextStyle property whiteSpace\n   * @returns Should collapse\n   */\n  static _collapseSpaces(whiteSpace) {\n    return whiteSpace === \"normal\" || whiteSpace === \"pre-line\";\n  }\n  /**\n   * Determines whether we should collapse newLine chars.\n   * @param whiteSpace - The white space\n   * @returns should collapse\n   */\n  static _collapseNewlines(whiteSpace) {\n    return whiteSpace === \"normal\";\n  }\n  /**\n   * Trims breaking whitespaces from string.\n   * @param text - The text\n   * @returns Trimmed string\n   */\n  static _trimRight(text) {\n    if (typeof text !== \"string\") {\n      return \"\";\n    }\n    for (let i = text.length - 1; i >= 0; i--) {\n      const char = text[i];\n      if (!_CanvasTextMetrics.isBreakingSpace(char)) {\n        break;\n      }\n      text = text.slice(0, -1);\n    }\n    return text;\n  }\n  /**\n   * Determines if char is a newline.\n   * @param char - The character\n   * @returns True if newline, False otherwise.\n   */\n  static _isNewline(char) {\n    if (typeof char !== \"string\") {\n      return false;\n    }\n    return _CanvasTextMetrics._newlines.includes(char.charCodeAt(0));\n  }\n  /**\n   * Determines if char is a breaking whitespace.\n   *\n   * It allows one to determine whether char should be a breaking whitespace\n   * For example certain characters in CJK langs or numbers.\n   * It must return a boolean.\n   * @param char - The character\n   * @param [_nextChar] - The next character\n   * @returns True if whitespace, False otherwise.\n   */\n  static isBreakingSpace(char, _nextChar) {\n    if (typeof char !== \"string\") {\n      return false;\n    }\n    return _CanvasTextMetrics._breakingSpaces.includes(char.charCodeAt(0));\n  }\n  /**\n   * Splits a string into words, breaking-spaces and newLine characters\n   * @param text - The text\n   * @returns A tokenized array\n   */\n  static _tokenize(text) {\n    const tokens = [];\n    let token = \"\";\n    if (typeof text !== \"string\") {\n      return tokens;\n    }\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const nextChar = text[i + 1];\n      if (_CanvasTextMetrics.isBreakingSpace(char, nextChar) || _CanvasTextMetrics._isNewline(char)) {\n        if (token !== \"\") {\n          tokens.push(token);\n          token = \"\";\n        }\n        tokens.push(char);\n        continue;\n      }\n      token += char;\n    }\n    if (token !== \"\") {\n      tokens.push(token);\n    }\n    return tokens;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It allows one to customise which words should break\n   * Examples are if the token is CJK or numbers.\n   * It must return a boolean.\n   * @param _token - The token\n   * @param breakWords - The style attr break words\n   * @returns Whether to break word or not\n   */\n  static canBreakWords(_token, breakWords) {\n    return breakWords;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It allows one to determine whether a pair of characters\n   * should be broken by newlines\n   * For example certain characters in CJK langs or numbers.\n   * It must return a boolean.\n   * @param _char - The character\n   * @param _nextChar - The next character\n   * @param _token - The token/word the characters are from\n   * @param _index - The index in the token of the char\n   * @param _breakWords - The style attr break words\n   * @returns whether to break word or not\n   */\n  static canBreakChars(_char, _nextChar, _token, _index, _breakWords) {\n    return true;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It is called when a token (usually a word) has to be split into separate pieces\n   * in order to determine the point to break a word.\n   * It must return an array of characters.\n   * @param token - The token to split\n   * @returns The characters of the token\n   * @see CanvasTextMetrics.graphemeSegmenter\n   */\n  static wordWrapSplit(token) {\n    return _CanvasTextMetrics.graphemeSegmenter(token);\n  }\n  /**\n   * Calculates the ascent, descent and fontSize of a given font-style\n   * @param font - String representing the style of the font\n   * @returns Font properties object\n   */\n  static measureFont(font) {\n    if (_CanvasTextMetrics._fonts[font]) {\n      return _CanvasTextMetrics._fonts[font];\n    }\n    const context = _CanvasTextMetrics._context;\n    context.font = font;\n    const metrics = context.measureText(_CanvasTextMetrics.METRICS_STRING + _CanvasTextMetrics.BASELINE_SYMBOL);\n    const properties = {\n      ascent: metrics.actualBoundingBoxAscent,\n      descent: metrics.actualBoundingBoxDescent,\n      fontSize: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n    };\n    _CanvasTextMetrics._fonts[font] = properties;\n    return properties;\n  }\n  /**\n   * Clear font metrics in metrics cache.\n   * @param {string} [font] - font name. If font name not set then clear cache for all fonts.\n   */\n  static clearMetrics(font = \"\") {\n    if (font) {\n      delete _CanvasTextMetrics._fonts[font];\n    } else {\n      _CanvasTextMetrics._fonts = {};\n    }\n  }\n  /**\n   * Cached canvas element for measuring text\n   * TODO: this should be private, but isn't because of backward compat, will fix later.\n   * @ignore\n   */\n  static get _canvas() {\n    if (!_CanvasTextMetrics.__canvas) {\n      let canvas;\n      try {\n        const c = new OffscreenCanvas(0, 0);\n        const context = c.getContext(\"2d\", contextSettings);\n        if (context?.measureText) {\n          _CanvasTextMetrics.__canvas = c;\n          return c;\n        }\n        canvas = DOMAdapter.get().createCanvas();\n      } catch (ex) {\n        canvas = DOMAdapter.get().createCanvas();\n      }\n      canvas.width = canvas.height = 10;\n      _CanvasTextMetrics.__canvas = canvas;\n    }\n    return _CanvasTextMetrics.__canvas;\n  }\n  /**\n   * TODO: this should be private, but isn't because of backward compat, will fix later.\n   * @ignore\n   */\n  static get _context() {\n    if (!_CanvasTextMetrics.__context) {\n      _CanvasTextMetrics.__context = _CanvasTextMetrics._canvas.getContext(\"2d\", contextSettings);\n    }\n    return _CanvasTextMetrics.__context;\n  }\n};\n/**\n * String used for calculate font metrics.\n * These characters are all tall to help calculate the height required for text.\n */\n_CanvasTextMetrics.METRICS_STRING = \"|\\xC9q\\xC5\";\n/** Baseline symbol for calculate font metrics. */\n_CanvasTextMetrics.BASELINE_SYMBOL = \"M\";\n/** Baseline multiplier for calculate font metrics. */\n_CanvasTextMetrics.BASELINE_MULTIPLIER = 1.4;\n/** Height multiplier for setting height of canvas to calculate font metrics. */\n_CanvasTextMetrics.HEIGHT_MULTIPLIER = 2;\n/**\n * A Unicode \"character\", or \"grapheme cluster\", can be composed of multiple Unicode code points,\n * such as letters with diacritical marks (e.g. `'\\u0065\\u0301'`, letter e with acute)\n * or emojis with modifiers (e.g. `'\\uD83E\\uDDD1\\u200D\\uD83D\\uDCBB'`, technologist).\n * The new `Intl.Segmenter` API in ES2022 can split the string into grapheme clusters correctly. If it is not available,\n * PixiJS will fallback to use the iterator of String, which can only spilt the string into code points.\n * If you want to get full functionality in environments that don't support `Intl.Segmenter` (such as Firefox),\n * you can use other libraries such as [grapheme-splitter]{@link https://www.npmjs.com/package/grapheme-splitter}\n * or [graphemer]{@link https://www.npmjs.com/package/graphemer} to create a polyfill. Since these libraries can be\n * relatively large in size to handle various Unicode grapheme clusters properly, PixiJS won't use them directly.\n */\n_CanvasTextMetrics.graphemeSegmenter = (() => {\n  if (typeof Intl?.Segmenter === \"function\") {\n    const segmenter = new Intl.Segmenter();\n    return (s) => [...segmenter.segment(s)].map((x) => x.segment);\n  }\n  return (s) => [...s];\n})();\n/**\n * New rendering behavior for letter-spacing which uses Chrome's new native API. This will\n * lead to more accurate letter-spacing results because it does not try to manually draw\n * each character. However, this Chrome API is experimental and may not serve all cases yet.\n * @see TextMetrics.experimentalLetterSpacingSupported\n */\n_CanvasTextMetrics.experimentalLetterSpacing = false;\n/** Cache of {@see TextMetrics.FontMetrics} objects. */\n_CanvasTextMetrics._fonts = {};\n/** Cache of new line chars. */\n_CanvasTextMetrics._newlines = [\n  10,\n  // line feed\n  13\n  // carriage return\n];\n/** Cache of breaking spaces. */\n_CanvasTextMetrics._breakingSpaces = [\n  9,\n  // character tabulation\n  32,\n  // space\n  8192,\n  // en quad\n  8193,\n  // em quad\n  8194,\n  // en space\n  8195,\n  // em space\n  8196,\n  // three-per-em space\n  8197,\n  // four-per-em space\n  8198,\n  // six-per-em space\n  8200,\n  // punctuation space\n  8201,\n  // thin space\n  8202,\n  // hair space\n  8287,\n  // medium mathematical space\n  12288\n  // ideographic space\n];\n_CanvasTextMetrics._measurementCache = {};\nlet CanvasTextMetrics = _CanvasTextMetrics;\n\nexport { CanvasTextMetrics };\n//# sourceMappingURL=CanvasTextMetrics.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { FillGradient } from '../../../graphics/shared/fill/FillGradient.mjs';\nimport { FillPattern } from '../../../graphics/shared/fill/FillPattern.mjs';\n\n\"use strict\";\nfunction getCanvasFillStyle(fillStyle, context) {\n  if (fillStyle.texture === Texture.WHITE && !fillStyle.fill) {\n    return Color.shared.setValue(fillStyle.color).toHex();\n  } else if (!fillStyle.fill) {\n    const pattern = context.createPattern(fillStyle.texture.source.resource, \"repeat\");\n    const tempMatrix = fillStyle.matrix.copyTo(Matrix.shared);\n    tempMatrix.scale(fillStyle.texture.frame.width, fillStyle.texture.frame.height);\n    pattern.setTransform(tempMatrix);\n    return pattern;\n  } else if (fillStyle.fill instanceof FillPattern) {\n    const fillPattern = fillStyle.fill;\n    const pattern = context.createPattern(fillPattern.texture.source.resource, \"repeat\");\n    const tempMatrix = fillPattern.transform.copyTo(Matrix.shared);\n    tempMatrix.scale(\n      fillPattern.texture.frame.width,\n      fillPattern.texture.frame.height\n    );\n    pattern.setTransform(tempMatrix);\n    return pattern;\n  } else if (fillStyle.fill instanceof FillGradient) {\n    const fillGradient = fillStyle.fill;\n    if (fillGradient.type === \"linear\") {\n      const gradient = context.createLinearGradient(\n        fillGradient.x0,\n        fillGradient.y0,\n        fillGradient.x1,\n        fillGradient.y1\n      );\n      fillGradient.gradientStops.forEach((stop) => {\n        gradient.addColorStop(stop.offset, Color.shared.setValue(stop.color).toHex());\n      });\n      return gradient;\n    }\n  }\n  warn(\"FillStyle not recognised\", fillStyle);\n  return \"red\";\n}\n\nexport { getCanvasFillStyle };\n//# sourceMappingURL=getCanvasFillStyle.mjs.map\n","\"use strict\";\nfunction resolveCharacters(chars) {\n  if (chars === \"\") {\n    return [];\n  }\n  if (typeof chars === \"string\") {\n    chars = [chars];\n  }\n  const result = [];\n  for (let i = 0, j = chars.length; i < j; i++) {\n    const item = chars[i];\n    if (Array.isArray(item)) {\n      if (item.length !== 2) {\n        throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${item.length}.`);\n      }\n      if (item[0].length === 0 || item[1].length === 0) {\n        throw new Error(\"[BitmapFont]: Invalid character delimiter.\");\n      }\n      const startCode = item[0].charCodeAt(0);\n      const endCode = item[1].charCodeAt(0);\n      if (endCode < startCode) {\n        throw new Error(\"[BitmapFont]: Invalid character range.\");\n      }\n      for (let i2 = startCode, j2 = endCode; i2 <= j2; i2++) {\n        result.push(String.fromCharCode(i2));\n      }\n    } else {\n      result.push(...Array.from(item));\n    }\n  }\n  if (result.length === 0) {\n    throw new Error(\"[BitmapFont]: Empty set when resolving characters.\");\n  }\n  return result;\n}\n\nexport { resolveCharacters };\n//# sourceMappingURL=resolveCharacters.mjs.map\n","import { Color } from '../../color/Color.mjs';\nimport { Rectangle } from '../../maths/shapes/Rectangle.mjs';\nimport { CanvasPool } from '../../rendering/renderers/shared/texture/CanvasPool.mjs';\nimport { ImageSource } from '../../rendering/renderers/shared/texture/sources/ImageSource.mjs';\nimport { Texture } from '../../rendering/renderers/shared/texture/Texture.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { CanvasTextMetrics } from '../text/canvas/CanvasTextMetrics.mjs';\nimport { fontStringFromTextStyle } from '../text/canvas/utils/fontStringFromTextStyle.mjs';\nimport { getCanvasFillStyle } from '../text/canvas/utils/getCanvasFillStyle.mjs';\nimport { TextStyle } from '../text/TextStyle.mjs';\nimport { AbstractBitmapFont } from './AbstractBitmapFont.mjs';\nimport { resolveCharacters } from './utils/resolveCharacters.mjs';\n\n\"use strict\";\nconst _DynamicBitmapFont = class _DynamicBitmapFont extends AbstractBitmapFont {\n  /**\n   * @param options - The options for the dynamic bitmap font.\n   */\n  constructor(options) {\n    super();\n    /**\n     * this is a resolution modifier for the font size..\n     * texture resolution will also be used to scale texture according to its font size also\n     */\n    this.resolution = 1;\n    /** The pages of the font. */\n    this.pages = [];\n    this._padding = 0;\n    this._measureCache = /* @__PURE__ */ Object.create(null);\n    this._currentChars = [];\n    this._currentX = 0;\n    this._currentY = 0;\n    this._currentPageIndex = -1;\n    this._skipKerning = false;\n    const dynamicOptions = { ..._DynamicBitmapFont.defaultOptions, ...options };\n    this._textureSize = dynamicOptions.textureSize;\n    this._mipmap = dynamicOptions.mipmap;\n    const style = dynamicOptions.style.clone();\n    if (dynamicOptions.overrideFill) {\n      style._fill.color = 16777215;\n      style._fill.alpha = 1;\n      style._fill.texture = Texture.WHITE;\n      style._fill.fill = null;\n    }\n    this.applyFillAsTint = dynamicOptions.overrideFill;\n    const requestedFontSize = style.fontSize;\n    style.fontSize = this.baseMeasurementFontSize;\n    const font = fontStringFromTextStyle(style);\n    if (dynamicOptions.overrideSize) {\n      if (style._stroke) {\n        style._stroke.width *= this.baseRenderedFontSize / requestedFontSize;\n      }\n    } else {\n      style.fontSize = this.baseRenderedFontSize = requestedFontSize;\n    }\n    this._style = style;\n    this._skipKerning = dynamicOptions.skipKerning ?? false;\n    this.resolution = dynamicOptions.resolution ?? 1;\n    this._padding = dynamicOptions.padding ?? 4;\n    this.fontMetrics = CanvasTextMetrics.measureFont(font);\n    this.lineHeight = style.lineHeight || this.fontMetrics.fontSize || style.fontSize;\n  }\n  ensureCharacters(chars) {\n    const charList = resolveCharacters(chars).filter((char) => !this._currentChars.includes(char)).filter((char, index, self) => self.indexOf(char) === index);\n    if (!charList.length)\n      return;\n    this._currentChars = [...this._currentChars, ...charList];\n    let pageData;\n    if (this._currentPageIndex === -1) {\n      pageData = this._nextPage();\n    } else {\n      pageData = this.pages[this._currentPageIndex];\n    }\n    let { canvas, context } = pageData.canvasAndContext;\n    let textureSource = pageData.texture.source;\n    const style = this._style;\n    let currentX = this._currentX;\n    let currentY = this._currentY;\n    const fontScale = this.baseRenderedFontSize / this.baseMeasurementFontSize;\n    const padding = this._padding * fontScale;\n    const widthScale = style.fontStyle === \"italic\" ? 2 : 1;\n    let maxCharHeight = 0;\n    let skipTexture = false;\n    for (let i = 0; i < charList.length; i++) {\n      const char = charList[i];\n      const metrics = CanvasTextMetrics.measureText(char, style, canvas, false);\n      metrics.lineHeight = metrics.height;\n      const width = widthScale * metrics.width * fontScale;\n      const height = metrics.height * fontScale;\n      const paddedWidth = width + padding * 2;\n      const paddedHeight = height + padding * 2;\n      skipTexture = false;\n      if (char !== \"\\n\" && char !== \"\\r\" && char !== \"\t\" && char !== \" \") {\n        skipTexture = true;\n        maxCharHeight = Math.ceil(Math.max(paddedHeight, maxCharHeight));\n      }\n      if (currentX + paddedWidth > this._textureSize) {\n        currentY += maxCharHeight;\n        maxCharHeight = paddedHeight;\n        currentX = 0;\n        if (currentY + maxCharHeight > this._textureSize) {\n          textureSource.update();\n          const pageData2 = this._nextPage();\n          canvas = pageData2.canvasAndContext.canvas;\n          context = pageData2.canvasAndContext.context;\n          textureSource = pageData2.texture.source;\n          currentY = 0;\n        }\n      }\n      const xAdvance = width / fontScale - (style.dropShadow?.distance ?? 0) - (style._stroke?.width ?? 0);\n      this.chars[char] = {\n        id: char.codePointAt(0),\n        xOffset: -this._padding,\n        yOffset: -this._padding,\n        xAdvance,\n        kerning: {}\n      };\n      if (skipTexture) {\n        this._drawGlyph(\n          context,\n          metrics,\n          currentX + padding,\n          currentY + padding,\n          fontScale,\n          style\n        );\n        const px = textureSource.width * fontScale;\n        const py = textureSource.height * fontScale;\n        const frame = new Rectangle(\n          currentX / px * textureSource.width,\n          currentY / py * textureSource.height,\n          paddedWidth / px * textureSource.width,\n          paddedHeight / py * textureSource.height\n        );\n        this.chars[char].texture = new Texture({\n          source: textureSource,\n          frame\n        });\n        currentX += Math.ceil(paddedWidth);\n      }\n    }\n    textureSource.update();\n    this._currentX = currentX;\n    this._currentY = currentY;\n    this._skipKerning && this._applyKerning(charList, context);\n  }\n  /**\n   * @deprecated since 8.0.0\n   * The map of base page textures (i.e., sheets of glyphs).\n   */\n  get pageTextures() {\n    deprecation(v8_0_0, \"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead.\");\n    return this.pages;\n  }\n  _applyKerning(newChars, context) {\n    const measureCache = this._measureCache;\n    for (let i = 0; i < newChars.length; i++) {\n      const first = newChars[i];\n      for (let j = 0; j < this._currentChars.length; j++) {\n        const second = this._currentChars[j];\n        let c1 = measureCache[first];\n        if (!c1)\n          c1 = measureCache[first] = context.measureText(first).width;\n        let c2 = measureCache[second];\n        if (!c2)\n          c2 = measureCache[second] = context.measureText(second).width;\n        let total = context.measureText(first + second).width;\n        let amount = total - (c1 + c2);\n        if (amount) {\n          this.chars[first].kerning[second] = amount;\n        }\n        total = context.measureText(first + second).width;\n        amount = total - (c1 + c2);\n        if (amount) {\n          this.chars[second].kerning[first] = amount;\n        }\n      }\n    }\n  }\n  _nextPage() {\n    this._currentPageIndex++;\n    const textureResolution = this.resolution;\n    const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(\n      this._textureSize,\n      this._textureSize,\n      textureResolution\n    );\n    this._setupContext(canvasAndContext.context, this._style, textureResolution);\n    const resolution = textureResolution * (this.baseRenderedFontSize / this.baseMeasurementFontSize);\n    const texture = new Texture({\n      source: new ImageSource({\n        resource: canvasAndContext.canvas,\n        resolution,\n        alphaMode: \"premultiply-alpha-on-upload\",\n        autoGenerateMipmaps: this._mipmap\n      })\n    });\n    const pageData = {\n      canvasAndContext,\n      texture\n    };\n    this.pages[this._currentPageIndex] = pageData;\n    return pageData;\n  }\n  // canvas style!\n  _setupContext(context, style, resolution) {\n    style.fontSize = this.baseRenderedFontSize;\n    context.scale(resolution, resolution);\n    context.font = fontStringFromTextStyle(style);\n    style.fontSize = this.baseMeasurementFontSize;\n    context.textBaseline = style.textBaseline;\n    const stroke = style._stroke;\n    const strokeThickness = stroke?.width ?? 0;\n    if (stroke) {\n      context.lineWidth = strokeThickness;\n      context.lineJoin = stroke.join;\n      context.miterLimit = stroke.miterLimit;\n      context.strokeStyle = getCanvasFillStyle(stroke, context);\n    }\n    if (style._fill) {\n      context.fillStyle = getCanvasFillStyle(style._fill, context);\n    }\n    if (style.dropShadow) {\n      const shadowOptions = style.dropShadow;\n      const rgb = Color.shared.setValue(shadowOptions.color).toArray();\n      const dropShadowBlur = shadowOptions.blur * resolution;\n      const dropShadowDistance = shadowOptions.distance * resolution;\n      context.shadowColor = `rgba(${rgb[0] * 255},${rgb[1] * 255},${rgb[2] * 255},${shadowOptions.alpha})`;\n      context.shadowBlur = dropShadowBlur;\n      context.shadowOffsetX = Math.cos(shadowOptions.angle) * dropShadowDistance;\n      context.shadowOffsetY = Math.sin(shadowOptions.angle) * dropShadowDistance;\n    } else {\n      context.shadowColor = \"black\";\n      context.shadowBlur = 0;\n      context.shadowOffsetX = 0;\n      context.shadowOffsetY = 0;\n    }\n  }\n  _drawGlyph(context, metrics, x, y, fontScale, style) {\n    const char = metrics.text;\n    const fontProperties = metrics.fontProperties;\n    const stroke = style._stroke;\n    const strokeThickness = (stroke?.width ?? 0) * fontScale;\n    const tx = x + strokeThickness / 2;\n    const ty = y - strokeThickness / 2;\n    const descent = fontProperties.descent * fontScale;\n    const lineHeight = metrics.lineHeight * fontScale;\n    if (style.stroke && strokeThickness) {\n      context.strokeText(char, tx, ty + lineHeight - descent);\n    }\n    if (style._fill) {\n      context.fillText(char, tx, ty + lineHeight - descent);\n    }\n  }\n  destroy() {\n    super.destroy();\n    for (let i = 0; i < this.pages.length; i++) {\n      const { canvasAndContext, texture } = this.pages[i];\n      canvasAndContext.canvas.width = canvasAndContext.canvas.width;\n      CanvasPool.returnCanvasAndContext(canvasAndContext);\n      texture.destroy(true);\n    }\n    this.pages = null;\n  }\n};\n_DynamicBitmapFont.defaultOptions = {\n  textureSize: 512,\n  style: new TextStyle(),\n  mipmap: true\n};\nlet DynamicBitmapFont = _DynamicBitmapFont;\n\nexport { DynamicBitmapFont };\n//# sourceMappingURL=DynamicBitmapFont.mjs.map\n","\"use strict\";\nfunction getBitmapTextLayout(chars, style, font) {\n  const layoutData = {\n    width: 0,\n    height: 0,\n    offsetY: 0,\n    scale: style.fontSize / font.baseMeasurementFontSize,\n    lines: [{\n      width: 0,\n      charPositions: [],\n      spaceWidth: 0,\n      spacesIndex: [],\n      chars: []\n    }]\n  };\n  layoutData.offsetY = font.baseLineOffset;\n  let currentLine = layoutData.lines[0];\n  let previousChar = null;\n  let firstWord = true;\n  const currentWord = {\n    spaceWord: false,\n    width: 0,\n    start: 0,\n    index: 0,\n    // use index to not modify the array as we use it a lot!\n    positions: [],\n    chars: []\n  };\n  const nextWord = (word) => {\n    const start = currentLine.width;\n    for (let j = 0; j < currentWord.index; j++) {\n      const position = word.positions[j];\n      currentLine.chars.push(word.chars[j]);\n      currentLine.charPositions.push(position + start);\n    }\n    currentLine.width += word.width;\n    firstWord = false;\n    currentWord.width = 0;\n    currentWord.index = 0;\n    currentWord.chars.length = 0;\n  };\n  const nextLine = () => {\n    let index = currentLine.chars.length - 1;\n    let lastChar = currentLine.chars[index];\n    while (lastChar === \" \") {\n      currentLine.width -= font.chars[lastChar].xAdvance;\n      lastChar = currentLine.chars[--index];\n    }\n    layoutData.width = Math.max(layoutData.width, currentLine.width);\n    currentLine = {\n      width: 0,\n      charPositions: [],\n      chars: [],\n      spaceWidth: 0,\n      spacesIndex: []\n    };\n    firstWord = true;\n    layoutData.lines.push(currentLine);\n    layoutData.height += font.lineHeight;\n  };\n  const scale = font.baseMeasurementFontSize / style.fontSize;\n  const adjustedLetterSpacing = style.letterSpacing * scale;\n  const adjustedWordWrapWidth = style.wordWrapWidth * scale;\n  for (let i = 0; i < chars.length + 1; i++) {\n    let char;\n    const isEnd = i === chars.length;\n    if (!isEnd) {\n      char = chars[i];\n    }\n    const charData = font.chars[char] || font.chars[\" \"];\n    const isSpace = /(?:\\s)/.test(char);\n    const isWordBreak = isSpace || char === \"\\r\" || char === \"\\n\" || isEnd;\n    if (isWordBreak) {\n      const addWordToNextLine = !firstWord && style.wordWrap && currentLine.width + currentWord.width - adjustedLetterSpacing > adjustedWordWrapWidth;\n      if (addWordToNextLine) {\n        nextLine();\n        nextWord(currentWord);\n        if (!isEnd) {\n          currentLine.charPositions.push(0);\n        }\n      } else {\n        currentWord.start = currentLine.width;\n        nextWord(currentWord);\n        if (!isEnd) {\n          currentLine.charPositions.push(0);\n        }\n      }\n      if (char === \"\\r\" || char === \"\\n\") {\n        if (currentLine.width !== 0) {\n          nextLine();\n        }\n      } else if (!isEnd) {\n        const spaceWidth = charData.xAdvance + (charData.kerning[previousChar] || 0) + adjustedLetterSpacing;\n        currentLine.width += spaceWidth;\n        currentLine.spaceWidth = spaceWidth;\n        currentLine.spacesIndex.push(currentLine.charPositions.length);\n        currentLine.chars.push(char);\n      }\n    } else {\n      const kerning = charData.kerning[previousChar] || 0;\n      const nextCharWidth = charData.xAdvance + kerning + adjustedLetterSpacing;\n      currentWord.positions[currentWord.index++] = currentWord.width + kerning;\n      currentWord.chars.push(char);\n      currentWord.width += nextCharWidth;\n    }\n    previousChar = char;\n  }\n  nextLine();\n  if (style.align === \"center\") {\n    alignCenter(layoutData);\n  } else if (style.align === \"right\") {\n    alignRight(layoutData);\n  } else if (style.align === \"justify\") {\n    alignJustify(layoutData);\n  }\n  return layoutData;\n}\nfunction alignCenter(measurementData) {\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    const offset = measurementData.width / 2 - line.width / 2;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      line.charPositions[j] += offset;\n    }\n  }\n}\nfunction alignRight(measurementData) {\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    const offset = measurementData.width - line.width;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      line.charPositions[j] += offset;\n    }\n  }\n}\nfunction alignJustify(measurementData) {\n  const width = measurementData.width;\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    let indy = 0;\n    let spaceIndex = line.spacesIndex[indy++];\n    let offset = 0;\n    const totalSpaces = line.spacesIndex.length;\n    const newSpaceWidth = (width - line.width) / totalSpaces;\n    const spaceWidth = newSpaceWidth;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      if (j === spaceIndex) {\n        spaceIndex = line.spacesIndex[indy++];\n        offset += spaceWidth;\n      }\n      line.charPositions[j] += offset;\n    }\n  }\n}\n\nexport { getBitmapTextLayout };\n//# sourceMappingURL=getBitmapTextLayout.mjs.map\n","import { Cache } from '../../assets/cache/Cache.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { warn } from '../../utils/logging/warn.mjs';\nimport { TextStyle } from '../text/TextStyle.mjs';\nimport { DynamicBitmapFont } from './DynamicBitmapFont.mjs';\nimport { getBitmapTextLayout } from './utils/getBitmapTextLayout.mjs';\nimport { resolveCharacters } from './utils/resolveCharacters.mjs';\n\n\"use strict\";\nlet fontCount = 0;\nclass BitmapFontManagerClass {\n  constructor() {\n    /**\n     * This character set includes all the letters in the alphabet (both lower- and upper- case).\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from('ExampleFont', style, { chars: BitmapFont.ALPHA })\n     */\n    this.ALPHA = [[\"a\", \"z\"], [\"A\", \"Z\"], \" \"];\n    /**\n     * This character set includes all decimal digits (from 0 to 9).\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from('ExampleFont', style, { chars: BitmapFont.NUMERIC })\n     */\n    this.NUMERIC = [[\"0\", \"9\"]];\n    /**\n     * This character set is the union of `BitmapFont.ALPHA` and `BitmapFont.NUMERIC`.\n     * @type {string[][]}\n     */\n    this.ALPHANUMERIC = [[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \" \"];\n    /**\n     * This character set consists of all the ASCII table.\n     * @member {string[][]}\n     * @see http://www.asciitable.com/\n     */\n    this.ASCII = [[\" \", \"~\"]];\n    /** Default options for installing a new BitmapFont. */\n    this.defaultOptions = {\n      chars: this.ALPHANUMERIC,\n      resolution: 1,\n      padding: 4,\n      skipKerning: false\n    };\n  }\n  /**\n   * Get a font for the specified text and style.\n   * @param text - The text to get the font for\n   * @param style - The style to use\n   */\n  getFont(text, style) {\n    let fontFamilyKey = `${style.fontFamily}-bitmap`;\n    let overrideFill = true;\n    if (style._fill.fill && !style._stroke) {\n      fontFamilyKey += style._fill.fill.styleKey;\n      overrideFill = false;\n    } else if (style._stroke || style.dropShadow) {\n      let key = style.styleKey;\n      key = key.substring(0, key.lastIndexOf(\"-\"));\n      fontFamilyKey = `${key}-bitmap`;\n      overrideFill = false;\n    }\n    if (!Cache.has(fontFamilyKey)) {\n      const fnt = new DynamicBitmapFont({\n        style,\n        overrideFill,\n        overrideSize: true,\n        ...this.defaultOptions\n      });\n      fontCount++;\n      if (fontCount > 50) {\n        warn(\"BitmapText\", `You have dynamically created ${fontCount} bitmap fonts, this can be inefficient. Try pre installing your font styles using \\`BitmapFont.install({name:\"style1\", style})\\``);\n      }\n      fnt.once(\"destroy\", () => {\n        fontCount--;\n        Cache.remove(fontFamilyKey);\n      });\n      Cache.set(\n        fontFamilyKey,\n        fnt\n      );\n    }\n    const dynamicFont = Cache.get(fontFamilyKey);\n    dynamicFont.ensureCharacters?.(text);\n    return dynamicFont;\n  }\n  /**\n   * Get the layout of a text for the specified style.\n   * @param text - The text to get the layout for\n   * @param style - The style to use\n   */\n  getLayout(text, style) {\n    const bitmapFont = this.getFont(text, style);\n    return getBitmapTextLayout([...text], style, bitmapFont);\n  }\n  /**\n   * Measure the text using the specified style.\n   * @param text - The text to measure\n   * @param style - The style to use\n   */\n  measureText(text, style) {\n    return this.getLayout(text, style);\n  }\n  // eslint-disable-next-line max-len\n  install(...args) {\n    let options = args[0];\n    if (typeof options === \"string\") {\n      options = {\n        name: options,\n        style: args[1],\n        chars: args[2]?.chars,\n        resolution: args[2]?.resolution,\n        padding: args[2]?.padding,\n        skipKerning: args[2]?.skipKerning\n      };\n      deprecation(v8_0_0, \"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})\");\n    }\n    const name = options?.name;\n    if (!name) {\n      throw new Error(\"[BitmapFontManager] Property `name` is required.\");\n    }\n    options = { ...this.defaultOptions, ...options };\n    const textStyle = options.style;\n    const style = textStyle instanceof TextStyle ? textStyle : new TextStyle(textStyle);\n    const overrideFill = style._fill.fill !== null && style._fill.fill !== void 0;\n    const font = new DynamicBitmapFont({\n      style,\n      overrideFill,\n      skipKerning: options.skipKerning,\n      padding: options.padding,\n      resolution: options.resolution,\n      overrideSize: false\n    });\n    const flatChars = resolveCharacters(options.chars);\n    font.ensureCharacters(flatChars.join(\"\"));\n    Cache.set(`${name}-bitmap`, font);\n    font.once(\"destroy\", () => Cache.remove(`${name}-bitmap`));\n    return font;\n  }\n  /**\n   * Uninstalls a bitmap font from the cache.\n   * @param {string} name - The name of the bitmap font to uninstall.\n   */\n  uninstall(name) {\n    const cacheKey = `${name}-bitmap`;\n    const font = Cache.get(cacheKey);\n    if (font) {\n      Cache.remove(cacheKey);\n      font.destroy();\n    }\n  }\n}\nconst BitmapFontManager = new BitmapFontManagerClass();\n\nexport { BitmapFontManager };\n//# sourceMappingURL=BitmapFontManager.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\n\n\"use strict\";\nclass FilterPipe {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  push(filterEffect, container, instructionSet) {\n    const renderPipes = this._renderer.renderPipes;\n    renderPipes.batch.break(instructionSet);\n    instructionSet.add({\n      renderPipeId: \"filter\",\n      canBundle: false,\n      action: \"pushFilter\",\n      container,\n      filterEffect\n    });\n  }\n  pop(_filterEffect, _container, instructionSet) {\n    this._renderer.renderPipes.batch.break(instructionSet);\n    instructionSet.add({\n      renderPipeId: \"filter\",\n      action: \"popFilter\",\n      canBundle: false\n    });\n  }\n  execute(instruction) {\n    if (instruction.action === \"pushFilter\") {\n      this._renderer.filter.push(instruction);\n    } else if (instruction.action === \"popFilter\") {\n      this._renderer.filter.pop();\n    }\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\nFilterPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"filter\"\n};\n\nexport { FilterPipe };\n//# sourceMappingURL=FilterPipe.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { boundsPool } from './utils/matrixAndBoundsPool.mjs';\n\n\"use strict\";\nconst tempMatrix = new Matrix();\nfunction getFastGlobalBounds(target, bounds) {\n  bounds.clear();\n  _getGlobalBoundsRecursive(target, bounds);\n  if (!bounds.isValid) {\n    bounds.set(0, 0, 0, 0);\n  }\n  if (!target.renderGroup) {\n    bounds.applyMatrix(target.parentRenderGroup.worldTransform);\n  } else {\n    bounds.applyMatrix(target.renderGroup.localTransform);\n  }\n  return bounds;\n}\nfunction _getGlobalBoundsRecursive(target, bounds) {\n  if (target.localDisplayStatus !== 7 || !target.measurable) {\n    return;\n  }\n  const manageEffects = !!target.effects.length;\n  let localBounds = bounds;\n  if (target.renderGroup || manageEffects) {\n    localBounds = boundsPool.get().clear();\n  }\n  if (target.boundsArea) {\n    bounds.addRect(target.boundsArea, target.worldTransform);\n  } else {\n    if (target.renderPipeId) {\n      const viewBounds = target.bounds;\n      localBounds.addFrame(\n        viewBounds.minX,\n        viewBounds.minY,\n        viewBounds.maxX,\n        viewBounds.maxY,\n        target.groupTransform\n      );\n    }\n    const children = target.children;\n    for (let i = 0; i < children.length; i++) {\n      _getGlobalBoundsRecursive(children[i], localBounds);\n    }\n  }\n  if (manageEffects) {\n    let advanced = false;\n    for (let i = 0; i < target.effects.length; i++) {\n      if (target.effects[i].addBounds) {\n        if (!advanced) {\n          advanced = true;\n          localBounds.applyMatrix(target.parentRenderGroup.worldTransform);\n        }\n        target.effects[i].addBounds(localBounds, true);\n      }\n    }\n    if (advanced) {\n      localBounds.applyMatrix(target.parentRenderGroup.worldTransform.copyTo(tempMatrix).invert());\n      bounds.addBounds(localBounds, target.relativeGroupTransform);\n    }\n    bounds.addBounds(localBounds);\n    boundsPool.return(localBounds);\n  } else if (target.renderGroup) {\n    bounds.addBounds(localBounds, target.relativeGroupTransform);\n    boundsPool.return(localBounds);\n  }\n}\n\nexport { _getGlobalBoundsRecursive, getFastGlobalBounds };\n//# sourceMappingURL=getFastGlobalBounds.mjs.map\n","\"use strict\";\nfunction getGlobalRenderableBounds(renderables, bounds) {\n  bounds.clear();\n  const tempMatrix = bounds.matrix;\n  for (let i = 0; i < renderables.length; i++) {\n    const renderable = renderables[i];\n    if (renderable.globalDisplayStatus < 7) {\n      continue;\n    }\n    bounds.matrix = renderable.worldTransform;\n    renderable.addBounds(bounds);\n  }\n  bounds.matrix = tempMatrix;\n  return bounds;\n}\n\nexport { getGlobalRenderableBounds };\n//# sourceMappingURL=getRenderableBounds.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { Matrix } from '../maths/matrix/Matrix.mjs';\nimport { Point } from '../maths/point/Point.mjs';\nimport { BindGroup } from '../rendering/renderers/gpu/shader/BindGroup.mjs';\nimport { Geometry } from '../rendering/renderers/shared/geometry/Geometry.mjs';\nimport { UniformGroup } from '../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { Texture } from '../rendering/renderers/shared/texture/Texture.mjs';\nimport { TexturePool } from '../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { RendererType } from '../rendering/renderers/types.mjs';\nimport { Bounds } from '../scene/container/bounds/Bounds.mjs';\nimport { getFastGlobalBounds } from '../scene/container/bounds/getFastGlobalBounds.mjs';\nimport { getGlobalRenderableBounds } from '../scene/container/bounds/getRenderableBounds.mjs';\nimport { warn } from '../utils/logging/warn.mjs';\n\n\"use strict\";\nconst quadGeometry = new Geometry({\n  attributes: {\n    aPosition: {\n      buffer: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n      location: 0,\n      format: \"float32x2\",\n      stride: 2 * 4,\n      offset: 0\n    }\n  },\n  indexBuffer: new Uint32Array([0, 1, 2, 0, 2, 3])\n});\nclass FilterSystem {\n  constructor(renderer) {\n    this._filterStackIndex = 0;\n    this._filterStack = [];\n    this._filterGlobalUniforms = new UniformGroup({\n      uInputSize: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uInputPixel: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uInputClamp: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uOutputFrame: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uGlobalFrame: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uOutputTexture: { value: new Float32Array(4), type: \"vec4<f32>\" }\n    });\n    this._globalFilterBindGroup = new BindGroup({});\n    this.renderer = renderer;\n  }\n  /**\n   * The back texture of the currently active filter. Requires the filter to have `blendRequired` set to true.\n   * @readonly\n   */\n  get activeBackTexture() {\n    return this._activeFilterData?.backTexture;\n  }\n  push(instruction) {\n    const renderer = this.renderer;\n    const filters = instruction.filterEffect.filters;\n    if (!this._filterStack[this._filterStackIndex]) {\n      this._filterStack[this._filterStackIndex] = this._getFilterData();\n    }\n    const filterData = this._filterStack[this._filterStackIndex];\n    this._filterStackIndex++;\n    if (filters.length === 0) {\n      filterData.skip = true;\n      return;\n    }\n    const bounds = filterData.bounds;\n    if (instruction.renderables) {\n      getGlobalRenderableBounds(instruction.renderables, bounds);\n    } else if (instruction.filterEffect.filterArea) {\n      bounds.clear();\n      bounds.addRect(instruction.filterEffect.filterArea);\n      bounds.applyMatrix(instruction.container.worldTransform);\n    } else {\n      getFastGlobalBounds(instruction.container, bounds);\n    }\n    const colorTextureSource = renderer.renderTarget.rootRenderTarget.colorTexture.source;\n    let resolution = colorTextureSource._resolution;\n    let padding = 0;\n    let antialias = colorTextureSource.antialias;\n    let blendRequired = false;\n    let enabled = false;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      resolution = Math.min(resolution, filter.resolution);\n      padding += filter.padding;\n      if (filter.antialias !== \"inherit\") {\n        if (filter.antialias === \"on\") {\n          antialias = true;\n        } else {\n          antialias = false;\n        }\n      }\n      const isCompatible = !!(filter.compatibleRenderers & renderer.type);\n      if (!isCompatible) {\n        enabled = false;\n        break;\n      }\n      if (filter.blendRequired && !(renderer.backBuffer?.useBackBuffer ?? true)) {\n        warn(\"Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options.\");\n        enabled = false;\n        break;\n      }\n      enabled = filter.enabled || enabled;\n      blendRequired = blendRequired || filter.blendRequired;\n    }\n    if (!enabled) {\n      filterData.skip = true;\n      return;\n    }\n    const viewPort = renderer.renderTarget.rootViewPort;\n    bounds.scale(resolution).fitBounds(0, viewPort.width, 0, viewPort.height).scale(1 / resolution).pad(padding).ceil();\n    if (!bounds.isPositive) {\n      filterData.skip = true;\n      return;\n    }\n    filterData.skip = false;\n    filterData.bounds = bounds;\n    filterData.blendRequired = blendRequired;\n    filterData.container = instruction.container;\n    filterData.filterEffect = instruction.filterEffect;\n    filterData.previousRenderSurface = renderer.renderTarget.renderSurface;\n    filterData.inputTexture = TexturePool.getOptimalTexture(\n      bounds.width,\n      bounds.height,\n      resolution,\n      antialias\n    );\n    renderer.renderTarget.bind(filterData.inputTexture, true);\n    renderer.globalUniforms.push({\n      offset: bounds\n    });\n  }\n  pop() {\n    const renderer = this.renderer;\n    this._filterStackIndex--;\n    const filterData = this._filterStack[this._filterStackIndex];\n    if (filterData.skip) {\n      return;\n    }\n    this._activeFilterData = filterData;\n    const inputTexture = filterData.inputTexture;\n    const bounds = filterData.bounds;\n    let backTexture = Texture.EMPTY;\n    renderer.renderTarget.finishRenderPass();\n    if (filterData.blendRequired) {\n      const previousBounds = this._filterStackIndex > 0 ? this._filterStack[this._filterStackIndex - 1].bounds : null;\n      const renderTarget = renderer.renderTarget.getRenderTarget(filterData.previousRenderSurface);\n      backTexture = this.getBackTexture(renderTarget, bounds, previousBounds);\n    }\n    filterData.backTexture = backTexture;\n    const filters = filterData.filterEffect.filters;\n    this._globalFilterBindGroup.setResource(inputTexture.source.style, 2);\n    this._globalFilterBindGroup.setResource(backTexture.source, 3);\n    renderer.globalUniforms.pop();\n    if (filters.length === 1) {\n      filters[0].apply(this, inputTexture, filterData.previousRenderSurface, false);\n      TexturePool.returnTexture(inputTexture);\n    } else {\n      let flip = filterData.inputTexture;\n      let flop = TexturePool.getOptimalTexture(\n        bounds.width,\n        bounds.height,\n        flip.source._resolution,\n        false\n      );\n      let i = 0;\n      for (i = 0; i < filters.length - 1; ++i) {\n        const filter = filters[i];\n        filter.apply(this, flip, flop, true);\n        const t = flip;\n        flip = flop;\n        flop = t;\n      }\n      filters[i].apply(this, flip, filterData.previousRenderSurface, false);\n      TexturePool.returnTexture(flip);\n      TexturePool.returnTexture(flop);\n    }\n    if (filterData.blendRequired) {\n      TexturePool.returnTexture(backTexture);\n    }\n  }\n  getBackTexture(lastRenderSurface, bounds, previousBounds) {\n    const backgroundResolution = lastRenderSurface.colorTexture.source._resolution;\n    const backTexture = TexturePool.getOptimalTexture(\n      bounds.width,\n      bounds.height,\n      backgroundResolution,\n      false\n    );\n    let x = bounds.minX;\n    let y = bounds.minY;\n    if (previousBounds) {\n      x -= previousBounds.minX;\n      y -= previousBounds.minY;\n    }\n    x = Math.floor(x * backgroundResolution);\n    y = Math.floor(y * backgroundResolution);\n    const width = Math.ceil(bounds.width * backgroundResolution);\n    const height = Math.ceil(bounds.height * backgroundResolution);\n    this.renderer.renderTarget.copyToTexture(\n      lastRenderSurface,\n      backTexture,\n      { x, y },\n      { width, height },\n      { x: 0, y: 0 }\n    );\n    return backTexture;\n  }\n  applyFilter(filter, input, output, clear) {\n    const renderer = this.renderer;\n    const filterData = this._filterStack[this._filterStackIndex];\n    const bounds = filterData.bounds;\n    const offset = Point.shared;\n    const previousRenderSurface = filterData.previousRenderSurface;\n    const isFinalTarget = previousRenderSurface === output;\n    let resolution = this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution;\n    let currentIndex = this._filterStackIndex - 1;\n    while (currentIndex > 0 && this._filterStack[currentIndex].skip) {\n      --currentIndex;\n    }\n    if (currentIndex > 0) {\n      resolution = this._filterStack[currentIndex].inputTexture.source._resolution;\n    }\n    const filterUniforms = this._filterGlobalUniforms;\n    const uniforms = filterUniforms.uniforms;\n    const outputFrame = uniforms.uOutputFrame;\n    const inputSize = uniforms.uInputSize;\n    const inputPixel = uniforms.uInputPixel;\n    const inputClamp = uniforms.uInputClamp;\n    const globalFrame = uniforms.uGlobalFrame;\n    const outputTexture = uniforms.uOutputTexture;\n    if (isFinalTarget) {\n      let lastIndex = this._filterStackIndex;\n      while (lastIndex > 0) {\n        lastIndex--;\n        const filterData2 = this._filterStack[this._filterStackIndex - 1];\n        if (!filterData2.skip) {\n          offset.x = filterData2.bounds.minX;\n          offset.y = filterData2.bounds.minY;\n          break;\n        }\n      }\n      outputFrame[0] = bounds.minX - offset.x;\n      outputFrame[1] = bounds.minY - offset.y;\n    } else {\n      outputFrame[0] = 0;\n      outputFrame[1] = 0;\n    }\n    outputFrame[2] = input.frame.width;\n    outputFrame[3] = input.frame.height;\n    inputSize[0] = input.source.width;\n    inputSize[1] = input.source.height;\n    inputSize[2] = 1 / inputSize[0];\n    inputSize[3] = 1 / inputSize[1];\n    inputPixel[0] = input.source.pixelWidth;\n    inputPixel[1] = input.source.pixelHeight;\n    inputPixel[2] = 1 / inputPixel[0];\n    inputPixel[3] = 1 / inputPixel[1];\n    inputClamp[0] = 0.5 * inputPixel[2];\n    inputClamp[1] = 0.5 * inputPixel[3];\n    inputClamp[2] = input.frame.width * inputSize[2] - 0.5 * inputPixel[2];\n    inputClamp[3] = input.frame.height * inputSize[3] - 0.5 * inputPixel[3];\n    const rootTexture = this.renderer.renderTarget.rootRenderTarget.colorTexture;\n    globalFrame[0] = offset.x * resolution;\n    globalFrame[1] = offset.y * resolution;\n    globalFrame[2] = rootTexture.source.width * resolution;\n    globalFrame[3] = rootTexture.source.height * resolution;\n    const renderTarget = this.renderer.renderTarget.getRenderTarget(output);\n    renderer.renderTarget.bind(output, !!clear);\n    if (output instanceof Texture) {\n      outputTexture[0] = output.frame.width;\n      outputTexture[1] = output.frame.height;\n    } else {\n      outputTexture[0] = renderTarget.width;\n      outputTexture[1] = renderTarget.height;\n    }\n    outputTexture[2] = renderTarget.isRoot ? -1 : 1;\n    filterUniforms.update();\n    if (renderer.renderPipes.uniformBatch) {\n      const batchUniforms = renderer.renderPipes.uniformBatch.getUboResource(filterUniforms);\n      this._globalFilterBindGroup.setResource(batchUniforms, 0);\n    } else {\n      this._globalFilterBindGroup.setResource(filterUniforms, 0);\n    }\n    this._globalFilterBindGroup.setResource(input.source, 1);\n    this._globalFilterBindGroup.setResource(input.source.style, 2);\n    filter.groups[0] = this._globalFilterBindGroup;\n    renderer.encoder.draw({\n      geometry: quadGeometry,\n      shader: filter,\n      state: filter._state,\n      topology: \"triangle-list\"\n    });\n    if (renderer.type === RendererType.WEBGL) {\n      renderer.renderTarget.finishRenderPass();\n    }\n  }\n  _getFilterData() {\n    return {\n      skip: false,\n      inputTexture: null,\n      bounds: new Bounds(),\n      container: null,\n      filterEffect: null,\n      blendRequired: false,\n      previousRenderSurface: null\n    };\n  }\n  /**\n   * Multiply _input normalized coordinates_ to this matrix to get _sprite texture normalized coordinates_.\n   *\n   * Use `outputMatrix * vTextureCoord` in the shader.\n   * @param outputMatrix - The matrix to output to.\n   * @param {Sprite} sprite - The sprite to map to.\n   * @returns The mapped matrix.\n   */\n  calculateSpriteMatrix(outputMatrix, sprite) {\n    const data = this._activeFilterData;\n    const mappedMatrix = outputMatrix.set(\n      data.inputTexture._source.width,\n      0,\n      0,\n      data.inputTexture._source.height,\n      data.bounds.minX,\n      data.bounds.minY\n    );\n    const worldTransform = sprite.worldTransform.copyTo(Matrix.shared);\n    worldTransform.invert();\n    mappedMatrix.prepend(worldTransform);\n    mappedMatrix.scale(\n      1 / sprite.texture.frame.width,\n      1 / sprite.texture.frame.height\n    );\n    mappedMatrix.translate(sprite.anchor.x, sprite.anchor.y);\n    return mappedMatrix;\n  }\n}\n/** @ignore */\nFilterSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  name: \"filter\"\n};\n\nexport { FilterSystem };\n//# sourceMappingURL=FilterSystem.mjs.map\n","import { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\nimport { Container } from '../../container/Container.mjs';\nimport { GraphicsContext } from './GraphicsContext.mjs';\n\n\"use strict\";\nclass Graphics extends Container {\n  /**\n   * @param options - Options for the Graphics.\n   */\n  constructor(options) {\n    if (options instanceof GraphicsContext) {\n      options = { context: options };\n    }\n    const { context, roundPixels, ...rest } = options || {};\n    super({\n      label: \"Graphics\",\n      ...rest\n    });\n    this.canBundle = true;\n    this.renderPipeId = \"graphics\";\n    this._roundPixels = 0;\n    if (!context) {\n      this._context = this._ownedContext = new GraphicsContext();\n    } else {\n      this._context = context;\n    }\n    this._context.on(\"update\", this.onViewUpdate, this);\n    this.allowChildren = false;\n    this.roundPixels = roundPixels ?? false;\n  }\n  set context(context) {\n    if (context === this._context)\n      return;\n    this._context.off(\"update\", this.onViewUpdate, this);\n    this._context = context;\n    this._context.on(\"update\", this.onViewUpdate, this);\n    this.onViewUpdate();\n  }\n  get context() {\n    return this._context;\n  }\n  /**\n   * The local bounds of the graphic.\n   * @type {rendering.Bounds}\n   */\n  get bounds() {\n    return this._context.bounds;\n  }\n  /**\n   * Adds the bounds of this object to the bounds object.\n   * @param bounds - The output bounds object.\n   */\n  addBounds(bounds) {\n    bounds.addBounds(this._context.bounds);\n  }\n  /**\n   * Checks if the object contains the given point.\n   * @param point - The point to check\n   */\n  containsPoint(point) {\n    return this._context.containsPoint(point);\n  }\n  /**\n   *  Whether or not to round the x/y position of the graphic.\n   * @type {boolean}\n   */\n  get roundPixels() {\n    return !!this._roundPixels;\n  }\n  set roundPixels(value) {\n    this._roundPixels = value ? 1 : 0;\n  }\n  onViewUpdate() {\n    this._didChangeId += 1 << 12;\n    this._didGraphicsUpdate = true;\n    if (this.didViewUpdate)\n      return;\n    this.didViewUpdate = true;\n    const renderGroup = this.renderGroup || this.parentRenderGroup;\n    if (renderGroup) {\n      renderGroup.onChildViewUpdate(this);\n    }\n  }\n  /**\n   * Destroys this graphics renderable and optionally its context.\n   * @param options - Options parameter. A boolean will act as if all options\n   *\n   * If the context was created by this graphics and `destroy(false)` or `destroy()` is called\n   * then the context will still be destroyed.\n   *\n   * If you want to explicitly not destroy this context that this graphics created,\n   * then you should pass destroy({ context: false })\n   *\n   * If the context was passed in as an argument to the constructor then it will not be destroyed\n   * @param {boolean} [options.texture=false] - Should destroy the texture of the graphics context\n   * @param {boolean} [options.textureSource=false] - Should destroy the texture source of the graphics context\n   * @param {boolean} [options.context=false] - Should destroy the context\n   */\n  destroy(options) {\n    if (this._ownedContext && !options) {\n      this._ownedContext.destroy(options);\n    } else if (options === true || options?.context === true) {\n      this._context.destroy(options);\n    }\n    this._ownedContext = null;\n    this._context = null;\n    super.destroy(options);\n  }\n  _callContextMethod(method, args) {\n    this.context[method](...args);\n    return this;\n  }\n  // --------------------------------------- GraphicsContext methods ---------------------------------------\n  /**\n   * Sets the current fill style of the graphics context. The fill style can be a color, gradient,\n   * pattern, or a more complex style defined by a FillStyle object.\n   * @param {FillInput} args - The fill style to apply. This can be a simple color, a gradient or\n   * pattern object, or a FillStyle or ConvertedFillStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setFillStyle(...args) {\n    return this._callContextMethod(\"setFillStyle\", args);\n  }\n  /**\n   * Sets the current stroke style of the graphics context. Similar to fill styles, stroke styles can\n   * encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n   * @param {StrokeInput} args - The stroke style to apply. Can be defined as a color, a gradient or pattern,\n   * or a StrokeStyle or ConvertedStrokeStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setStrokeStyle(...args) {\n    return this._callContextMethod(\"setStrokeStyle\", args);\n  }\n  fill(...args) {\n    return this._callContextMethod(\"fill\", args);\n  }\n  /**\n   * Strokes the current path with the current stroke style. This method can take an optional\n   * FillStyle parameter to define the stroke's appearance, including its color, width, and other properties.\n   * @param {FillStyle} args - (Optional) The stroke style to apply. Can be defined as a simple color or a more\n   * complex style object. If omitted, uses the current stroke style.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  stroke(...args) {\n    return this._callContextMethod(\"stroke\", args);\n  }\n  texture(...args) {\n    return this._callContextMethod(\"texture\", args);\n  }\n  /**\n   * Resets the current path. Any previous path and its commands are discarded and a new path is\n   * started. This is typically called before beginning a new shape or series of drawing commands.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  beginPath() {\n    return this._callContextMethod(\"beginPath\", []);\n  }\n  /**\n   * Applies a cutout to the last drawn shape. This is used to create holes or complex shapes by\n   * subtracting a path from the previously drawn path. If a hole is not completely in a shape, it will\n   * fail to cut correctly!\n   */\n  cut() {\n    return this._callContextMethod(\"cut\", []);\n  }\n  arc(...args) {\n    return this._callContextMethod(\"arc\", args);\n  }\n  arcTo(...args) {\n    return this._callContextMethod(\"arcTo\", args);\n  }\n  arcToSvg(...args) {\n    return this._callContextMethod(\"arcToSvg\", args);\n  }\n  bezierCurveTo(...args) {\n    return this._callContextMethod(\"bezierCurveTo\", args);\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    return this._callContextMethod(\"closePath\", []);\n  }\n  ellipse(...args) {\n    return this._callContextMethod(\"ellipse\", args);\n  }\n  circle(...args) {\n    return this._callContextMethod(\"circle\", args);\n  }\n  path(...args) {\n    return this._callContextMethod(\"path\", args);\n  }\n  lineTo(...args) {\n    return this._callContextMethod(\"lineTo\", args);\n  }\n  moveTo(...args) {\n    return this._callContextMethod(\"moveTo\", args);\n  }\n  quadraticCurveTo(...args) {\n    return this._callContextMethod(\"quadraticCurveTo\", args);\n  }\n  rect(...args) {\n    return this._callContextMethod(\"rect\", args);\n  }\n  roundRect(...args) {\n    return this._callContextMethod(\"roundRect\", args);\n  }\n  poly(...args) {\n    return this._callContextMethod(\"poly\", args);\n  }\n  regularPoly(...args) {\n    return this._callContextMethod(\"regularPoly\", args);\n  }\n  roundPoly(...args) {\n    return this._callContextMethod(\"roundPoly\", args);\n  }\n  roundShape(...args) {\n    return this._callContextMethod(\"roundShape\", args);\n  }\n  filletRect(...args) {\n    return this._callContextMethod(\"filletRect\", args);\n  }\n  chamferRect(...args) {\n    return this._callContextMethod(\"chamferRect\", args);\n  }\n  star(...args) {\n    return this._callContextMethod(\"star\", args);\n  }\n  svg(...args) {\n    return this._callContextMethod(\"svg\", args);\n  }\n  restore(...args) {\n    return this._callContextMethod(\"restore\", args);\n  }\n  /** Saves the current graphics state, including transformations, fill styles, and stroke styles, onto a stack. */\n  save() {\n    return this._callContextMethod(\"save\", []);\n  }\n  /**\n   * Returns the current transformation matrix of the graphics context.\n   * @returns The current transformation matrix.\n   */\n  getTransform() {\n    return this.context.getTransform();\n  }\n  /**\n   * Resets the current transformation matrix to the identity matrix, effectively removing\n   * any transformations (rotation, scaling, translation) previously applied.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  resetTransform() {\n    return this._callContextMethod(\"resetTransform\", []);\n  }\n  rotateTransform(...args) {\n    return this._callContextMethod(\"rotate\", args);\n  }\n  scaleTransform(...args) {\n    return this._callContextMethod(\"scale\", args);\n  }\n  setTransform(...args) {\n    return this._callContextMethod(\"setTransform\", args);\n  }\n  transform(...args) {\n    return this._callContextMethod(\"transform\", args);\n  }\n  translateTransform(...args) {\n    return this._callContextMethod(\"translate\", args);\n  }\n  /**\n   * Clears all drawing commands from the graphics context, effectively resetting it. This includes clearing the path,\n   * and optionally resetting transformations to the identity matrix.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  clear() {\n    return this._callContextMethod(\"clear\", []);\n  }\n  /**\n   * The fill style to use.\n   * @type {ConvertedFillStyle}\n   */\n  get fillStyle() {\n    return this._context.fillStyle;\n  }\n  set fillStyle(value) {\n    this._context.fillStyle = value;\n  }\n  /**\n   * The stroke style to use.\n   * @type {ConvertedStrokeStyle}\n   */\n  get strokeStyle() {\n    return this._context.strokeStyle;\n  }\n  set strokeStyle(value) {\n    this._context.strokeStyle = value;\n  }\n  /**\n   * Creates a new Graphics object.\n   * Note that only the context of the object is cloned, not its transform (position,scale,etc)\n   * @param deep - Whether to create a deep clone of the graphics object. If false, the context\n   * will be shared between the two objects (default false). If true, the context will be\n   * cloned (recommended if you need to modify the context in any way).\n   * @returns - A clone of the graphics object\n   */\n  clone(deep = false) {\n    if (deep) {\n      return new Graphics(this._context.clone());\n    }\n    this._ownedContext = null;\n    const clone = new Graphics(this._context);\n    return clone;\n  }\n  // -------- v7 deprecations ---------\n  /**\n   * @param width\n   * @param color\n   * @param alpha\n   * @deprecated since 8.0.0 Use {@link Graphics#setStrokeStyle} instead\n   */\n  lineStyle(width, color, alpha) {\n    deprecation(v8_0_0, \"Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.\");\n    const strokeStyle = {};\n    width && (strokeStyle.width = width);\n    color && (strokeStyle.color = color);\n    alpha && (strokeStyle.alpha = alpha);\n    this.context.strokeStyle = strokeStyle;\n    return this;\n  }\n  /**\n   * @param color\n   * @param alpha\n   * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n   */\n  beginFill(color, alpha) {\n    deprecation(v8_0_0, \"Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.\");\n    const fillStyle = {};\n    color && (fillStyle.color = color);\n    alpha && (fillStyle.alpha = alpha);\n    this.context.fillStyle = fillStyle;\n    return this;\n  }\n  /**\n   * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n   */\n  endFill() {\n    deprecation(v8_0_0, \"Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.\");\n    this.context.fill();\n    const strokeStyle = this.context.strokeStyle;\n    if (strokeStyle.width !== GraphicsContext.defaultStrokeStyle.width || strokeStyle.color !== GraphicsContext.defaultStrokeStyle.color || strokeStyle.alpha !== GraphicsContext.defaultStrokeStyle.alpha) {\n      this.context.stroke();\n    }\n    return this;\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#circle} instead\n   */\n  drawCircle(...args) {\n    deprecation(v8_0_0, \"Graphics#drawCircle has been renamed to Graphics#circle\");\n    return this._callContextMethod(\"circle\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#ellipse} instead\n   */\n  drawEllipse(...args) {\n    deprecation(v8_0_0, \"Graphics#drawEllipse has been renamed to Graphics#ellipse\");\n    return this._callContextMethod(\"ellipse\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#poly} instead\n   */\n  drawPolygon(...args) {\n    deprecation(v8_0_0, \"Graphics#drawPolygon has been renamed to Graphics#poly\");\n    return this._callContextMethod(\"poly\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#rect} instead\n   */\n  drawRect(...args) {\n    deprecation(v8_0_0, \"Graphics#drawRect has been renamed to Graphics#rect\");\n    return this._callContextMethod(\"rect\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#roundRect} instead\n   */\n  drawRoundedRect(...args) {\n    deprecation(v8_0_0, \"Graphics#drawRoundedRect has been renamed to Graphics#roundRect\");\n    return this._callContextMethod(\"roundRect\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#star} instead\n   */\n  drawStar(...args) {\n    deprecation(v8_0_0, \"Graphics#drawStar has been renamed to Graphics#star\");\n    return this._callContextMethod(\"star\", args);\n  }\n}\n\nexport { Graphics };\n//# sourceMappingURL=Graphics.mjs.map\n","import { Buffer } from '../../../rendering/renderers/shared/buffer/Buffer.mjs';\nimport { BufferUsage } from '../../../rendering/renderers/shared/buffer/const.mjs';\nimport { Geometry } from '../../../rendering/renderers/shared/geometry/Geometry.mjs';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nconst _MeshGeometry = class _MeshGeometry extends Geometry {\n  constructor(...args) {\n    let options = args[0] ?? {};\n    if (options instanceof Float32Array) {\n      deprecation(v8_0_0, \"use new MeshGeometry({ positions, uvs, indices }) instead\");\n      options = {\n        positions: options,\n        uvs: args[1],\n        indices: args[2]\n      };\n    }\n    options = { ..._MeshGeometry.defaultOptions, ...options };\n    const positions = options.positions || new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n    const uvs = options.uvs || new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n    const indices = options.indices || new Uint32Array([0, 1, 2, 0, 2, 3]);\n    const shrinkToFit = options.shrinkBuffersToFit;\n    const positionBuffer = new Buffer({\n      data: positions,\n      label: \"attribute-mesh-positions\",\n      shrinkToFit,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    const uvBuffer = new Buffer({\n      data: uvs,\n      label: \"attribute-mesh-uvs\",\n      shrinkToFit,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    const indexBuffer = new Buffer({\n      data: indices,\n      label: \"index-mesh-buffer\",\n      shrinkToFit,\n      usage: BufferUsage.INDEX | BufferUsage.COPY_DST\n    });\n    super({\n      attributes: {\n        aPosition: {\n          buffer: positionBuffer,\n          format: \"float32x2\",\n          stride: 2 * 4,\n          offset: 0\n        },\n        aUV: {\n          buffer: uvBuffer,\n          format: \"float32x2\",\n          stride: 2 * 4,\n          offset: 0\n        }\n      },\n      indexBuffer,\n      topology: options.topology\n    });\n    this.batchMode = \"auto\";\n  }\n  /** The positions of the mesh. */\n  get positions() {\n    return this.attributes.aPosition.buffer.data;\n  }\n  set positions(value) {\n    this.attributes.aPosition.buffer.data = value;\n  }\n  /** The UVs of the mesh. */\n  get uvs() {\n    return this.attributes.aUV.buffer.data;\n  }\n  set uvs(value) {\n    this.attributes.aUV.buffer.data = value;\n  }\n  /** The indices of the mesh. */\n  get indices() {\n    return this.indexBuffer.data;\n  }\n  set indices(value) {\n    this.indexBuffer.data = value;\n  }\n};\n_MeshGeometry.defaultOptions = {\n  topology: \"triangle-list\",\n  shrinkBuffersToFit: false\n};\nlet MeshGeometry = _MeshGeometry;\n\nexport { MeshGeometry };\n//# sourceMappingURL=MeshGeometry.mjs.map\n","import { Color } from '../../../color/Color.mjs';\n\n\"use strict\";\nfunction textStyleToCSS(style) {\n  const stroke = style._stroke;\n  const fill = style._fill;\n  const cssStyleString = [\n    `color: ${Color.shared.setValue(fill.color).toHex()}`,\n    `font-size: ${style.fontSize}px`,\n    `font-family: ${style.fontFamily}`,\n    `font-weight: ${style.fontWeight}`,\n    `font-style: ${style.fontStyle}`,\n    `font-variant: ${style.fontVariant}`,\n    `letter-spacing: ${style.letterSpacing}px`,\n    `text-align: ${style.align}`,\n    `padding: ${style.padding}px`,\n    `white-space: ${style.whiteSpace === \"pre\" && style.wordWrap ? \"pre-wrap\" : style.whiteSpace}`,\n    ...style.lineHeight ? [`line-height: ${style.lineHeight}px`] : [],\n    ...style.wordWrap ? [\n      `word-wrap: ${style.breakWords ? \"break-all\" : \"break-word\"}`,\n      `max-width: ${style.wordWrapWidth}px`\n    ] : [],\n    ...stroke ? [strokeToCSS(stroke)] : [],\n    ...style.dropShadow ? [dropShadowToCSS(style.dropShadow)] : [],\n    ...style.cssOverrides\n  ].join(\";\");\n  const cssStyles = [`div { ${cssStyleString} }`];\n  tagStyleToCSS(style.tagStyles, cssStyles);\n  return cssStyles.join(\" \");\n}\nfunction dropShadowToCSS(dropShadowStyle) {\n  const color = Color.shared.setValue(dropShadowStyle.color).setAlpha(dropShadowStyle.alpha).toHexa();\n  const x = Math.round(Math.cos(dropShadowStyle.angle) * dropShadowStyle.distance);\n  const y = Math.round(Math.sin(dropShadowStyle.angle) * dropShadowStyle.distance);\n  const position = `${x}px ${y}px`;\n  if (dropShadowStyle.blur > 0) {\n    return `text-shadow: ${position} ${dropShadowStyle.blur}px ${color}`;\n  }\n  return `text-shadow: ${position} ${color}`;\n}\nfunction strokeToCSS(stroke) {\n  return [\n    `-webkit-text-stroke-width: ${stroke.width}px`,\n    `-webkit-text-stroke-color: ${Color.shared.setValue(stroke.color).toHex()}`,\n    `text-stroke-width: ${stroke.width}px`,\n    `text-stroke-color: ${Color.shared.setValue(stroke.color).toHex()}`,\n    \"paint-order: stroke\"\n  ].join(\";\");\n}\nconst templates = {\n  fontSize: `font-size: {{VALUE}}px`,\n  fontFamily: `font-family: {{VALUE}}`,\n  fontWeight: `font-weight: {{VALUE}}`,\n  fontStyle: `font-style: {{VALUE}}`,\n  fontVariant: `font-variant: {{VALUE}}`,\n  letterSpacing: `letter-spacing: {{VALUE}}px`,\n  align: `text-align: {{VALUE}}`,\n  padding: `padding: {{VALUE}}px`,\n  whiteSpace: `white-space: {{VALUE}}`,\n  lineHeight: `line-height: {{VALUE}}px`,\n  wordWrapWidth: `max-width: {{VALUE}}px`\n};\nconst transform = {\n  fill: (value) => `color: ${Color.shared.setValue(value).toHex()}`,\n  breakWords: (value) => `word-wrap: ${value ? \"break-all\" : \"break-word\"}`,\n  stroke: strokeToCSS,\n  dropShadow: dropShadowToCSS\n};\nfunction tagStyleToCSS(tagStyles, out) {\n  for (const i in tagStyles) {\n    const tagStyle = tagStyles[i];\n    const cssTagStyle = [];\n    for (const j in tagStyle) {\n      if (transform[j]) {\n        cssTagStyle.push(transform[j](tagStyle[j]));\n      } else if (templates[j]) {\n        cssTagStyle.push(templates[j].replace(\"{{VALUE}}\", tagStyle[j]));\n      }\n    }\n    out.push(`${i} { ${cssTagStyle.join(\";\")} }`);\n  }\n}\n\nexport { textStyleToCSS };\n//# sourceMappingURL=textStyleToCSS.mjs.map\n","import { warn } from '../../utils/logging/warn.mjs';\nimport { TextStyle } from '../text/TextStyle.mjs';\nimport { generateTextStyleKey } from '../text/utils/generateTextStyleKey.mjs';\nimport { textStyleToCSS } from './utils/textStyleToCSS.mjs';\n\n\"use strict\";\nclass HTMLTextStyle extends TextStyle {\n  constructor(options = {}) {\n    super(options);\n    this._cssOverrides = [];\n    this.cssOverrides ?? (this.cssOverrides = options.cssOverrides);\n    this.tagStyles = options.tagStyles ?? {};\n  }\n  /** List of style overrides that will be applied to the HTML text. */\n  set cssOverrides(value) {\n    this._cssOverrides = value instanceof Array ? value : [value];\n    this.update();\n  }\n  get cssOverrides() {\n    return this._cssOverrides;\n  }\n  _generateKey() {\n    this._styleKey = generateTextStyleKey(this) + this._cssOverrides.join(\"-\");\n    return this._styleKey;\n  }\n  update() {\n    this._cssStyle = null;\n    super.update();\n  }\n  /**\n   * Creates a new HTMLTextStyle object with the same values as this one.\n   * @returns New cloned HTMLTextStyle object\n   */\n  clone() {\n    return new HTMLTextStyle({\n      align: this.align,\n      breakWords: this.breakWords,\n      dropShadow: this.dropShadow ? { ...this.dropShadow } : null,\n      fill: this._fill,\n      fontFamily: this.fontFamily,\n      fontSize: this.fontSize,\n      fontStyle: this.fontStyle,\n      fontVariant: this.fontVariant,\n      fontWeight: this.fontWeight,\n      letterSpacing: this.letterSpacing,\n      lineHeight: this.lineHeight,\n      padding: this.padding,\n      stroke: this._stroke,\n      whiteSpace: this.whiteSpace,\n      wordWrap: this.wordWrap,\n      wordWrapWidth: this.wordWrapWidth,\n      cssOverrides: this.cssOverrides\n    });\n  }\n  get cssStyle() {\n    if (!this._cssStyle) {\n      this._cssStyle = textStyleToCSS(this);\n    }\n    return this._cssStyle;\n  }\n  /**\n   * Add a style override, this can be any CSS property\n   * it will override any built-in style. This is the\n   * property and the value as a string (e.g., `color: red`).\n   * This will override any other internal style.\n   * @param {string} value - CSS style(s) to add.\n   * @example\n   * style.addOverride('background-color: red');\n   */\n  addOverride(...value) {\n    const toAdd = value.filter((v) => !this.cssOverrides.includes(v));\n    if (toAdd.length > 0) {\n      this.cssOverrides.push(...toAdd);\n      this.update();\n    }\n  }\n  /**\n   * Remove any overrides that match the value.\n   * @param {string} value - CSS style to remove.\n   * @example\n   * style.removeOverride('background-color: red');\n   */\n  removeOverride(...value) {\n    const toRemove = value.filter((v) => this.cssOverrides.includes(v));\n    if (toRemove.length > 0) {\n      this.cssOverrides = this.cssOverrides.filter((v) => !toRemove.includes(v));\n      this.update();\n    }\n  }\n  set fill(value) {\n    if (typeof value !== \"string\" && typeof value !== \"number\") {\n      warn(\"[HTMLTextStyle] only color fill is not supported by HTMLText\");\n    }\n    super.fill = value;\n  }\n  set stroke(value) {\n    if (value && typeof value !== \"string\" && typeof value !== \"number\") {\n      warn(\"[HTMLTextStyle] only color stroke is not supported by HTMLText\");\n    }\n    super.stroke = value;\n  }\n}\n\nexport { HTMLTextStyle };\n//# sourceMappingURL=HtmlTextStyle.mjs.map\n","\"use strict\";\nconst nssvg = \"http://www.w3.org/2000/svg\";\nconst nsxhtml = \"http://www.w3.org/1999/xhtml\";\nclass HTMLTextRenderData {\n  constructor() {\n    this.svgRoot = document.createElementNS(nssvg, \"svg\");\n    this.foreignObject = document.createElementNS(nssvg, \"foreignObject\");\n    this.domElement = document.createElementNS(nsxhtml, \"div\");\n    this.styleElement = document.createElementNS(nsxhtml, \"style\");\n    this.image = new Image();\n    const { foreignObject, svgRoot, styleElement, domElement } = this;\n    foreignObject.setAttribute(\"width\", \"10000\");\n    foreignObject.setAttribute(\"height\", \"10000\");\n    foreignObject.style.overflow = \"hidden\";\n    svgRoot.appendChild(foreignObject);\n    foreignObject.appendChild(styleElement);\n    foreignObject.appendChild(domElement);\n  }\n}\n\nexport { HTMLTextRenderData, nssvg, nsxhtml };\n//# sourceMappingURL=HTMLTextRenderData.mjs.map\n","import { CanvasTextMetrics } from '../../text/canvas/CanvasTextMetrics.mjs';\nimport { HTMLTextRenderData } from '../HTMLTextRenderData.mjs';\n\n\"use strict\";\nlet tempHTMLTextRenderData;\nfunction measureHtmlText(text, style, fontStyleCSS, htmlTextRenderData) {\n  htmlTextRenderData = htmlTextRenderData || tempHTMLTextRenderData || (tempHTMLTextRenderData = new HTMLTextRenderData());\n  const { domElement, styleElement, svgRoot } = htmlTextRenderData;\n  domElement.innerHTML = `<style>${style.cssStyle}</style><div>${text}</div>`;\n  domElement.setAttribute(\"style\", \"transform-origin: top left; display: inline-block\");\n  if (fontStyleCSS) {\n    styleElement.textContent = fontStyleCSS;\n  }\n  document.body.appendChild(svgRoot);\n  const contentBounds = domElement.getBoundingClientRect();\n  svgRoot.remove();\n  const descenderPadding = CanvasTextMetrics.measureFont(style.fontStyle).descent;\n  return {\n    width: contentBounds.width,\n    height: contentBounds.height + descenderPadding\n  };\n}\n\nexport { measureHtmlText };\n//# sourceMappingURL=measureHtmlText.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { State } from '../../../rendering/renderers/shared/state/State.mjs';\nimport { BigPool } from '../../../utils/pool/PoolGroup.mjs';\nimport { color32BitToUniform } from '../gpu/colorToUniform.mjs';\nimport { BatchableGraphics } from './BatchableGraphics.mjs';\n\n\"use strict\";\nclass GraphicsPipe {\n  constructor(renderer, adaptor) {\n    this.state = State.for2d();\n    // batchable graphics list, used to render batches\n    this._graphicsBatchesHash = /* @__PURE__ */ Object.create(null);\n    this.renderer = renderer;\n    this._adaptor = adaptor;\n    this._adaptor.init();\n  }\n  validateRenderable(graphics) {\n    const context = graphics.context;\n    const wasBatched = !!this._graphicsBatchesHash[graphics.uid];\n    const gpuContext = this.renderer.graphicsContext.updateGpuContext(context);\n    if (gpuContext.isBatchable || wasBatched !== gpuContext.isBatchable) {\n      return true;\n    }\n    return false;\n  }\n  addRenderable(graphics, instructionSet) {\n    const gpuContext = this.renderer.graphicsContext.updateGpuContext(graphics.context);\n    if (graphics._didGraphicsUpdate) {\n      graphics._didGraphicsUpdate = false;\n      this._rebuild(graphics);\n    }\n    if (gpuContext.isBatchable) {\n      this._addToBatcher(graphics, instructionSet);\n    } else {\n      this.renderer.renderPipes.batch.break(instructionSet);\n      instructionSet.add(graphics);\n    }\n  }\n  updateRenderable(graphics) {\n    const batches = this._graphicsBatchesHash[graphics.uid];\n    if (batches) {\n      for (let i = 0; i < batches.length; i++) {\n        const batch = batches[i];\n        batch.batcher.updateElement(batch);\n      }\n    }\n  }\n  destroyRenderable(graphics) {\n    if (this._graphicsBatchesHash[graphics.uid]) {\n      this._removeBatchForRenderable(graphics.uid);\n    }\n  }\n  execute(graphics) {\n    if (!graphics.isRenderable)\n      return;\n    const renderer = this.renderer;\n    const context = graphics.context;\n    const contextSystem = renderer.graphicsContext;\n    if (!contextSystem.getGpuContext(context).batches.length) {\n      return;\n    }\n    const shader = context.customShader || this._adaptor.shader;\n    this.state.blendMode = graphics.groupBlendMode;\n    const localUniforms = shader.resources.localUniforms.uniforms;\n    localUniforms.uTransformMatrix = graphics.groupTransform;\n    localUniforms.uRound = renderer._roundPixels | graphics._roundPixels;\n    color32BitToUniform(\n      graphics.groupColorAlpha,\n      localUniforms.uColor,\n      0\n    );\n    this._adaptor.execute(this, graphics);\n  }\n  _rebuild(graphics) {\n    const wasBatched = !!this._graphicsBatchesHash[graphics.uid];\n    const gpuContext = this.renderer.graphicsContext.updateGpuContext(graphics.context);\n    if (wasBatched) {\n      this._removeBatchForRenderable(graphics.uid);\n    }\n    if (gpuContext.isBatchable) {\n      this._initBatchesForRenderable(graphics);\n    }\n    graphics.batched = gpuContext.isBatchable;\n  }\n  _addToBatcher(graphics, instructionSet) {\n    const batchPipe = this.renderer.renderPipes.batch;\n    const batches = this._getBatchesForRenderable(graphics);\n    for (let i = 0; i < batches.length; i++) {\n      const batch = batches[i];\n      batchPipe.addToBatch(batch, instructionSet);\n    }\n  }\n  _getBatchesForRenderable(graphics) {\n    return this._graphicsBatchesHash[graphics.uid] || this._initBatchesForRenderable(graphics);\n  }\n  _initBatchesForRenderable(graphics) {\n    const context = graphics.context;\n    const gpuContext = this.renderer.graphicsContext.getGpuContext(context);\n    const roundPixels = this.renderer._roundPixels | graphics._roundPixels;\n    const batches = gpuContext.batches.map((batch) => {\n      const batchClone = BigPool.get(BatchableGraphics);\n      batch.copyTo(batchClone);\n      batchClone.renderable = graphics;\n      batchClone.roundPixels = roundPixels;\n      return batchClone;\n    });\n    if (this._graphicsBatchesHash[graphics.uid] === void 0) {\n      graphics.on(\"destroyed\", () => {\n        this.destroyRenderable(graphics);\n      });\n    }\n    this._graphicsBatchesHash[graphics.uid] = batches;\n    return batches;\n  }\n  _removeBatchForRenderable(graphicsUid) {\n    this._graphicsBatchesHash[graphicsUid].forEach((batch) => {\n      BigPool.return(batch);\n    });\n    this._graphicsBatchesHash[graphicsUid] = null;\n  }\n  destroy() {\n    this.renderer = null;\n    this._adaptor.destroy();\n    this._adaptor = null;\n    this.state = null;\n    for (const i in this._graphicsBatchesHash) {\n      this._removeBatchForRenderable(i);\n    }\n    this._graphicsBatchesHash = null;\n  }\n}\n/** @ignore */\nGraphicsPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"graphics\"\n};\n\nexport { GraphicsPipe };\n//# sourceMappingURL=GraphicsPipe.mjs.map\n","import { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { MeshGeometry } from '../mesh/shared/MeshGeometry.mjs';\n\n\"use strict\";\nconst _PlaneGeometry = class _PlaneGeometry extends MeshGeometry {\n  constructor(...args) {\n    super({});\n    let options = args[0] ?? {};\n    if (typeof options === \"number\") {\n      deprecation(v8_0_0, \"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead\");\n      options = {\n        width: options,\n        height: args[1],\n        verticesX: args[2],\n        verticesY: args[3]\n      };\n    }\n    this.build(options);\n  }\n  /**\n   * Refreshes plane coordinates\n   * @param options - Options to be applied to plane geometry\n   */\n  build(options) {\n    options = { ..._PlaneGeometry.defaultOptions, ...options };\n    this.verticesX = this.verticesX ?? options.verticesX;\n    this.verticesY = this.verticesY ?? options.verticesY;\n    this.width = this.width ?? options.width;\n    this.height = this.height ?? options.height;\n    const total = this.verticesX * this.verticesY;\n    const verts = [];\n    const uvs = [];\n    const indices = [];\n    const verticesX = this.verticesX - 1;\n    const verticesY = this.verticesY - 1;\n    const sizeX = this.width / verticesX;\n    const sizeY = this.height / verticesY;\n    for (let i = 0; i < total; i++) {\n      const x = i % this.verticesX;\n      const y = i / this.verticesX | 0;\n      verts.push(x * sizeX, y * sizeY);\n      uvs.push(x / verticesX, y / verticesY);\n    }\n    const totalSub = verticesX * verticesY;\n    for (let i = 0; i < totalSub; i++) {\n      const xpos = i % verticesX;\n      const ypos = i / verticesX | 0;\n      const value = ypos * this.verticesX + xpos;\n      const value2 = ypos * this.verticesX + xpos + 1;\n      const value3 = (ypos + 1) * this.verticesX + xpos;\n      const value4 = (ypos + 1) * this.verticesX + xpos + 1;\n      indices.push(\n        value,\n        value2,\n        value3,\n        value2,\n        value4,\n        value3\n      );\n    }\n    this.buffers[0].data = new Float32Array(verts);\n    this.buffers[1].data = new Float32Array(uvs);\n    this.indexBuffer.data = new Uint32Array(indices);\n    this.buffers[0].update();\n    this.buffers[1].update();\n    this.indexBuffer.update();\n  }\n};\n_PlaneGeometry.defaultOptions = {\n  width: 100,\n  height: 100,\n  verticesX: 10,\n  verticesY: 10\n};\nlet PlaneGeometry = _PlaneGeometry;\n\nexport { PlaneGeometry };\n//# sourceMappingURL=PlaneGeometry.mjs.map\n","\"use strict\";\nclass BatchableMesh {\n  constructor() {\n    this.batcher = null;\n    this.batch = null;\n    this.roundPixels = 0;\n    this._uvUpdateId = -1;\n    this._textureMatrixUpdateId = -1;\n  }\n  get blendMode() {\n    return this.mesh.groupBlendMode;\n  }\n  reset() {\n    this.mesh = null;\n    this.texture = null;\n    this.batcher = null;\n    this.batch = null;\n  }\n  packIndex(indexBuffer, index, indicesOffset) {\n    const indices = this.geometry.indices;\n    for (let i = 0; i < indices.length; i++) {\n      indexBuffer[index++] = indices[i] + indicesOffset;\n    }\n  }\n  packAttributes(float32View, uint32View, index, textureId) {\n    const mesh = this.mesh;\n    const geometry = this.geometry;\n    const wt = mesh.groupTransform;\n    const textureIdAndRound = textureId << 16 | this.roundPixels & 65535;\n    const a = wt.a;\n    const b = wt.b;\n    const c = wt.c;\n    const d = wt.d;\n    const tx = wt.tx;\n    const ty = wt.ty;\n    const positions = geometry.positions;\n    const uvBuffer = geometry.getBuffer(\"aUV\");\n    const uvs = uvBuffer.data;\n    let transformedUvs = uvs;\n    const textureMatrix = this.texture.textureMatrix;\n    if (!textureMatrix.isSimple) {\n      transformedUvs = this._transformedUvs;\n      if (this._textureMatrixUpdateId !== textureMatrix._updateID || this._uvUpdateId !== uvBuffer._updateID) {\n        if (!transformedUvs || transformedUvs.length < uvs.length) {\n          transformedUvs = this._transformedUvs = new Float32Array(uvs.length);\n        }\n        this._textureMatrixUpdateId = textureMatrix._updateID;\n        this._uvUpdateId = uvBuffer._updateID;\n        textureMatrix.multiplyUvs(uvs, transformedUvs);\n      }\n    }\n    const abgr = mesh.groupColorAlpha;\n    for (let i = 0; i < positions.length; i += 2) {\n      const x = positions[i];\n      const y = positions[i + 1];\n      float32View[index] = a * x + c * y + tx;\n      float32View[index + 1] = b * x + d * y + ty;\n      float32View[index + 2] = transformedUvs[i];\n      float32View[index + 3] = transformedUvs[i + 1];\n      uint32View[index + 4] = abgr;\n      uint32View[index + 5] = textureIdAndRound;\n      index += 6;\n    }\n  }\n  get vertexSize() {\n    return this.geometry.positions.length / 2;\n  }\n  get indexSize() {\n    return this.geometry.indices.length;\n  }\n}\n\nexport { BatchableMesh };\n//# sourceMappingURL=BatchableMesh.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { BindGroup } from '../../../rendering/renderers/gpu/shader/BindGroup.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { BigPool } from '../../../utils/pool/PoolGroup.mjs';\nimport { color32BitToUniform } from '../../graphics/gpu/colorToUniform.mjs';\nimport { BatchableMesh } from './BatchableMesh.mjs';\n\n\"use strict\";\nclass MeshPipe {\n  constructor(renderer, adaptor) {\n    this.localUniforms = new UniformGroup({\n      uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n      uRound: { value: 0, type: \"f32\" }\n    });\n    this.localUniformsBindGroup = new BindGroup({\n      0: this.localUniforms\n    });\n    this._meshDataHash = /* @__PURE__ */ Object.create(null);\n    this._gpuBatchableMeshHash = /* @__PURE__ */ Object.create(null);\n    this.renderer = renderer;\n    this._adaptor = adaptor;\n    this._adaptor.init();\n  }\n  validateRenderable(mesh) {\n    const meshData = this._getMeshData(mesh);\n    const wasBatched = meshData.batched;\n    const isBatched = mesh.batched;\n    meshData.batched = isBatched;\n    if (wasBatched !== isBatched) {\n      return true;\n    } else if (isBatched) {\n      const geometry = mesh._geometry;\n      if (geometry.indices.length !== meshData.indexSize || geometry.positions.length !== meshData.vertexSize) {\n        meshData.indexSize = geometry.indices.length;\n        meshData.vertexSize = geometry.positions.length;\n        return true;\n      }\n      const batchableMesh = this._getBatchableMesh(mesh);\n      const texture = mesh.texture;\n      if (batchableMesh.texture._source !== texture._source) {\n        if (batchableMesh.texture._source !== texture._source) {\n          return !batchableMesh.batcher.checkAndUpdateTexture(batchableMesh, texture);\n        }\n      }\n    }\n    return false;\n  }\n  addRenderable(mesh, instructionSet) {\n    const batcher = this.renderer.renderPipes.batch;\n    const { batched } = this._getMeshData(mesh);\n    if (batched) {\n      const gpuBatchableMesh = this._getBatchableMesh(mesh);\n      gpuBatchableMesh.texture = mesh._texture;\n      gpuBatchableMesh.geometry = mesh._geometry;\n      batcher.addToBatch(gpuBatchableMesh);\n    } else {\n      batcher.break(instructionSet);\n      instructionSet.add({\n        renderPipeId: \"mesh\",\n        mesh\n      });\n    }\n  }\n  updateRenderable(mesh) {\n    if (mesh.batched) {\n      const gpuBatchableMesh = this._gpuBatchableMeshHash[mesh.uid];\n      gpuBatchableMesh.texture = mesh._texture;\n      gpuBatchableMesh.geometry = mesh._geometry;\n      gpuBatchableMesh.batcher.updateElement(gpuBatchableMesh);\n    }\n  }\n  destroyRenderable(mesh) {\n    this._meshDataHash[mesh.uid] = null;\n    const gpuMesh = this._gpuBatchableMeshHash[mesh.uid];\n    if (gpuMesh) {\n      BigPool.return(gpuMesh);\n      this._gpuBatchableMeshHash[mesh.uid] = null;\n    }\n  }\n  execute({ mesh }) {\n    if (!mesh.isRenderable)\n      return;\n    mesh.state.blendMode = mesh.groupBlendMode;\n    const localUniforms = this.localUniforms;\n    localUniforms.uniforms.uTransformMatrix = mesh.groupTransform;\n    localUniforms.uniforms.uRound = this.renderer._roundPixels | mesh._roundPixels;\n    localUniforms.update();\n    color32BitToUniform(\n      mesh.groupColorAlpha,\n      localUniforms.uniforms.uColor,\n      0\n    );\n    this._adaptor.execute(this, mesh);\n  }\n  _getMeshData(mesh) {\n    return this._meshDataHash[mesh.uid] || this._initMeshData(mesh);\n  }\n  _initMeshData(mesh) {\n    this._meshDataHash[mesh.uid] = {\n      batched: mesh.batched,\n      indexSize: mesh._geometry.indices?.length,\n      vertexSize: mesh._geometry.positions?.length\n    };\n    mesh.on(\"destroyed\", () => {\n      this.destroyRenderable(mesh);\n    });\n    return this._meshDataHash[mesh.uid];\n  }\n  _getBatchableMesh(mesh) {\n    return this._gpuBatchableMeshHash[mesh.uid] || this._initBatchableMesh(mesh);\n  }\n  _initBatchableMesh(mesh) {\n    const gpuMesh = BigPool.get(BatchableMesh);\n    gpuMesh.mesh = mesh;\n    gpuMesh.texture = mesh._texture;\n    gpuMesh.roundPixels = this.renderer._roundPixels | mesh._roundPixels;\n    this._gpuBatchableMeshHash[mesh.uid] = gpuMesh;\n    gpuMesh.mesh = mesh;\n    return gpuMesh;\n  }\n  destroy() {\n    for (const i in this._gpuBatchableMeshHash) {\n      if (this._gpuBatchableMeshHash[i]) {\n        BigPool.return(this._gpuBatchableMeshHash[i]);\n      }\n    }\n    this._gpuBatchableMeshHash = null;\n    this._meshDataHash = null;\n    this.localUniforms = null;\n    this.localUniformsBindGroup = null;\n    this._adaptor.destroy();\n    this._adaptor = null;\n    this.renderer = null;\n  }\n}\n/** @ignore */\nMeshPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"mesh\"\n};\n\nexport { MeshPipe };\n//# sourceMappingURL=MeshPipe.mjs.map\n","import { PlaneGeometry } from '../mesh-plane/PlaneGeometry.mjs';\n\n\"use strict\";\nconst _NineSliceGeometry = class _NineSliceGeometry extends PlaneGeometry {\n  constructor(options = {}) {\n    options = { ..._NineSliceGeometry.defaultOptions, ...options };\n    super({\n      width: options.width,\n      height: options.height,\n      verticesX: 4,\n      verticesY: 4\n    });\n    this.update(options);\n  }\n  /**\n   * Updates the NineSliceGeometry with the options.\n   * @param options - The options of the NineSliceGeometry.\n   */\n  update(options) {\n    this.width = options.width ?? this.width;\n    this.height = options.height ?? this.height;\n    this._originalWidth = options.originalWidth ?? this._originalWidth;\n    this._originalHeight = options.originalHeight ?? this._originalHeight;\n    this._leftWidth = options.leftWidth ?? this._leftWidth;\n    this._rightWidth = options.rightWidth ?? this._rightWidth;\n    this._topHeight = options.topHeight ?? this._topHeight;\n    this._bottomHeight = options.bottomHeight ?? this._bottomHeight;\n    this.updateUvs();\n    this.updatePositions();\n  }\n  /** Updates the positions of the vertices. */\n  updatePositions() {\n    const positions = this.positions;\n    const w = this._leftWidth + this._rightWidth;\n    const scaleW = this.width > w ? 1 : this.width / w;\n    const h = this._topHeight + this._bottomHeight;\n    const scaleH = this.height > h ? 1 : this.height / h;\n    const scale = Math.min(scaleW, scaleH);\n    positions[9] = positions[11] = positions[13] = positions[15] = this._topHeight * scale;\n    positions[17] = positions[19] = positions[21] = positions[23] = this.height - this._bottomHeight * scale;\n    positions[25] = positions[27] = positions[29] = positions[31] = this.height;\n    positions[2] = positions[10] = positions[18] = positions[26] = this._leftWidth * scale;\n    positions[4] = positions[12] = positions[20] = positions[28] = this.width - this._rightWidth * scale;\n    positions[6] = positions[14] = positions[22] = positions[30] = this.width;\n    this.getBuffer(\"aPosition\").update();\n  }\n  /** Updates the UVs of the vertices. */\n  updateUvs() {\n    const uvs = this.uvs;\n    uvs[0] = uvs[8] = uvs[16] = uvs[24] = 0;\n    uvs[1] = uvs[3] = uvs[5] = uvs[7] = 0;\n    uvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\n    uvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\n    const _uvw = 1 / this._originalWidth;\n    const _uvh = 1 / this._originalHeight;\n    uvs[2] = uvs[10] = uvs[18] = uvs[26] = _uvw * this._leftWidth;\n    uvs[9] = uvs[11] = uvs[13] = uvs[15] = _uvh * this._topHeight;\n    uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - _uvw * this._rightWidth;\n    uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - _uvh * this._bottomHeight;\n    this.getBuffer(\"aUV\").update();\n  }\n};\n/** The default options for the NineSliceGeometry. */\n_NineSliceGeometry.defaultOptions = {\n  /** The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n  width: 100,\n  /** The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n  height: 100,\n  /** The width of the left column. */\n  leftWidth: 10,\n  /** The height of the top row. */\n  topHeight: 10,\n  /** The width of the right column. */\n  rightWidth: 10,\n  /** The height of the bottom row. */\n  bottomHeight: 10,\n  /** The original width of the texture */\n  originalWidth: 100,\n  /** The original height of the texture */\n  originalHeight: 100\n};\nlet NineSliceGeometry = _NineSliceGeometry;\n\nexport { NineSliceGeometry };\n//# sourceMappingURL=NineSliceGeometry.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\nimport { BatchableMesh } from '../mesh/shared/BatchableMesh.mjs';\nimport { NineSliceGeometry } from './NineSliceGeometry.mjs';\n\n\"use strict\";\nclass NineSliceSpritePipe {\n  constructor(renderer) {\n    this._gpuSpriteHash = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n  }\n  addRenderable(sprite, _instructionSet) {\n    const gpuSprite = this._getGpuSprite(sprite);\n    if (sprite._didSpriteUpdate)\n      this._updateBatchableSprite(sprite, gpuSprite);\n    this._renderer.renderPipes.batch.addToBatch(gpuSprite);\n  }\n  updateRenderable(sprite) {\n    const gpuSprite = this._gpuSpriteHash[sprite.uid];\n    if (sprite._didSpriteUpdate)\n      this._updateBatchableSprite(sprite, gpuSprite);\n    gpuSprite.batcher.updateElement(gpuSprite);\n  }\n  validateRenderable(sprite) {\n    const texture = sprite._texture;\n    const gpuSprite = this._getGpuSprite(sprite);\n    if (gpuSprite.texture._source !== texture._source) {\n      return !gpuSprite.batcher.checkAndUpdateTexture(gpuSprite, texture);\n    }\n    return false;\n  }\n  destroyRenderable(sprite) {\n    const batchableSprite = this._gpuSpriteHash[sprite.uid];\n    BigPool.return(batchableSprite);\n    this._gpuSpriteHash[sprite.uid] = null;\n  }\n  _updateBatchableSprite(sprite, batchableSprite) {\n    sprite._didSpriteUpdate = false;\n    batchableSprite.geometry.update(sprite);\n    batchableSprite.texture = sprite._texture;\n  }\n  _getGpuSprite(sprite) {\n    return this._gpuSpriteHash[sprite.uid] || this._initGPUSprite(sprite);\n  }\n  _initGPUSprite(sprite) {\n    const batchableMesh = new BatchableMesh();\n    batchableMesh.geometry = new NineSliceGeometry();\n    batchableMesh.mesh = sprite;\n    batchableMesh.texture = sprite._texture;\n    batchableMesh.roundPixels = this._renderer._roundPixels | sprite._roundPixels;\n    this._gpuSpriteHash[sprite.uid] = batchableMesh;\n    sprite.on(\"destroyed\", () => {\n      this.destroyRenderable(sprite);\n    });\n    return batchableMesh;\n  }\n  destroy() {\n    for (const i in this._gpuSpriteHash) {\n      const batchableMesh = this._gpuSpriteHash[i];\n      batchableMesh.geometry.destroy();\n    }\n    this._gpuSpriteHash = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nNineSliceSpritePipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"nineSliceSprite\"\n};\n\nexport { NineSliceSpritePipe };\n//# sourceMappingURL=NineSliceSpritePipe.mjs.map\n","\"use strict\";\nconst tilingBit = {\n  name: \"tiling-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;\n\n            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* wgsl */\n      `\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n\n            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);\n            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;\n            var unclamped = coord;\n            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);\n\n            var bias = 0.;\n\n            if(unclamped.x == coord.x && unclamped.y == coord.y)\n            {\n                bias = -32.;\n            } \n\n            outColor = textureSampleBias(uTexture, uSampler, coord, bias);\n        `\n    )\n  }\n};\nconst tilingBitGl = {\n  name: \"tiling-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n            uniform mat3 uTextureTransform;\n            uniform vec4 uSizeAnchor;\n        \n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;\n\n            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* glsl */\n      `\n            uniform sampler2D uTexture;\n            uniform mat3 uMapCoord;\n            uniform vec4 uClampFrame;\n            uniform vec2 uClampOffset;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n\n        vec2 coord = vUV + ceil(uClampOffset - vUV);\n        coord = (uMapCoord * vec3(coord, 1.0)).xy;\n        vec2 unclamped = coord;\n        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\n        \n        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0\n    \n        `\n    )\n  }\n};\n\nexport { tilingBit, tilingBitGl };\n//# sourceMappingURL=tilingBit.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGpuProgram, compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { localUniformBit, localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBit, roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { tilingBit, tilingBitGl } from './tilingBit.mjs';\n\n\"use strict\";\nlet gpuProgram;\nlet glProgram;\nclass TilingSpriteShader extends Shader {\n  constructor() {\n    gpuProgram ?? (gpuProgram = compileHighShaderGpuProgram({\n      name: \"tiling-sprite-shader\",\n      bits: [\n        localUniformBit,\n        tilingBit,\n        roundPixelsBit\n      ]\n    }));\n    glProgram ?? (glProgram = compileHighShaderGlProgram({\n      name: \"tiling-sprite-shader\",\n      bits: [\n        localUniformBitGl,\n        tilingBitGl,\n        roundPixelsBitGl\n      ]\n    }));\n    const tilingUniforms = new UniformGroup({\n      uMapCoord: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uClampFrame: { value: new Float32Array([0, 0, 1, 1]), type: \"vec4<f32>\" },\n      uClampOffset: { value: new Float32Array([0, 0]), type: \"vec2<f32>\" },\n      uTextureTransform: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uSizeAnchor: { value: new Float32Array([100, 100, 0.5, 0.5]), type: \"vec4<f32>\" }\n    });\n    super({\n      glProgram,\n      gpuProgram,\n      resources: {\n        localUniforms: new UniformGroup({\n          uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n          uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n          uRound: { value: 0, type: \"f32\" }\n        }),\n        tilingUniforms,\n        uTexture: Texture.EMPTY.source,\n        uSampler: Texture.EMPTY.source.style\n      }\n    });\n  }\n  updateUniforms(width, height, matrix, anchorX, anchorY, texture) {\n    const tilingUniforms = this.resources.tilingUniforms;\n    const textureWidth = texture.width;\n    const textureHeight = texture.height;\n    const textureMatrix = texture.textureMatrix;\n    const uTextureTransform = tilingUniforms.uniforms.uTextureTransform;\n    uTextureTransform.set(\n      matrix.a * textureWidth / width,\n      matrix.b * textureWidth / height,\n      matrix.c * textureHeight / width,\n      matrix.d * textureHeight / height,\n      matrix.tx / width,\n      matrix.ty / height\n    );\n    uTextureTransform.invert();\n    tilingUniforms.uniforms.uMapCoord = textureMatrix.mapCoord;\n    tilingUniforms.uniforms.uClampFrame = textureMatrix.uClampFrame;\n    tilingUniforms.uniforms.uClampOffset = textureMatrix.uClampOffset;\n    tilingUniforms.uniforms.uTextureTransform = uTextureTransform;\n    tilingUniforms.uniforms.uSizeAnchor[0] = width;\n    tilingUniforms.uniforms.uSizeAnchor[1] = height;\n    tilingUniforms.uniforms.uSizeAnchor[2] = anchorX;\n    tilingUniforms.uniforms.uSizeAnchor[3] = anchorY;\n    if (texture) {\n      this.resources.uTexture = texture.source;\n      this.resources.uSampler = texture.source.style;\n    }\n  }\n}\n\nexport { TilingSpriteShader };\n//# sourceMappingURL=TilingSpriteShader.mjs.map\n","import { MeshGeometry } from '../../mesh/shared/MeshGeometry.mjs';\n\n\"use strict\";\nclass QuadGeometry extends MeshGeometry {\n  constructor() {\n    super({\n      positions: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n      uvs: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n      indices: new Uint32Array([0, 1, 2, 0, 2, 3])\n    });\n  }\n}\n\nexport { QuadGeometry };\n//# sourceMappingURL=QuadGeometry.mjs.map\n","\"use strict\";\nfunction setPositions(tilingSprite, positions) {\n  const anchorX = tilingSprite.anchor.x;\n  const anchorY = tilingSprite.anchor.y;\n  positions[0] = -anchorX * tilingSprite.width;\n  positions[1] = -anchorY * tilingSprite.height;\n  positions[2] = (1 - anchorX) * tilingSprite.width;\n  positions[3] = -anchorY * tilingSprite.height;\n  positions[4] = (1 - anchorX) * tilingSprite.width;\n  positions[5] = (1 - anchorY) * tilingSprite.height;\n  positions[6] = -anchorX * tilingSprite.width;\n  positions[7] = (1 - anchorY) * tilingSprite.height;\n}\n\nexport { setPositions };\n//# sourceMappingURL=setPositions.mjs.map\n","\"use strict\";\nfunction applyMatrix(array, stride, offset, matrix) {\n  let index = 0;\n  const size = array.length / (stride || 2);\n  const a = matrix.a;\n  const b = matrix.b;\n  const c = matrix.c;\n  const d = matrix.d;\n  const tx = matrix.tx;\n  const ty = matrix.ty;\n  offset *= stride;\n  while (index < size) {\n    const x = array[offset];\n    const y = array[offset + 1];\n    array[offset] = a * x + c * y + tx;\n    array[offset + 1] = b * x + d * y + ty;\n    offset += stride;\n    index++;\n  }\n}\n\nexport { applyMatrix };\n//# sourceMappingURL=applyMatrix.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { applyMatrix } from './applyMatrix.mjs';\n\n\"use strict\";\nfunction setUvs(tilingSprite, uvs) {\n  const texture = tilingSprite.texture;\n  const width = texture.frame.width;\n  const height = texture.frame.height;\n  let anchorX = 0;\n  let anchorY = 0;\n  if (tilingSprite._applyAnchorToTexture) {\n    anchorX = tilingSprite.anchor.x;\n    anchorY = tilingSprite.anchor.y;\n  }\n  uvs[0] = uvs[6] = -anchorX;\n  uvs[2] = uvs[4] = 1 - anchorX;\n  uvs[1] = uvs[3] = -anchorY;\n  uvs[5] = uvs[7] = 1 - anchorY;\n  const textureMatrix = Matrix.shared;\n  textureMatrix.copyFrom(tilingSprite._tileTransform.matrix);\n  textureMatrix.tx /= tilingSprite.width;\n  textureMatrix.ty /= tilingSprite.height;\n  textureMatrix.invert();\n  textureMatrix.scale(tilingSprite.width / width, tilingSprite.height / height);\n  applyMatrix(uvs, 2, 0, textureMatrix);\n}\n\nexport { setUvs };\n//# sourceMappingURL=setUvs.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { State } from '../../rendering/renderers/shared/state/State.mjs';\nimport { RendererType } from '../../rendering/renderers/types.mjs';\nimport { color32BitToUniform } from '../graphics/gpu/colorToUniform.mjs';\nimport { BatchableMesh } from '../mesh/shared/BatchableMesh.mjs';\nimport { MeshGeometry } from '../mesh/shared/MeshGeometry.mjs';\nimport { TilingSpriteShader } from './shader/TilingSpriteShader.mjs';\nimport { QuadGeometry } from './utils/QuadGeometry.mjs';\nimport { setPositions } from './utils/setPositions.mjs';\nimport { setUvs } from './utils/setUvs.mjs';\n\n\"use strict\";\nconst sharedQuad = new QuadGeometry();\nclass TilingSpritePipe {\n  constructor(renderer) {\n    this._tilingSpriteDataHash = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n  }\n  validateRenderable(renderable) {\n    const tilingSpriteData = this._getTilingSpriteData(renderable);\n    const couldBatch = tilingSpriteData.canBatch;\n    this._updateCanBatch(renderable);\n    const canBatch = tilingSpriteData.canBatch;\n    if (canBatch && canBatch === couldBatch) {\n      const { batchableMesh } = tilingSpriteData;\n      if (batchableMesh && batchableMesh.texture._source !== renderable.texture._source) {\n        return !batchableMesh.batcher.checkAndUpdateTexture(batchableMesh, renderable.texture);\n      }\n    }\n    return couldBatch !== canBatch;\n  }\n  addRenderable(tilingSprite, instructionSet) {\n    const batcher = this._renderer.renderPipes.batch;\n    this._updateCanBatch(tilingSprite);\n    const tilingSpriteData = this._getTilingSpriteData(tilingSprite);\n    const { geometry, canBatch } = tilingSpriteData;\n    if (canBatch) {\n      tilingSpriteData.batchableMesh || (tilingSpriteData.batchableMesh = new BatchableMesh());\n      const batchableMesh = tilingSpriteData.batchableMesh;\n      if (tilingSprite._didTilingSpriteUpdate) {\n        tilingSprite._didTilingSpriteUpdate = false;\n        this._updateBatchableMesh(tilingSprite);\n        batchableMesh.geometry = geometry;\n        batchableMesh.mesh = tilingSprite;\n        batchableMesh.texture = tilingSprite._texture;\n      }\n      batchableMesh.roundPixels = this._renderer._roundPixels | tilingSprite._roundPixels;\n      batcher.addToBatch(batchableMesh);\n    } else {\n      batcher.break(instructionSet);\n      tilingSpriteData.shader || (tilingSpriteData.shader = new TilingSpriteShader());\n      this.updateRenderable(tilingSprite);\n      instructionSet.add(tilingSprite);\n    }\n  }\n  execute(tilingSprite) {\n    const { shader } = this._tilingSpriteDataHash[tilingSprite.uid];\n    shader.groups[0] = this._renderer.globalUniforms.bindGroup;\n    const localUniforms = shader.resources.localUniforms.uniforms;\n    localUniforms.uTransformMatrix = tilingSprite.groupTransform;\n    localUniforms.uRound = this._renderer._roundPixels | tilingSprite._roundPixels;\n    color32BitToUniform(\n      tilingSprite.groupColorAlpha,\n      localUniforms.uColor,\n      0\n    );\n    this._renderer.encoder.draw({\n      geometry: sharedQuad,\n      shader,\n      state: State.default2d\n    });\n  }\n  updateRenderable(tilingSprite) {\n    const tilingSpriteData = this._getTilingSpriteData(tilingSprite);\n    const { canBatch } = tilingSpriteData;\n    if (canBatch) {\n      const { batchableMesh } = tilingSpriteData;\n      if (tilingSprite._didTilingSpriteUpdate)\n        this._updateBatchableMesh(tilingSprite);\n      batchableMesh.batcher.updateElement(batchableMesh);\n    } else if (tilingSprite._didTilingSpriteUpdate) {\n      const { shader } = tilingSpriteData;\n      shader.updateUniforms(\n        tilingSprite.width,\n        tilingSprite.height,\n        tilingSprite._tileTransform.matrix,\n        tilingSprite.anchor.x,\n        tilingSprite.anchor.y,\n        tilingSprite.texture\n      );\n    }\n    tilingSprite._didTilingSpriteUpdate = false;\n  }\n  destroyRenderable(tilingSprite) {\n    const tilingSpriteData = this._getTilingSpriteData(tilingSprite);\n    tilingSpriteData.batchableMesh = null;\n    tilingSpriteData.shader?.destroy();\n    this._tilingSpriteDataHash[tilingSprite.uid] = null;\n  }\n  _getTilingSpriteData(renderable) {\n    return this._tilingSpriteDataHash[renderable.uid] || this._initTilingSpriteData(renderable);\n  }\n  _initTilingSpriteData(tilingSprite) {\n    const geometry = new MeshGeometry({\n      indices: sharedQuad.indices,\n      positions: sharedQuad.positions.slice(),\n      uvs: sharedQuad.uvs.slice()\n    });\n    this._tilingSpriteDataHash[tilingSprite.uid] = {\n      canBatch: true,\n      renderable: tilingSprite,\n      geometry\n    };\n    tilingSprite.on(\"destroyed\", () => {\n      this.destroyRenderable(tilingSprite);\n    });\n    return this._tilingSpriteDataHash[tilingSprite.uid];\n  }\n  _updateBatchableMesh(tilingSprite) {\n    const renderableData = this._getTilingSpriteData(tilingSprite);\n    const { geometry } = renderableData;\n    const style = tilingSprite.texture.source.style;\n    if (style.addressMode !== \"repeat\") {\n      style.addressMode = \"repeat\";\n      style.update();\n    }\n    setUvs(tilingSprite, geometry.uvs);\n    setPositions(tilingSprite, geometry.positions);\n  }\n  destroy() {\n    for (const i in this._tilingSpriteDataHash) {\n      this.destroyRenderable(this._tilingSpriteDataHash[i].renderable);\n    }\n    this._tilingSpriteDataHash = null;\n    this._renderer = null;\n  }\n  _updateCanBatch(tilingSprite) {\n    const renderableData = this._getTilingSpriteData(tilingSprite);\n    const texture = tilingSprite.texture;\n    let _nonPowOf2wrapping = true;\n    if (this._renderer.type === RendererType.WEBGL) {\n      _nonPowOf2wrapping = this._renderer.context.supports.nonPowOf2wrapping;\n    }\n    renderableData.canBatch = texture.textureMatrix.isSimple && (_nonPowOf2wrapping || texture.source.isPowerOfTwo);\n    return renderableData.canBatch;\n  }\n}\n/** @ignore */\nTilingSpritePipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"tilingSprite\"\n};\n\nexport { TilingSpritePipe };\n//# sourceMappingURL=TilingSpritePipe.mjs.map\n","\"use strict\";\nconst localUniformMSDFBit = {\n  name: \"local-uniform-msdf-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32,\n                uRound:f32,\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        `\n    ),\n    end: (\n      /* wgsl */\n      `\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* wgsl */\n      `\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n         `\n    ),\n    main: (\n      /* wgsl */\n      ` \n            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));\n        `\n    )\n  }\n};\nconst localUniformMSDFBitGl = {\n  name: \"local-uniform-msdf-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            vColor *= uColor;\n            modelMatrix *= uTransformMatrix;\n        `\n    ),\n    end: (\n      /* glsl */\n      `\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* glsl */\n      `\n            uniform float uDistance;\n         `\n    ),\n    main: (\n      /* glsl */\n      ` \n            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));\n        `\n    )\n  }\n};\n\nexport { localUniformMSDFBit, localUniformMSDFBitGl };\n//# sourceMappingURL=localUniformMSDFBit.mjs.map\n","\"use strict\";\nconst mSDFBit = {\n  name: \"msdf-bit\",\n  fragment: {\n    header: (\n      /* wgsl */\n      `\n            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {\n                \n                // MSDF\n                var median = msdfColor.r + msdfColor.g + msdfColor.b -\n                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n            \n                // SDF\n                median = min(median, msdfColor.a);\n\n                var screenPxDistance = distance * (median - 0.5);\n                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));\n                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);\n                var coverage: f32 = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n             \n            }\n        `\n    )\n  }\n};\nconst mSDFBitGl = {\n  name: \"msdf-bit\",\n  fragment: {\n    header: (\n      /* glsl */\n      `\n            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {\n                \n                // MSDF\n                float median = msdfColor.r + msdfColor.g + msdfColor.b -\n                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n               \n                // SDF\n                median = min(median, msdfColor.a);\n            \n                float screenPxDistance = distance * (median - 0.5);\n                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n           \n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));\n                float gamma = mix(1.0, 1.0 / 2.2, luma);\n                float coverage = pow(shapeColor.a * alpha, gamma);  \n              \n                return coverage;\n            }\n        `\n    )\n  }\n};\n\nexport { mSDFBit, mSDFBitGl };\n//# sourceMappingURL=mSDFBit.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { getMaxTexturesPerBatch } from '../../../rendering/batcher/gl/utils/maxRecommendedTextures.mjs';\nimport { compileHighShaderGpuProgram, compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { colorBit, colorBitGl } from '../../../rendering/high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBit, generateTextureBatchBitGl } from '../../../rendering/high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { roundPixelsBit, roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../../rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { localUniformMSDFBit, localUniformMSDFBitGl } from './shader-bits/localUniformMSDFBit.mjs';\nimport { mSDFBit, mSDFBitGl } from './shader-bits/mSDFBit.mjs';\n\n\"use strict\";\nlet gpuProgram;\nlet glProgram;\nclass SdfShader extends Shader {\n  constructor() {\n    const uniforms = new UniformGroup({\n      uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n      uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uDistance: { value: 4, type: \"f32\" },\n      uRound: { value: 0, type: \"f32\" }\n    });\n    const maxTextures = getMaxTexturesPerBatch();\n    gpuProgram ?? (gpuProgram = compileHighShaderGpuProgram({\n      name: \"sdf-shader\",\n      bits: [\n        colorBit,\n        generateTextureBatchBit(maxTextures),\n        localUniformMSDFBit,\n        mSDFBit,\n        roundPixelsBit\n      ]\n    }));\n    glProgram ?? (glProgram = compileHighShaderGlProgram({\n      name: \"sdf-shader\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        localUniformMSDFBitGl,\n        mSDFBitGl,\n        roundPixelsBitGl\n      ]\n    }));\n    super({\n      glProgram,\n      gpuProgram,\n      resources: {\n        localUniforms: uniforms,\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n  }\n}\n\nexport { SdfShader };\n//# sourceMappingURL=SdfShader.mjs.map\n","import { Cache } from '../../assets/cache/Cache.mjs';\nimport { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\nimport { Graphics } from '../graphics/shared/Graphics.mjs';\nimport { SdfShader } from '../text/sdfShader/SdfShader.mjs';\nimport { BitmapFontManager } from './BitmapFontManager.mjs';\nimport { getBitmapTextLayout } from './utils/getBitmapTextLayout.mjs';\n\n\"use strict\";\nclass BitmapTextPipe {\n  // private _sdfShader: SdfShader;\n  constructor(renderer) {\n    this._gpuBitmapText = {};\n    this._renderer = renderer;\n  }\n  validateRenderable(bitmapText) {\n    const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n    if (bitmapText._didTextUpdate) {\n      bitmapText._didTextUpdate = false;\n      this._updateContext(bitmapText, graphicsRenderable);\n    }\n    return this._renderer.renderPipes.graphics.validateRenderable(graphicsRenderable);\n  }\n  addRenderable(bitmapText, instructionSet) {\n    const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n    syncWithProxy(bitmapText, graphicsRenderable);\n    if (bitmapText._didTextUpdate) {\n      bitmapText._didTextUpdate = false;\n      this._updateContext(bitmapText, graphicsRenderable);\n    }\n    this._renderer.renderPipes.graphics.addRenderable(graphicsRenderable, instructionSet);\n    if (graphicsRenderable.context.customShader) {\n      this._updateDistanceField(bitmapText);\n    }\n  }\n  destroyRenderable(bitmapText) {\n    this._destroyRenderableByUid(bitmapText.uid);\n  }\n  _destroyRenderableByUid(renderableUid) {\n    const context = this._gpuBitmapText[renderableUid].context;\n    if (context.customShader) {\n      BigPool.return(context.customShader);\n      context.customShader = null;\n    }\n    BigPool.return(this._gpuBitmapText[renderableUid]);\n    this._gpuBitmapText[renderableUid] = null;\n  }\n  updateRenderable(bitmapText) {\n    const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n    syncWithProxy(bitmapText, graphicsRenderable);\n    this._renderer.renderPipes.graphics.updateRenderable(graphicsRenderable);\n    if (graphicsRenderable.context.customShader) {\n      this._updateDistanceField(bitmapText);\n    }\n  }\n  _updateContext(bitmapText, proxyGraphics) {\n    const { context } = proxyGraphics;\n    const bitmapFont = BitmapFontManager.getFont(bitmapText.text, bitmapText._style);\n    context.clear();\n    if (bitmapFont.distanceField.type !== \"none\") {\n      if (!context.customShader) {\n        context.customShader = BigPool.get(SdfShader);\n      }\n    }\n    const chars = Array.from(bitmapText.text);\n    const style = bitmapText._style;\n    let currentY = bitmapFont.baseLineOffset;\n    const bitmapTextLayout = getBitmapTextLayout(chars, style, bitmapFont);\n    let index = 0;\n    const padding = style.padding;\n    const scale = bitmapTextLayout.scale;\n    context.translate(\n      -bitmapText._anchor._x * bitmapTextLayout.width - padding,\n      -bitmapText._anchor._y * (bitmapTextLayout.height + bitmapTextLayout.offsetY) - padding\n    ).scale(scale, scale);\n    const tint = bitmapFont.applyFillAsTint ? style._fill.color : 16777215;\n    for (let i = 0; i < bitmapTextLayout.lines.length; i++) {\n      const line = bitmapTextLayout.lines[i];\n      for (let j = 0; j < line.charPositions.length; j++) {\n        const char = chars[index++];\n        const charData = bitmapFont.chars[char];\n        if (charData?.texture) {\n          context.texture(\n            charData.texture,\n            tint ? tint : \"black\",\n            Math.round(line.charPositions[j] + charData.xOffset),\n            Math.round(currentY + charData.yOffset)\n          );\n        }\n      }\n      currentY += bitmapFont.lineHeight;\n    }\n  }\n  _getGpuBitmapText(bitmapText) {\n    return this._gpuBitmapText[bitmapText.uid] || this.initGpuText(bitmapText);\n  }\n  initGpuText(bitmapText) {\n    const proxyRenderable = BigPool.get(Graphics);\n    this._gpuBitmapText[bitmapText.uid] = proxyRenderable;\n    this._updateContext(bitmapText, proxyRenderable);\n    bitmapText.on(\"destroyed\", () => {\n      this.destroyRenderable(bitmapText);\n    });\n    return this._gpuBitmapText[bitmapText.uid];\n  }\n  _updateDistanceField(bitmapText) {\n    const context = this._getGpuBitmapText(bitmapText).context;\n    const fontFamily = bitmapText._style.fontFamily;\n    const dynamicFont = Cache.get(`${fontFamily}-bitmap`);\n    const { a, b, c, d } = bitmapText.groupTransform;\n    const dx = Math.sqrt(a * a + b * b);\n    const dy = Math.sqrt(c * c + d * d);\n    const worldScale = (Math.abs(dx) + Math.abs(dy)) / 2;\n    const fontScale = dynamicFont.baseRenderedFontSize / bitmapText._style.fontSize;\n    const distance = worldScale * dynamicFont.distanceField.range * (1 / fontScale);\n    context.customShader.resources.localUniforms.uniforms.uDistance = distance;\n  }\n  destroy() {\n    for (const uid in this._gpuBitmapText) {\n      this._destroyRenderableByUid(uid);\n    }\n    this._gpuBitmapText = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nBitmapTextPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"bitmapText\"\n};\nfunction syncWithProxy(container, proxy) {\n  proxy.groupTransform = container.groupTransform;\n  proxy.groupColorAlpha = container.groupColorAlpha;\n  proxy.groupColor = container.groupColor;\n  proxy.groupBlendMode = container.groupBlendMode;\n  proxy.globalDisplayStatus = container.globalDisplayStatus;\n  proxy.groupTransform = container.groupTransform;\n  proxy.localDisplayStatus = container.localDisplayStatus;\n  proxy.groupAlpha = container.groupAlpha;\n  proxy._roundPixels = container._roundPixels;\n}\n\nexport { BitmapTextPipe };\n//# sourceMappingURL=BitmapTextPipe.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { Texture } from '../../rendering/renderers/shared/texture/Texture.mjs';\nimport { updateQuadBounds } from '../../utils/data/updateQuadBounds.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\nimport { BatchableSprite } from '../sprite/BatchableSprite.mjs';\n\n\"use strict\";\nclass HTMLTextPipe {\n  constructor(renderer) {\n    this._gpuText = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n  }\n  validateRenderable(htmlText) {\n    const gpuText = this._getGpuText(htmlText);\n    const newKey = htmlText._getKey();\n    if (gpuText.textureNeedsUploading) {\n      gpuText.textureNeedsUploading = false;\n      return true;\n    }\n    if (gpuText.currentKey !== newKey) {\n      return true;\n    }\n    return false;\n  }\n  addRenderable(htmlText) {\n    const gpuText = this._getGpuText(htmlText);\n    const batchableSprite = gpuText.batchableSprite;\n    if (htmlText._didTextUpdate) {\n      this._updateText(htmlText);\n    }\n    this._renderer.renderPipes.batch.addToBatch(batchableSprite);\n  }\n  updateRenderable(htmlText) {\n    const gpuText = this._getGpuText(htmlText);\n    const batchableSprite = gpuText.batchableSprite;\n    if (htmlText._didTextUpdate) {\n      this._updateText(htmlText);\n    }\n    batchableSprite.batcher.updateElement(batchableSprite);\n  }\n  destroyRenderable(htmlText) {\n    this._destroyRenderableById(htmlText.uid);\n  }\n  _destroyRenderableById(htmlTextUid) {\n    const gpuText = this._gpuText[htmlTextUid];\n    this._renderer.htmlText.decreaseReferenceCount(gpuText.currentKey);\n    BigPool.return(gpuText.batchableSprite);\n    this._gpuText[htmlTextUid] = null;\n  }\n  _updateText(htmlText) {\n    const newKey = htmlText._getKey();\n    const gpuText = this._getGpuText(htmlText);\n    const batchableSprite = gpuText.batchableSprite;\n    if (gpuText.currentKey !== newKey) {\n      this._updateGpuText(htmlText).catch((e) => {\n        console.error(e);\n      });\n    }\n    htmlText._didTextUpdate = false;\n    const padding = htmlText._style.padding;\n    updateQuadBounds(batchableSprite.bounds, htmlText._anchor, batchableSprite.texture, padding);\n  }\n  async _updateGpuText(htmlText) {\n    htmlText._didTextUpdate = false;\n    const gpuText = this._getGpuText(htmlText);\n    if (gpuText.generatingTexture)\n      return;\n    const newKey = htmlText._getKey();\n    this._renderer.htmlText.decreaseReferenceCount(gpuText.currentKey);\n    gpuText.generatingTexture = true;\n    gpuText.currentKey = newKey;\n    const resolution = htmlText.resolution ?? this._renderer.resolution;\n    const texture = await this._renderer.htmlText.getManagedTexture(\n      htmlText.text,\n      resolution,\n      htmlText._style,\n      htmlText._getKey()\n    );\n    const batchableSprite = gpuText.batchableSprite;\n    batchableSprite.texture = gpuText.texture = texture;\n    gpuText.generatingTexture = false;\n    gpuText.textureNeedsUploading = true;\n    htmlText.onViewUpdate();\n    const padding = htmlText._style.padding;\n    updateQuadBounds(batchableSprite.bounds, htmlText._anchor, batchableSprite.texture, padding);\n  }\n  _getGpuText(htmlText) {\n    return this._gpuText[htmlText.uid] || this.initGpuText(htmlText);\n  }\n  initGpuText(htmlText) {\n    const gpuTextData = {\n      texture: Texture.EMPTY,\n      currentKey: \"--\",\n      batchableSprite: BigPool.get(BatchableSprite),\n      textureNeedsUploading: false,\n      generatingTexture: false\n    };\n    const batchableSprite = gpuTextData.batchableSprite;\n    batchableSprite.renderable = htmlText;\n    batchableSprite.texture = Texture.EMPTY;\n    batchableSprite.bounds = { minX: 0, maxX: 1, minY: 0, maxY: 0 };\n    batchableSprite.roundPixels = this._renderer._roundPixels | htmlText._roundPixels;\n    this._gpuText[htmlText.uid] = gpuTextData;\n    htmlText.on(\"destroyed\", () => {\n      this.destroyRenderable(htmlText);\n    });\n    return gpuTextData;\n  }\n  destroy() {\n    for (const i in this._gpuText) {\n      this._destroyRenderableById(i);\n    }\n    this._gpuText = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nHTMLTextPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"htmlText\"\n};\n\nexport { HTMLTextPipe };\n//# sourceMappingURL=HTMLTextPipe.mjs.map\n","import { DOMAdapter } from '../../environment/adapter.mjs';\n\n\"use strict\";\nfunction isSafari() {\n  const { userAgent } = DOMAdapter.get().getNavigator();\n  return /^((?!chrome|android).)*safari/i.test(userAgent);\n}\n\nexport { isSafari };\n//# sourceMappingURL=isSafari.mjs.map\n","import { TexturePool } from '../../../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { Bounds } from '../../container/bounds/Bounds.mjs';\n\n\"use strict\";\nconst tempBounds = new Bounds();\nfunction getPo2TextureFromSource(image, width, height, resolution) {\n  const bounds = tempBounds;\n  bounds.minX = 0;\n  bounds.minY = 0;\n  bounds.maxX = image.width / resolution | 0;\n  bounds.maxY = image.height / resolution | 0;\n  const texture = TexturePool.getOptimalTexture(\n    bounds.width,\n    bounds.height,\n    resolution,\n    false\n  );\n  texture.source.uploadMethodId = \"image\";\n  texture.source.resource = image;\n  texture.source.alphaMode = \"premultiply-alpha-on-upload\";\n  texture.frame.width = width / resolution;\n  texture.frame.height = height / resolution;\n  texture.source.emit(\"update\", texture.source);\n  texture.updateUvs();\n  return texture;\n}\n\nexport { getPo2TextureFromSource };\n//# sourceMappingURL=getPo2TextureFromSource.mjs.map\n","\"use strict\";\nfunction extractFontFamilies(text, style) {\n  const fontFamily = style.fontFamily;\n  const fontFamilies = [];\n  const dedupe = {};\n  const regex = /font-family:([^;\"\\s]+)/g;\n  const matches = text.match(regex);\n  function addFontFamily(fontFamily2) {\n    if (!dedupe[fontFamily2]) {\n      fontFamilies.push(fontFamily2);\n      dedupe[fontFamily2] = true;\n    }\n  }\n  if (Array.isArray(fontFamily)) {\n    for (let i = 0; i < fontFamily.length; i++) {\n      addFontFamily(fontFamily[i]);\n    }\n  } else {\n    addFontFamily(fontFamily);\n  }\n  if (matches) {\n    matches.forEach((match) => {\n      const fontFamily2 = match.split(\":\")[1].trim();\n      addFontFamily(fontFamily2);\n    });\n  }\n  for (const i in style.tagStyles) {\n    const fontFamily2 = style.tagStyles[i].fontFamily;\n    addFontFamily(fontFamily2);\n  }\n  return fontFamilies;\n}\n\nexport { extractFontFamilies };\n//# sourceMappingURL=extractFontFamilies.mjs.map\n","import { DOMAdapter } from '../../../environment/adapter.mjs';\n\n\"use strict\";\nasync function loadFontAsBase64(url) {\n  const response = await DOMAdapter.get().fetch(url);\n  const blob = await response.blob();\n  const reader = new FileReader();\n  const dataSrc = await new Promise((resolve, reject) => {\n    reader.onloadend = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsDataURL(blob);\n  });\n  return dataSrc;\n}\n\nexport { loadFontAsBase64 };\n//# sourceMappingURL=loadFontAsBase64.mjs.map\n","import { loadFontAsBase64 } from './loadFontAsBase64.mjs';\n\n\"use strict\";\nasync function loadFontCSS(style, url) {\n  const dataSrc = await loadFontAsBase64(url);\n  return `@font-face {\n        font-family: \"${style.fontFamily}\";\n        src: url('${dataSrc}');\n        font-weight: ${style.fontWeight};\n        font-style: ${style.fontStyle};\n    }`;\n}\n\nexport { loadFontCSS };\n//# sourceMappingURL=loadFontCSS.mjs.map\n","import { Cache } from '../../../assets/cache/Cache.mjs';\nimport { loadFontCSS } from './loadFontCSS.mjs';\n\n\"use strict\";\nconst FontStylePromiseCache = /* @__PURE__ */ new Map();\nasync function getFontCss(fontFamilies, style, defaultOptions) {\n  const fontPromises = fontFamilies.filter((fontFamily) => Cache.has(`${fontFamily}-and-url`)).map((fontFamily, i) => {\n    if (!FontStylePromiseCache.has(fontFamily)) {\n      const { url } = Cache.get(`${fontFamily}-and-url`);\n      if (i === 0) {\n        FontStylePromiseCache.set(fontFamily, loadFontCSS(style, url));\n      } else {\n        FontStylePromiseCache.set(fontFamily, loadFontCSS({\n          fontWeight: defaultOptions.fontWeight,\n          fontStyle: defaultOptions.fontStyle,\n          fontFamily\n        }, url));\n      }\n    }\n    return FontStylePromiseCache.get(fontFamily);\n  });\n  return (await Promise.all(fontPromises)).join(\"\\n\");\n}\n\nexport { FontStylePromiseCache, getFontCss };\n//# sourceMappingURL=getFontCss.mjs.map\n","\"use strict\";\nfunction getSVGUrl(text, style, resolution, fontCSS, htmlTextData) {\n  const { domElement, styleElement, svgRoot } = htmlTextData;\n  domElement.innerHTML = `<style>${style.cssStyle}</style><div>${text}</div>`;\n  domElement.setAttribute(\"style\", `transform: scale(${resolution});transform-origin: top left; display: inline-block`);\n  styleElement.textContent = fontCSS;\n  const { width, height } = htmlTextData.image;\n  svgRoot.setAttribute(\"width\", width.toString());\n  svgRoot.setAttribute(\"height\", height.toString());\n  return new XMLSerializer().serializeToString(svgRoot);\n}\n\nexport { getSVGUrl };\n//# sourceMappingURL=getSVGUrl.mjs.map\n","import { CanvasPool } from '../../../rendering/renderers/shared/texture/CanvasPool.mjs';\n\n\"use strict\";\nfunction getTemporaryCanvasFromImage(image, resolution) {\n  const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(\n    image.width,\n    image.height,\n    resolution\n  );\n  const { context } = canvasAndContext;\n  context.clearRect(0, 0, image.width, image.height);\n  context.drawImage(image, 0, 0);\n  CanvasPool.returnCanvasAndContext(canvasAndContext);\n  return canvasAndContext.canvas;\n}\n\nexport { getTemporaryCanvasFromImage };\n//# sourceMappingURL=getTemporaryCanvasFromImage.mjs.map\n","\"use strict\";\nfunction loadSVGImage(image, url, delay) {\n  return new Promise(async (resolve) => {\n    if (delay) {\n      await new Promise((resolve2) => setTimeout(resolve2, 100));\n    }\n    image.onload = () => {\n      resolve();\n    };\n    image.src = `data:image/svg+xml;charset=utf8,${encodeURIComponent(url)}`;\n    image.crossOrigin = \"anonymous\";\n  });\n}\n\nexport { loadSVGImage };\n//# sourceMappingURL=loadSVGImage.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { TexturePool } from '../../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { RendererType } from '../../rendering/renderers/types.mjs';\nimport { isSafari } from '../../utils/browser/isSafari.mjs';\nimport { warn } from '../../utils/logging/warn.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\nimport { getPo2TextureFromSource } from '../text/utils/getPo2TextureFromSource.mjs';\nimport { HTMLTextRenderData } from './HTMLTextRenderData.mjs';\nimport { HTMLTextStyle } from './HtmlTextStyle.mjs';\nimport { extractFontFamilies } from './utils/extractFontFamilies.mjs';\nimport { getFontCss } from './utils/getFontCss.mjs';\nimport { getSVGUrl } from './utils/getSVGUrl.mjs';\nimport { getTemporaryCanvasFromImage } from './utils/getTemporaryCanvasFromImage.mjs';\nimport { loadSVGImage } from './utils/loadSVGImage.mjs';\nimport { measureHtmlText } from './utils/measureHtmlText.mjs';\n\n\"use strict\";\nclass HTMLTextSystem {\n  constructor(renderer) {\n    this._activeTextures = {};\n    this._renderer = renderer;\n    this._createCanvas = renderer.type === RendererType.WEBGPU;\n  }\n  getTexture(options) {\n    return this._buildTexturePromise(\n      options.text,\n      options.resolution,\n      options.style\n    );\n  }\n  getManagedTexture(text, resolution, style, textKey) {\n    if (this._activeTextures[textKey]) {\n      this._increaseReferenceCount(textKey);\n      return this._activeTextures[textKey].promise;\n    }\n    const promise = this._buildTexturePromise(text, resolution, style).then((texture) => {\n      this._activeTextures[textKey].texture = texture;\n      return texture;\n    });\n    this._activeTextures[textKey] = {\n      texture: null,\n      promise,\n      usageCount: 1\n    };\n    return promise;\n  }\n  async _buildTexturePromise(text, resolution, style) {\n    const htmlTextData = BigPool.get(HTMLTextRenderData);\n    const fontFamilies = extractFontFamilies(text, style);\n    const fontCSS = await getFontCss(\n      fontFamilies,\n      style,\n      HTMLTextStyle.defaultTextStyle\n    );\n    const measured = measureHtmlText(text, style, fontCSS, htmlTextData);\n    const width = Math.ceil(Math.ceil(Math.max(1, measured.width) + style.padding * 2) * resolution);\n    const height = Math.ceil(Math.ceil(Math.max(1, measured.height) + style.padding * 2) * resolution);\n    const image = htmlTextData.image;\n    image.width = width | 0;\n    image.height = height | 0;\n    const svgURL = getSVGUrl(text, style, resolution, fontCSS, htmlTextData);\n    await loadSVGImage(image, svgURL, isSafari() && fontFamilies.length > 0);\n    let resource = image;\n    if (this._createCanvas) {\n      resource = getTemporaryCanvasFromImage(image, resolution);\n    }\n    const texture = getPo2TextureFromSource(resource, image.width, image.height, resolution);\n    if (this._createCanvas) {\n      this._renderer.texture.initSource(texture.source);\n    }\n    BigPool.return(htmlTextData);\n    return texture;\n  }\n  _increaseReferenceCount(textKey) {\n    this._activeTextures[textKey].usageCount++;\n  }\n  decreaseReferenceCount(textKey) {\n    const activeTexture = this._activeTextures[textKey];\n    if (!activeTexture)\n      return;\n    activeTexture.usageCount--;\n    if (activeTexture.usageCount === 0) {\n      if (activeTexture.texture) {\n        this._cleanUp(activeTexture);\n      } else {\n        activeTexture.promise.then((texture) => {\n          activeTexture.texture = texture;\n          this._cleanUp(activeTexture);\n        }).catch(() => {\n          warn(\"HTMLTextSystem: Failed to clean texture\");\n        });\n      }\n      this._activeTextures[textKey] = null;\n    }\n  }\n  _cleanUp(activeTexture) {\n    TexturePool.returnTexture(activeTexture.texture);\n    activeTexture.texture.source.resource = null;\n    activeTexture.texture.source.uploadMethodId = \"unknown\";\n  }\n  getReferenceCount(textKey) {\n    return this._activeTextures[textKey].usageCount;\n  }\n  destroy() {\n    this._activeTextures = null;\n  }\n}\n/** @ignore */\nHTMLTextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem,\n    ExtensionType.CanvasSystem\n  ],\n  name: \"htmlText\"\n};\nHTMLTextSystem.defaultFontOptions = {\n  fontFamily: \"Arial\",\n  fontStyle: \"normal\",\n  fontWeight: \"normal\"\n};\n\nexport { HTMLTextSystem };\n//# sourceMappingURL=HTMLTextSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { updateQuadBounds } from '../../../utils/data/updateQuadBounds.mjs';\nimport { BigPool } from '../../../utils/pool/PoolGroup.mjs';\nimport { BatchableSprite } from '../../sprite/BatchableSprite.mjs';\n\n\"use strict\";\nclass CanvasTextPipe {\n  constructor(renderer) {\n    this._gpuText = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n  }\n  validateRenderable(text) {\n    const gpuText = this._getGpuText(text);\n    const newKey = text._getKey();\n    if (gpuText.currentKey !== newKey) {\n      const resolution = text.resolution ?? this._renderer.resolution;\n      const { width, height } = this._renderer.canvasText.getTextureSize(\n        text.text,\n        resolution,\n        text._style\n      );\n      if (\n        // is only being used by this text:\n        this._renderer.canvasText.getReferenceCount(gpuText.currentKey) === 1 && width === gpuText.texture._source.width && height === gpuText.texture._source.height\n      ) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n  addRenderable(text, _instructionSet) {\n    const gpuText = this._getGpuText(text);\n    const batchableSprite = gpuText.batchableSprite;\n    if (text._didTextUpdate) {\n      this._updateText(text);\n    }\n    this._renderer.renderPipes.batch.addToBatch(batchableSprite);\n  }\n  updateRenderable(text) {\n    const gpuText = this._getGpuText(text);\n    const batchableSprite = gpuText.batchableSprite;\n    if (text._didTextUpdate) {\n      this._updateText(text);\n    }\n    batchableSprite.batcher.updateElement(batchableSprite);\n  }\n  destroyRenderable(text) {\n    this._destroyRenderableById(text.uid);\n  }\n  _destroyRenderableById(textUid) {\n    const gpuText = this._gpuText[textUid];\n    this._renderer.canvasText.decreaseReferenceCount(gpuText.currentKey);\n    BigPool.return(gpuText.batchableSprite);\n    this._gpuText[textUid] = null;\n  }\n  _updateText(text) {\n    const newKey = text._getKey();\n    const gpuText = this._getGpuText(text);\n    const batchableSprite = gpuText.batchableSprite;\n    if (gpuText.currentKey !== newKey) {\n      this._updateGpuText(text);\n    }\n    text._didTextUpdate = false;\n    const padding = text._style.padding;\n    updateQuadBounds(batchableSprite.bounds, text._anchor, batchableSprite.texture, padding);\n  }\n  _updateGpuText(text) {\n    const gpuText = this._getGpuText(text);\n    const batchableSprite = gpuText.batchableSprite;\n    if (gpuText.texture) {\n      this._renderer.canvasText.decreaseReferenceCount(gpuText.currentKey);\n    }\n    gpuText.texture = batchableSprite.texture = this._renderer.canvasText.getManagedTexture(text);\n    gpuText.currentKey = text._getKey();\n    batchableSprite.texture = gpuText.texture;\n  }\n  _getGpuText(text) {\n    return this._gpuText[text.uid] || this.initGpuText(text);\n  }\n  initGpuText(text) {\n    const gpuTextData = {\n      texture: null,\n      currentKey: \"--\",\n      batchableSprite: BigPool.get(BatchableSprite)\n    };\n    gpuTextData.batchableSprite.renderable = text;\n    gpuTextData.batchableSprite.bounds = { minX: 0, maxX: 1, minY: 0, maxY: 0 };\n    gpuTextData.batchableSprite.roundPixels = this._renderer._roundPixels | text._roundPixels;\n    this._gpuText[text.uid] = gpuTextData;\n    this._updateText(text);\n    text.on(\"destroyed\", () => {\n      this.destroyRenderable(text);\n    });\n    return gpuTextData;\n  }\n  destroy() {\n    for (const i in this._gpuText) {\n      this._destroyRenderableById(i);\n    }\n    this._gpuText = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nCanvasTextPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"text\"\n};\n\nexport { CanvasTextPipe };\n//# sourceMappingURL=CanvasTextPipe.mjs.map\n","import { Rectangle } from '../../maths/shapes/Rectangle.mjs';\n\n\"use strict\";\nfunction checkRow(data, width, y) {\n  for (let x = 0, index = 4 * y * width; x < width; ++x, index += 4) {\n    if (data[index + 3] !== 0)\n      return false;\n  }\n  return true;\n}\nfunction checkColumn(data, width, x, top, bottom) {\n  const stride = 4 * width;\n  for (let y = top, index = top * stride + 4 * x; y <= bottom; ++y, index += stride) {\n    if (data[index + 3] !== 0)\n      return false;\n  }\n  return true;\n}\nfunction getCanvasBoundingBox(canvas, resolution = 1) {\n  const { width, height } = canvas;\n  const context = canvas.getContext(\"2d\", {\n    willReadFrequently: true\n  });\n  if (context === null) {\n    throw new TypeError(\"Failed to get canvas 2D context\");\n  }\n  const imageData = context.getImageData(0, 0, width, height);\n  const data = imageData.data;\n  let left = 0;\n  let top = 0;\n  let right = width - 1;\n  let bottom = height - 1;\n  while (top < height && checkRow(data, width, top))\n    ++top;\n  if (top === height)\n    return Rectangle.EMPTY;\n  while (checkRow(data, width, bottom))\n    --bottom;\n  while (checkColumn(data, width, left, top, bottom))\n    ++left;\n  while (checkColumn(data, width, right, top, bottom))\n    --right;\n  ++right;\n  ++bottom;\n  return new Rectangle(left / resolution, top / resolution, (right - left) / resolution, (bottom - top) / resolution);\n}\n\nexport { getCanvasBoundingBox };\n//# sourceMappingURL=getCanvasBoundingBox.mjs.map\n","import { Color } from '../../../color/Color.mjs';\nimport { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { nextPow2 } from '../../../maths/misc/pow2.mjs';\nimport { CanvasPool } from '../../../rendering/renderers/shared/texture/CanvasPool.mjs';\nimport { TexturePool } from '../../../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { getCanvasBoundingBox } from '../../../utils/canvas/getCanvasBoundingBox.mjs';\nimport { deprecation } from '../../../utils/logging/deprecation.mjs';\nimport { TextStyle } from '../TextStyle.mjs';\nimport { getPo2TextureFromSource } from '../utils/getPo2TextureFromSource.mjs';\nimport { CanvasTextMetrics } from './CanvasTextMetrics.mjs';\nimport { fontStringFromTextStyle } from './utils/fontStringFromTextStyle.mjs';\nimport { getCanvasFillStyle } from './utils/getCanvasFillStyle.mjs';\n\n\"use strict\";\nclass CanvasTextSystem {\n  constructor(_renderer) {\n    this._activeTextures = {};\n    this._renderer = _renderer;\n  }\n  getTextureSize(text, resolution, style) {\n    const measured = CanvasTextMetrics.measureText(text || \" \", style);\n    let width = Math.ceil(Math.ceil(Math.max(1, measured.width) + style.padding * 2) * resolution);\n    let height = Math.ceil(Math.ceil(Math.max(1, measured.height) + style.padding * 2) * resolution);\n    width = Math.ceil(width - 1e-6);\n    height = Math.ceil(height - 1e-6);\n    width = nextPow2(width);\n    height = nextPow2(height);\n    return { width, height };\n  }\n  getTexture(options, resolution, style, _textKey) {\n    if (typeof options === \"string\") {\n      deprecation(\"8.0.0\", \"CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments\");\n      options = {\n        text: options,\n        style,\n        resolution\n      };\n    }\n    if (!(options.style instanceof TextStyle)) {\n      options.style = new TextStyle(options.style);\n    }\n    const { texture, canvasAndContext } = this.createTextureAndCanvas(\n      options\n    );\n    this._renderer.texture.initSource(texture._source);\n    CanvasPool.returnCanvasAndContext(canvasAndContext);\n    return texture;\n  }\n  createTextureAndCanvas(options) {\n    const { text, style } = options;\n    const resolution = options.resolution ?? this._renderer.resolution;\n    const measured = CanvasTextMetrics.measureText(text || \" \", style);\n    const width = Math.ceil(Math.ceil(Math.max(1, measured.width) + style.padding * 2) * resolution);\n    const height = Math.ceil(Math.ceil(Math.max(1, measured.height) + style.padding * 2) * resolution);\n    const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(width, height);\n    const { canvas } = canvasAndContext;\n    this.renderTextToCanvas(text, style, resolution, canvasAndContext);\n    const texture = getPo2TextureFromSource(canvas, width, height, resolution);\n    if (style.trim) {\n      const trimmed = getCanvasBoundingBox(canvas, resolution);\n      texture.frame.copyFrom(trimmed);\n      texture.updateUvs();\n    }\n    return { texture, canvasAndContext };\n  }\n  getManagedTexture(text) {\n    const textKey = text._getKey();\n    if (this._activeTextures[textKey]) {\n      this._increaseReferenceCount(textKey);\n      return this._activeTextures[textKey].texture;\n    }\n    const { texture, canvasAndContext } = this.createTextureAndCanvas(text);\n    this._activeTextures[textKey] = {\n      canvasAndContext,\n      texture,\n      usageCount: 1\n    };\n    return texture;\n  }\n  _increaseReferenceCount(textKey) {\n    this._activeTextures[textKey].usageCount++;\n  }\n  decreaseReferenceCount(textKey) {\n    const activeTexture = this._activeTextures[textKey];\n    activeTexture.usageCount--;\n    if (activeTexture.usageCount === 0) {\n      CanvasPool.returnCanvasAndContext(activeTexture.canvasAndContext);\n      TexturePool.returnTexture(activeTexture.texture);\n      const source = activeTexture.texture.source;\n      source.resource = null;\n      source.uploadMethodId = \"unknown\";\n      source.alphaMode = \"no-premultiply-alpha\";\n      this._activeTextures[textKey] = null;\n    }\n  }\n  getReferenceCount(textKey) {\n    return this._activeTextures[textKey].usageCount;\n  }\n  /**\n   * Renders text to its canvas, and updates its texture.\n   *\n   * By default this is used internally to ensure the texture is correct before rendering,\n   * but it can be used called externally, for example from this class to 'pre-generate' the texture from a piece of text,\n   * and then shared across multiple Sprites.\n   * @param text\n   * @param style\n   * @param resolution\n   * @param canvasAndContext\n   */\n  renderTextToCanvas(text, style, resolution, canvasAndContext) {\n    const { canvas, context } = canvasAndContext;\n    const font = fontStringFromTextStyle(style);\n    const measured = CanvasTextMetrics.measureText(text || \" \", style);\n    const lines = measured.lines;\n    const lineHeight = measured.lineHeight;\n    const lineWidths = measured.lineWidths;\n    const maxLineWidth = measured.maxLineWidth;\n    const fontProperties = measured.fontProperties;\n    const height = canvas.height;\n    context.resetTransform();\n    context.scale(resolution, resolution);\n    const padding = style.padding * 2;\n    context.clearRect(0, 0, measured.width + 4 + padding, measured.height + 4 + padding);\n    if (style._stroke?.width) {\n      const strokeStyle = style._stroke;\n      context.lineWidth = strokeStyle.width;\n      context.miterLimit = strokeStyle.miterLimit;\n      context.lineJoin = strokeStyle.join;\n      context.lineCap = strokeStyle.cap;\n    }\n    context.font = font;\n    let linePositionX;\n    let linePositionY;\n    const passesCount = style.dropShadow ? 2 : 1;\n    for (let i = 0; i < passesCount; ++i) {\n      const isShadowPass = style.dropShadow && i === 0;\n      const dsOffsetText = isShadowPass ? Math.ceil(Math.max(1, height) + style.padding * 2) : 0;\n      const dsOffsetShadow = dsOffsetText * resolution;\n      if (isShadowPass) {\n        context.fillStyle = \"black\";\n        context.strokeStyle = \"black\";\n        const shadowOptions = style.dropShadow;\n        const dropShadowColor = shadowOptions.color;\n        const dropShadowAlpha = shadowOptions.alpha;\n        context.shadowColor = Color.shared.setValue(dropShadowColor).setAlpha(dropShadowAlpha).toRgbaString();\n        const dropShadowBlur = shadowOptions.blur * resolution;\n        const dropShadowDistance = shadowOptions.distance * resolution;\n        context.shadowBlur = dropShadowBlur;\n        context.shadowOffsetX = Math.cos(shadowOptions.angle) * dropShadowDistance;\n        context.shadowOffsetY = Math.sin(shadowOptions.angle) * dropShadowDistance + dsOffsetShadow;\n      } else {\n        context.globalAlpha = style._fill?.alpha ?? 1;\n        context.fillStyle = style._fill ? getCanvasFillStyle(style._fill, context) : null;\n        if (style._stroke?.width) {\n          context.strokeStyle = getCanvasFillStyle(style._stroke, context);\n        }\n        context.shadowColor = \"black\";\n      }\n      let linePositionYShift = (lineHeight - fontProperties.fontSize) / 2;\n      if (lineHeight - fontProperties.fontSize < 0) {\n        linePositionYShift = 0;\n      }\n      const strokeWidth = style._stroke?.width ?? 0;\n      for (let i2 = 0; i2 < lines.length; i2++) {\n        linePositionX = strokeWidth / 2;\n        linePositionY = strokeWidth / 2 + i2 * lineHeight + fontProperties.ascent + linePositionYShift;\n        if (style.align === \"right\") {\n          linePositionX += maxLineWidth - lineWidths[i2];\n        } else if (style.align === \"center\") {\n          linePositionX += (maxLineWidth - lineWidths[i2]) / 2;\n        }\n        if (style._stroke?.width) {\n          this._drawLetterSpacing(\n            lines[i2],\n            style,\n            canvasAndContext,\n            linePositionX + style.padding,\n            linePositionY + style.padding - dsOffsetText,\n            true\n          );\n        }\n        if (style._fill !== void 0) {\n          this._drawLetterSpacing(\n            lines[i2],\n            style,\n            canvasAndContext,\n            linePositionX + style.padding,\n            linePositionY + style.padding - dsOffsetText\n          );\n        }\n      }\n    }\n  }\n  /**\n   * Render the text with letter-spacing.\n   * @param text - The text to draw\n   * @param style\n   * @param canvasAndContext\n   * @param x - Horizontal position to draw the text\n   * @param y - Vertical position to draw the text\n   * @param isStroke - Is this drawing for the outside stroke of the\n   *  text? If not, it's for the inside fill\n   */\n  _drawLetterSpacing(text, style, canvasAndContext, x, y, isStroke = false) {\n    const { context } = canvasAndContext;\n    const letterSpacing = style.letterSpacing;\n    let useExperimentalLetterSpacing = false;\n    if (CanvasTextMetrics.experimentalLetterSpacingSupported) {\n      if (CanvasTextMetrics.experimentalLetterSpacing) {\n        context.letterSpacing = `${letterSpacing}px`;\n        context.textLetterSpacing = `${letterSpacing}px`;\n        useExperimentalLetterSpacing = true;\n      } else {\n        context.letterSpacing = \"0px\";\n        context.textLetterSpacing = \"0px\";\n      }\n    }\n    if (letterSpacing === 0 || useExperimentalLetterSpacing) {\n      if (isStroke) {\n        context.strokeText(text, x, y);\n      } else {\n        context.fillText(text, x, y);\n      }\n      return;\n    }\n    let currentPosition = x;\n    const stringArray = CanvasTextMetrics.graphemeSegmenter(text);\n    let previousWidth = context.measureText(text).width;\n    let currentWidth = 0;\n    for (let i = 0; i < stringArray.length; ++i) {\n      const currentChar = stringArray[i];\n      if (isStroke) {\n        context.strokeText(currentChar, currentPosition, y);\n      } else {\n        context.fillText(currentChar, currentPosition, y);\n      }\n      let textStr = \"\";\n      for (let j = i + 1; j < stringArray.length; ++j) {\n        textStr += stringArray[j];\n      }\n      currentWidth = context.measureText(textStr).width;\n      currentPosition += previousWidth - currentWidth + letterSpacing;\n      previousWidth = currentWidth;\n    }\n  }\n  destroy() {\n    this._activeTextures = null;\n  }\n}\n/** @ignore */\nCanvasTextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem,\n    ExtensionType.CanvasSystem\n  ],\n  name: \"canvasText\"\n};\n\nexport { CanvasTextSystem };\n//# sourceMappingURL=CanvasTextSystem.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { ResizePlugin } from './ResizePlugin.mjs';\nimport { TickerPlugin } from './TickerPlugin.mjs';\n\n\"use strict\";\nextensions.add(ResizePlugin);\nextensions.add(TickerPlugin);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { GraphicsContextSystem } from './shared/GraphicsContextSystem.mjs';\nimport { GraphicsPipe } from './shared/GraphicsPipe.mjs';\n\n\"use strict\";\nextensions.add(GraphicsPipe);\nextensions.add(GraphicsContextSystem);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { MeshPipe } from './shared/MeshPipe.mjs';\n\n\"use strict\";\nextensions.add(MeshPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { CanvasTextPipe } from './canvas/CanvasTextPipe.mjs';\nimport { CanvasTextSystem } from './canvas/CanvasTextSystem.mjs';\n\n\"use strict\";\nextensions.add(CanvasTextSystem);\nextensions.add(CanvasTextPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { BitmapTextPipe } from './BitmapTextPipe.mjs';\n\n\"use strict\";\nextensions.add(BitmapTextPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { HTMLTextPipe } from './HTMLTextPipe.mjs';\nimport { HTMLTextSystem } from './HTMLTextSystem.mjs';\n\n\"use strict\";\nextensions.add(HTMLTextSystem);\nextensions.add(HTMLTextPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { TilingSpritePipe } from './TilingSpritePipe.mjs';\n\n\"use strict\";\nextensions.add(TilingSpritePipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { NineSliceSpritePipe } from './NineSliceSpritePipe.mjs';\n\n\"use strict\";\nextensions.add(NineSliceSpritePipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { FilterPipe } from './FilterPipe.mjs';\nimport { FilterSystem } from './FilterSystem.mjs';\n\n\"use strict\";\nextensions.add(FilterSystem);\nextensions.add(FilterPipe);\n//# sourceMappingURL=init.mjs.map\n"],"names":["ResizePlugin","options","dom","width","height","clientWidth","clientHeight","ExtensionType","TickerPlugin","ticker","UPDATE_PRIORITY","Ticker","oldTicker","AbstractBitmapFont","EventEmitter","deprecation","v8_0_0","destroyTextures","i","_a","page","_FillGradient","x0","y0","x1","y1","uid","offset","color","Color","defaultSize","gradientStops","canvas","DOMAdapter","ctx","gradient","stop","Texture","ImageSource","m","Matrix","dx","dy","dist","angle","stops","texture","transform","FillGradient","repetitionMap","FillPattern","repetition","parseSvgPath","parse","length","segment","path","data","_","command","args","type","parseValues","number","numbers","SVGToGraphicsPath","svgPath","commands","subpaths","currentSubPath","lastX","lastY","warn","Circle","x","y","radius","r2","r","w2","distance","out","Rectangle","circle","Ellipse","halfWidth","halfHeight","normx","normy","halfStrokeWidth","innerA","innerB","outerA","outerB","normalizedX","normalizedY","innerEllipse","outerEllipse","ellipse","squaredDistanceToLineSegment","x2","y2","a","b","c","d","dot","lenSq","param","xx","yy","Polygon","points","flat","p","il","polygon","inside","j","xi","yi","xj","yj","strokeWidth","halfStrokeWidthSqrd","iterationLength","minX","maxX","minY","maxY","n","pointsDesc","currentPoint","isCornerWithinStroke","pX","pY","cornerX","cornerY","RoundedRectangle","rectangle","radius2","innerX","innerY","innerWidth","innerHeight","rightBound","bottomBound","buildUvs","vertices","verticesStride","verticesOffset","uvs","uvsOffset","uvsStride","size","matrix","index","tx","ty","buildSimpleUvs","transformVertices","stride","multiplyHexColors","color1","color2","r1","g1","b1","g2","b2","g","BatchableGraphics","indexBuffer","indicesOffset","indices","float32View","uint32View","textureId","geometry","graphics","positions","vertSize","rgb","bgr","argb","wt","textureIdAndRound","gpuBuffer","buildCircle","shape","rx","ry","roundedRect","j1","j2","j3","j4","y22","x02","y02","x12","x22","y12","centerX","centerY","count","centerIndex","closePointEps","curveEps","getOrientationOfPoints","area","square","nx","ny","innerWeight","outerWeight","clockwise","verts","ix","iy","ox","oy","exx","eyy","eix","eiy","eox","eoy","round","cx","cy","sx","sy","ex","ey","cx2p0x","cy2p0y","angle0","angle1","startAngle","angleDiff","absAngleDiff","segCount","angleInc","buildLine","lineStyle","flipAlignment","closed","_verticesStride","_verticesOffset","_indicesOffset","eps","style","alignment","orientation","firstPoint","Point","lastPoint","closedShape","closedPath","midPointX","midPointY","indexCount","indexStart","widthSquared","miterLimitSquared","perpX","perpY","perp1x","perp1y","ratio","dx0","dy0","dx1","dy1","cross","c1","c2","px","py","pDist","imx","imy","omx","omy","smallerInsideSegmentSq","insideWeight","smallerInsideDiagonalSq","eps2","triangulateWithHoles","holes","triangles","earcut","emptyArray","buildPolygon","buildRectangle","rectData","verticesIndex","buildTriangle","buildMap","tempRect","buildContextBatches","context","gpuContext","geometryData","batches","instruction","addTextureToGeometryData","isStroke","shapePath","hole","addShapePathToGeometryData","indexOffset","vertOffset","build","rect","textureUvs","graphicsBatch","BigPool","lastIndex","close","holeIndices","otherPoints","getHoleArrays","holePoints","textureMatrix","holePrimitives","holeArrays","k","holePrimitive","GpuGraphicsContext","GraphicsContextRenderData","BatchGeometry","InstructionSet","_GraphicsContextSystem","batchMode","graphicsData","vertexSize","indexSize","batcher","Batcher","batch","drawBatches","getTextureBatchBindGroup","GraphicsContextSystem","RECURSION_LIMIT","FLT_EPSILON","PATH_DISTANCE_EPSILON","buildAdaptiveBezier","sX","sY","cp1x","cp1y","cp2x","cp2y","eX","eY","smoothness","smoothing","distanceTolerance","begin","recursive","x3","y3","x4","y4","level","x23","y23","x34","y34","x123","y123","x234","y234","x1234","y1234","d2","d3","buildAdaptiveQuadratic","buildArc","start","end","steps","f","t","cs","sn","buildArcTo","fromX","a1","a2","mm","dd","cc","tt","k1","k2","qx","qy","endAngle","TAU","mapToEllipse","cosPhi","sinPhi","out2","xp","yp","approxUnitArc","ang1","ang2","vectorAngle","ux","uy","vx","vy","sign","getArcCenter","largeArcFlag","sweepFlag","pxp","pyp","rxSq","rySq","pxpSq","pypSq","radicant","centerXp","centerYp","vx1","vy1","vx2","vy2","buildArcToSvg","xAxisRotation","lambda","segments","outCurvePoint","curve","roundedShapeArc","vecFrom","pp","len","sharpCorner","p1","p2","pRadius","p3","v1","v2","radDirection","drawDirection","halfAngle","cRadius","lenOut","cX","cY","roundedShapeQuadraticCurve","pointLerp","numPoints","thisPoint","nextPoint","lastEdgeLength","lastOffsetDistance","nextEdgeLength","nextOffsetDistance","tempRectangle","ShapePath","graphicsPath2D","Bounds","fromY","counterclockwise","currentPoly","closePath","w","h","sides","rotation","delta","corner","sideLength","internalAngle","useQuadratic","fillet","maxFillet","inset","right","bottom","dir","chamfer","radiusX","radiusY","lastShape","lx","ly","tempX","bounds","shapePrimitives","shapePrimitive","boundsRect","GraphicsPath","instructions","last","currentX","currentY","cpx1","cpy1","innerRadius","deep","newGraphicsPath2D","cpx2","cpy2","adjustTransform","lastInstruction","currentMatrix","SVGParser","svg","graphicsContext","div","session","renderChildren","fillStyle","strokeStyle","children","f1","s1","parseStyle","pointsString","graphicsPath","parseFloatAttribute","id","defaultValue","value","useFill","useStroke","styleParts","stylePart","key","stroke","fill","isColorLike","isFillPattern","isFillGradient","handleColorLike","defaultStyle","temp","handleFillPattern","handleFillGradient","handleFillObject","sourceStyle","toFillStyle","objectStyle","toStrokeStyle","miterLimit","cap","join","rest","tmpPoint","tempMatrix","_GraphicsContext","clone","tint","dw","dh","alpha","holePath","transformedX","transformedY","cpx","cpy","state","action","padding","_bounds","point","hasHit","shapes","transformedPoint","holeShapes","destroyTextureSource","GraphicsContext","valuesToIterateForKeys","generateTextStyleKey","prop","addFillStyleKey","addStokeStyleKey","addDropShadowKey","dropShadow","_TextStyle","convertV7Tov8Style","fullStyle","thisKey","_b","_c","_d","cb","target","property","newValue","TextStyle","oldStyle","defaults","obj","fontSize","gradientFill","fills","genericFontFamilies","fontStringFromTextStyle","fontSizeString","fontFamilies","fontFamily","contextSettings","_CanvasTextMetrics","result","proto","text","lines","lineWidths","lineHeight","maxLineWidth","fontProperties","wordWrap","textKey","font","lineWidth","letterSpacing","useExperimentalLetterSpacing","line","cache","whiteSpace","collapseSpaces","collapseNewlines","canPrependSpaces","wordWrapWidth","tokens","token","currIsBreakingSpace","lastIsBreakingSpace","tokenWidth","characters","char","lastChar","nextChar","characterWidth","isLastToken","newLine","_nextChar","_token","breakWords","_char","_index","_breakWords","metrics","properties","segmenter","s","CanvasTextMetrics","getCanvasFillStyle","fillPattern","pattern","fillGradient","resolveCharacters","chars","item","startCode","endCode","i2","_DynamicBitmapFont","dynamicOptions","requestedFontSize","charList","self","pageData","textureSource","fontScale","widthScale","maxCharHeight","skipTexture","paddedWidth","paddedHeight","pageData2","xAdvance","frame","newChars","measureCache","first","second","total","amount","textureResolution","canvasAndContext","CanvasPool","resolution","strokeThickness","shadowOptions","dropShadowBlur","dropShadowDistance","descent","DynamicBitmapFont","getBitmapTextLayout","layoutData","currentLine","previousChar","firstWord","currentWord","nextWord","word","position","nextLine","scale","adjustedLetterSpacing","adjustedWordWrapWidth","isEnd","charData","spaceWidth","kerning","nextCharWidth","alignCenter","alignRight","alignJustify","measurementData","indy","spaceIndex","totalSpaces","fontCount","BitmapFontManagerClass","fontFamilyKey","overrideFill","Cache","fnt","dynamicFont","bitmapFont","name","textStyle","flatChars","cacheKey","BitmapFontManager","FilterPipe","renderer","filterEffect","container","instructionSet","_filterEffect","_container","getFastGlobalBounds","_getGlobalBoundsRecursive","manageEffects","localBounds","boundsPool","viewBounds","advanced","getGlobalRenderableBounds","renderables","renderable","quadGeometry","Geometry","FilterSystem","UniformGroup","BindGroup","filters","filterData","colorTextureSource","antialias","blendRequired","enabled","filter","viewPort","TexturePool","inputTexture","backTexture","previousBounds","renderTarget","flip","flop","lastRenderSurface","backgroundResolution","input","output","clear","isFinalTarget","currentIndex","filterUniforms","uniforms","outputFrame","inputSize","inputPixel","inputClamp","globalFrame","outputTexture","filterData2","rootTexture","batchUniforms","RendererType","outputMatrix","sprite","mappedMatrix","worldTransform","Graphics","Container","roundPixels","renderGroup","method","_MeshGeometry","shrinkToFit","positionBuffer","Buffer","BufferUsage","uvBuffer","MeshGeometry","textStyleToCSS","cssStyles","strokeToCSS","dropShadowToCSS","tagStyleToCSS","dropShadowStyle","templates","tagStyles","tagStyle","cssTagStyle","HTMLTextStyle","toAdd","v","toRemove","nssvg","nsxhtml","HTMLTextRenderData","foreignObject","svgRoot","styleElement","domElement","tempHTMLTextRenderData","measureHtmlText","fontStyleCSS","htmlTextRenderData","contentBounds","descenderPadding","GraphicsPipe","adaptor","State","wasBatched","shader","localUniforms","color32BitToUniform","batchPipe","batchClone","graphicsUid","_PlaneGeometry","verticesX","verticesY","sizeX","sizeY","totalSub","xpos","ypos","value2","value3","value4","PlaneGeometry","BatchableMesh","mesh","transformedUvs","abgr","MeshPipe","meshData","isBatched","batchableMesh","batched","gpuBatchableMesh","gpuMesh","_NineSliceGeometry","scaleW","scaleH","_uvw","_uvh","NineSliceGeometry","NineSliceSpritePipe","_instructionSet","gpuSprite","batchableSprite","tilingBit","tilingBitGl","gpuProgram","glProgram","TilingSpriteShader","Shader","compileHighShaderGpuProgram","localUniformBit","roundPixelsBit","compileHighShaderGlProgram","localUniformBitGl","roundPixelsBitGl","tilingUniforms","anchorX","anchorY","textureWidth","textureHeight","uTextureTransform","QuadGeometry","setPositions","tilingSprite","applyMatrix","array","setUvs","sharedQuad","TilingSpritePipe","tilingSpriteData","couldBatch","canBatch","renderableData","_nonPowOf2wrapping","localUniformMSDFBit","localUniformMSDFBitGl","mSDFBit","mSDFBitGl","SdfShader","maxTextures","getMaxTexturesPerBatch","colorBit","generateTextureBatchBit","colorBitGl","generateTextureBatchBitGl","getBatchSamplersUniformGroup","BitmapTextPipe","bitmapText","graphicsRenderable","syncWithProxy","renderableUid","proxyGraphics","bitmapTextLayout","proxyRenderable","worldScale","proxy","HTMLTextPipe","htmlText","gpuText","newKey","htmlTextUid","e","updateQuadBounds","gpuTextData","BatchableSprite","isSafari","userAgent","tempBounds","getPo2TextureFromSource","image","extractFontFamilies","dedupe","regex","matches","addFontFamily","fontFamily2","match","loadFontAsBase64","url","blob","reader","resolve","reject","loadFontCSS","dataSrc","FontStylePromiseCache","getFontCss","defaultOptions","fontPromises","getSVGUrl","fontCSS","htmlTextData","getTemporaryCanvasFromImage","loadSVGImage","delay","resolve2","HTMLTextSystem","promise","measured","svgURL","resource","activeTexture","CanvasTextPipe","textUid","checkRow","checkColumn","top","getCanvasBoundingBox","left","CanvasTextSystem","_renderer","nextPow2","_textKey","trimmed","source","linePositionX","linePositionY","passesCount","isShadowPass","dsOffsetText","dsOffsetShadow","dropShadowColor","dropShadowAlpha","linePositionYShift","_e","currentPosition","stringArray","previousWidth","currentWidth","currentChar","textStr","extensions"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95]}